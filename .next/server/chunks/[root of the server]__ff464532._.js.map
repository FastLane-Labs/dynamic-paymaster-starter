{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/constants.ts"],"sourcesContent":["import { Chain, Hex } from \"viem\";\n\nconst RPC_URL = process.env.NEXT_PUBLIC_RPC_URL as string;\nconst SHBUNDLER_URL = process.env.NEXT_PUBLIC_SHBUNDLER_URL as string;\nconst PAYMASTER_URL = process.env.NEXT_PUBLIC_PAYMASTER_URL as string;\nconst PRIVATE_KEY = process.env.NEXT_PUBLIC_PRIVATE_KEY as Hex;\nconst ADDRESS_HUB = process.env.NEXT_PUBLIC_ADDRESS_HUB as Hex;\nconst SPONSOR_WALLET_PRIVATE_KEY = process.env.NEXT_PUBLIC_SPONSOR_WALLET_PRIVATE_KEY as Hex;\n\nconst CHAIN_ID = 10143;\nconst MIN_BONDED_BALANCE = BigInt(100000000000000000);\n\nconst CHAIN: Chain = {\n  id: Number(CHAIN_ID),\n  name: \"Monad Testnet\",\n  nativeCurrency: {\n    decimals: 18,\n    name: \"Monad\",\n    symbol: \"MON\",\n  },\n  rpcUrls: {\n    default: { http: [RPC_URL] },\n    public: { http: [RPC_URL] },\n  },\n  blockExplorers: {\n    default: { name: \"Monad Explorer\", url: \"https://testnet.monadexplorer.com/\" },\n  },\n};\n\nexport {\n  CHAIN_ID,\n  CHAIN,\n  RPC_URL,\n  SHBUNDLER_URL,\n  PRIVATE_KEY,\n  ADDRESS_HUB,\n  PAYMASTER_URL,\n  MIN_BONDED_BALANCE,\n  SPONSOR_WALLET_PRIVATE_KEY,\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAEA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,WAAW;AACjB,MAAM,qBAAqB,OAAO;AAElC,MAAM,QAAe;IACnB,IAAI,OAAO;IACX,MAAM;IACN,gBAAgB;QACd,UAAU;QACV,MAAM;QACN,QAAQ;IACV;IACA,SAAS;QACP,SAAS;YAAE,MAAM;gBAAC;aAAQ;QAAC;QAC3B,QAAQ;YAAE,MAAM;gBAAC;aAAQ;QAAC;IAC5B;IACA,gBAAgB;QACd,SAAS;YAAE,MAAM;YAAkB,KAAK;QAAqC;IAC/E;AACF","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/user.ts"],"sourcesContent":["import { createPublicClient, createWalletClient, Hex, http } from \"viem\";\nimport {\n  CHAIN,\n  RPC_URL,\n  PAYMASTER_URL,\n  PRIVATE_KEY,\n  SHBUNDLER_URL,\n  SPONSOR_WALLET_PRIVATE_KEY,\n} from \"./constants\";\nimport { toSafeSmartAccount } from \"permissionless/accounts\";\nimport { createBundlerClient, entryPoint07Address } from \"viem/account-abstraction\";\nimport { createPaymasterClient } from \"viem/account-abstraction\";\nimport { privateKeyToAccount } from \"viem/accounts\";\nimport { createSmartAccountClient } from \"permissionless/clients\";\n\n// EOA\nconst EOA = privateKeyToAccount(PRIVATE_KEY);\n\n// user client\nconst userClient = createWalletClient({\n  chain: CHAIN,\n  transport: http(RPC_URL),\n  account: EOA,\n});\n\n// public client\nconst publicClient = createPublicClient({\n  transport: http(RPC_URL),\n  chain: CHAIN,\n});\n\n// paymaster client\nconst paymasterClient = createPaymasterClient({\n  transport: http(PAYMASTER_URL),\n});\n\n// sponsor account\nconst sponsorAccount = privateKeyToAccount(SPONSOR_WALLET_PRIVATE_KEY as Hex)\n\n// sponsor wallet\nconst sponsorWallet = createWalletClient({\n  account: sponsorAccount,\n  chain: CHAIN,\n  transport: http(RPC_URL)\n})\n\n// smart wallet\nconst smartAccount = await toSafeSmartAccount({\n  client: publicClient,\n  entryPoint: {\n    address: entryPoint07Address,\n    version: \"0.7\",\n  },\n  owners: [EOA],\n  version: \"1.4.1\"\n});\n\nconst shBundler = createBundlerClient({\n  transport: http(SHBUNDLER_URL),\n  name: \"shBundler\",\n  account: smartAccount,\n  client: publicClient,\n  chain: CHAIN,\n  paymaster: paymasterClient,\n  paymasterContext: {\n    mode: \"sponsor\",\n    address: sponsorAccount.address,\n  },\n})\n\nconst smartAccountClient = createSmartAccountClient({\n  account: smartAccount,\n  client: publicClient,\n  chain: CHAIN,\n  bundlerTransport: http(SHBUNDLER_URL),\n  paymaster: paymasterClient,\n  paymasterContext: {\n    mode: \"sponsor\",\n    address: sponsorAccount.address,\n  },\n});\n\n\nexport { \n  userClient, \n  publicClient, \n  smartAccount, \n  paymasterClient, \n  sponsorWallet, \n  shBundler,\n  sponsorAccount,\n  smartAccountClient\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAQA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;AAEA,MAAM;AACN,MAAM,MAAM,CAAA,GAAA,gIAAA,CAAA,sBAAmB,AAAD,EAAE,qHAAA,CAAA,cAAW;AAE3C,cAAc;AACd,MAAM,aAAa,CAAA,GAAA,wGAAA,CAAA,qBAAkB,AAAD,EAAE;IACpC,OAAO,qHAAA,CAAA,QAAK;IACZ,WAAW,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE,qHAAA,CAAA,UAAO;IACvB,SAAS;AACX;AAEA,gBAAgB;AAChB,MAAM,eAAe,CAAA,GAAA,wGAAA,CAAA,qBAAkB,AAAD,EAAE;IACtC,WAAW,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE,qHAAA,CAAA,UAAO;IACvB,OAAO,qHAAA,CAAA,QAAK;AACd;AAEA,mBAAmB;AACnB,MAAM,kBAAkB,CAAA,GAAA,4JAAA,CAAA,wBAAqB,AAAD,EAAE;IAC5C,WAAW,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE,qHAAA,CAAA,gBAAa;AAC/B;AAEA,kBAAkB;AAClB,MAAM,iBAAiB,CAAA,GAAA,gIAAA,CAAA,sBAAmB,AAAD,EAAE,qHAAA,CAAA,6BAA0B;AAErE,iBAAiB;AACjB,MAAM,gBAAgB,CAAA,GAAA,wGAAA,CAAA,qBAAkB,AAAD,EAAE;IACvC,SAAS;IACT,OAAO,qHAAA,CAAA,QAAK;IACZ,WAAW,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE,qHAAA,CAAA,UAAO;AACzB;AAEA,eAAe;AACf,MAAM,eAAe,MAAM,CAAA,GAAA,oJAAA,CAAA,qBAAkB,AAAD,EAAE;IAC5C,QAAQ;IACR,YAAY;QACV,SAAS,4JAAA,CAAA,sBAAmB;QAC5B,SAAS;IACX;IACA,QAAQ;QAAC;KAAI;IACb,SAAS;AACX;AAEA,MAAM,YAAY,CAAA,GAAA,4JAAA,CAAA,sBAAmB,AAAD,EAAE;IACpC,WAAW,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE,qHAAA,CAAA,gBAAa;IAC7B,MAAM;IACN,SAAS;IACT,QAAQ;IACR,OAAO,qHAAA,CAAA,QAAK;IACZ,WAAW;IACX,kBAAkB;QAChB,MAAM;QACN,SAAS,eAAe,OAAO;IACjC;AACF;AAEA,MAAM,qBAAqB,CAAA,GAAA,kJAAA,CAAA,2BAAwB,AAAD,EAAE;IAClD,SAAS;IACT,QAAQ;IACR,OAAO,qHAAA,CAAA,QAAK;IACZ,kBAAkB,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE,qHAAA,CAAA,gBAAa;IACpC,WAAW;IACX,kBAAkB;QAChB,MAAM;QACN,SAAS,eAAe,OAAO;IACjC;AACF","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/pages/api/paymaster.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport { toPackedUserOperation, UserOperation } from 'viem/account-abstraction';\nimport { Hex, Address, Client } from 'viem';\nimport paymasterAbi from '../../lib/fastlane/abi/paymaster.json';\nimport addressHubAbi from '../../lib/fastlane/abi/addresshub.json';\nimport shmonadAbi from '../../lib/fastlane/abi/shmonad.json';\nimport { publicClient, sponsorWallet, sponsorAccount } from '@/lib/fastlane/user';\nimport { ADDRESS_HUB, MIN_BONDED_BALANCE } from '@/lib/fastlane/constants';\n\n/**\n * Helper: Read paymaster address directly from the contract\n */\nasync function getPaymasterAddress(): Promise<Address | null> {\n  if (!ADDRESS_HUB) {\n    console.error('ADDRESS_HUB is not defined. Please check your environment variables.');\n    return null;\n  }\n\n  try {\n    const paymasterAddress = await publicClient.readContract({\n      address: ADDRESS_HUB,\n      abi: addressHubAbi,\n      functionName: 'paymaster4337',\n      args: []\n    }) as Address;\n    \n    if (!paymasterAddress || paymasterAddress === '0x0000000000000000000000000000000000000000') {\n      console.error('Invalid paymaster address read from contract');\n      return null;\n    }\n    \n    return paymasterAddress;\n  } catch (error) {\n    console.error('Error reading paymaster address:', error);\n    return null;\n  }\n}\n\nasync function getBondedBalance(smartAccountAddress: Address): Promise<bigint> {\n    const paymasterAddress = await getPaymasterAddress();\n    if (!paymasterAddress) {\n        throw new Error(\"Failed to get paymaster address\");\n    }\n\n    const policyId = (await publicClient.readContract({\n        address: paymasterAddress,\n        abi: paymasterAbi,\n        functionName: 'POLICY_ID',\n        args: []\n      })) as bigint;\n\n    const shMonadAddress = await publicClient.readContract({\n        address: ADDRESS_HUB,\n        abi: addressHubAbi,\n        functionName: 'shMonad',\n        args: []\n    }) as Address;\n    \n    return await publicClient.readContract({\n        address: shMonadAddress,\n        abi: shmonadAbi,\n        functionName: 'balanceOfBonded',\n        args: [policyId, smartAccountAddress]\n    }) as bigint;\n}\n\n/**\n * Helper: Generate and sign paymaster data for a user operation\n */\nasync function signUserOperationWithSponsor(\n  userOperation: UserOperation,\n  validUntil: bigint,\n  validAfter: bigint\n): Promise<{ \n  signature: Hex, \n  paymasterAddress: Address,\n  paymasterData: Hex\n} | null> {\n  try {\n    // Get paymaster address\n    const paymasterAddress = await getPaymasterAddress();\n    if (!paymasterAddress) {\n      console.error('No paymaster address available for signing');\n      return null;\n    }\n    \n    // Validate sponsor wallet\n    if (!sponsorWallet || !sponsorAccount) {\n      console.error('No sponsor wallet available');\n      return null;\n    }\n    \n    // Get hash to sign directly from the contract\n    const hash = await publicClient.readContract({\n      address: paymasterAddress,\n      abi: paymasterAbi,\n      functionName: 'getHash',\n      args: [\n        toPackedUserOperation(userOperation),\n        validUntil,\n        validAfter\n      ]\n    }) as Hex;\n    \n    if (!hash) {\n      throw new Error(`Invalid hash returned from paymaster contract ${paymasterAddress}`);\n    }\n    \n    // Sign hash with sponsor wallet\n    const signature = await sponsorWallet.signMessage({\n      account: sponsorAccount,\n      message: { raw: hash },\n    });\n    \n    console.info('Generated signature for user operation', { \n      sender: userOperation.sender,\n      signature: signature.substring(0, 10) + '...'\n    });\n\n    // Create paymaster data with the signature\n    const paymasterData = paymasterMode(\n      \"sponsor\",\n      validUntil,\n      validAfter,\n      signature as Hex,\n      sponsorWallet\n    ) as Hex;\n    \n    return { \n      signature: signature as Hex, \n      paymasterAddress,\n      paymasterData\n    };\n  } catch (error) {\n    console.error('Failed to sign user operation with sponsor:', error);\n    return null;\n  }\n}\n\n/**\n * Helper: Classify and format error for consistent response\n */\nfunction formatPaymasterError(error: any, id: any): any {\n  const errorMsg = error?.message || 'Unknown error';\n  \n  if (errorMsg.includes('insufficient') && errorMsg.includes('balance')) {\n    return {\n      jsonrpc: '2.0',\n      id,\n      error: { \n        code: -32010, \n        message: 'Paymaster has insufficient balance',\n        data: errorMsg\n      }\n    };\n  }\n  \n  if (errorMsg.includes('policy') || errorMsg.includes('limit')) {\n    return {\n      jsonrpc: '2.0',\n      id,\n      error: { \n        code: -32011, \n        message: 'Policy limit exceeded',\n        data: errorMsg\n      }\n    };\n  }\n  \n  // Default error\n  return {\n    jsonrpc: '2.0',\n    id,\n    error: { \n      code: -32603, \n      message: 'Paymaster internal error',\n      data: errorMsg\n    }\n  };\n}\n\n// Replace the handler function:\n// export default async function handler(req: NextApiRequest, res: NextApiResponse) {\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  // Only accept POST requests\n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n\n  try {\n    const { jsonrpc, id, method, params } = req.body;\n\n    // Validate the JSON-RPC request\n    if (jsonrpc !== '2.0' || !id || !method) {\n      return res.status(400).json({\n        jsonrpc: '2.0',\n        id: id || null,\n        error: { code: -32600, message: 'Invalid request' }\n      });\n    }\n\n    // Handle different RPC methods\n    switch (method) {\n      case 'pm_getPaymasterData':\n        return handleGetPaymasterData(req, res);\n      \n      case 'pm_getPaymasterStubData':\n        return handleGetPaymasterStubData(req, res);\n      \n      default:\n        return res.status(400).json({\n          jsonrpc: '2.0',\n          id,\n          error: { code: -32601, message: 'Method not found' }\n        });\n    }\n  } catch (error) {\n    console.error('RPC handler error:', error);\n    return res.status(500).json({\n      jsonrpc: '2.0',\n      id: req.body?.id || null,\n      error: { code: -32603, message: 'Internal error', data: (error as Error).message }\n    });\n  }\n}\n\n/**\n * Handle pm_getPaymasterData method\n */\nasync function handleGetPaymasterData(req: NextApiRequest, res: NextApiResponse) {\n  const { id, params } = req.body;\n  \n  try {\n    // Extract parameters\n    const [userOperation, entryPointAddress, chainId, context] = params;\n    \n    // QUICK VALIDATION - must respond fast to avoid timeouts\n    if (!userOperation || !userOperation.sender || !entryPointAddress || !chainId || !context.mode || !context.address) {\n      return res.status(400).json({\n        jsonrpc: '2.0',\n        id,\n        error: { \n          code: -32602, \n          message: 'Invalid params',\n          data: 'Required parameters: userOperation, entryPointAddress, chainId, context' \n        }\n      });\n    }\n    \n    if (context.mode === 'sponsor') {\n        return await handlePaymasterWithSponsor(userOperation, id, res, context.address)\n    } else if (context.mode === 'user') {\n        return await handlePaymasterWithoutSponsor(id, res, context.address) \n    } else {\n        return res.status(400).json({\n            jsonrpc: '2.0',\n            id,\n            error: { code: -32602, message: 'Invalid context' }\n        });\n    }\n      \n    \n  } catch (error) {\n    console.error('Error in getPaymasterData:', error);\n    \n    // Format the error for consistent response\n    const errorResponse = formatPaymasterError(error, id);\n    return res.status(500).json(errorResponse);\n  }\n}\n\n/**\n * Handle pm_getPaymasterStubData method\n */\nasync function handleGetPaymasterStubData(req: NextApiRequest, res: NextApiResponse) {\n  const { id, params } = req.body;\n  \n  try {\n    // Extract parameters\n    const [userOperation, entryPointAddress, chainId, context] = params;\n    \n    // Validate required parameters\n    if (!userOperation || !userOperation.sender || !entryPointAddress || !chainId || !context.mode || !context.address) {\n      return res.status(400).json({\n        jsonrpc: '2.0',\n        id,\n        error: { \n          code: -32602, \n          message: 'Invalid params',\n          data: 'Required parameters: userOperation, entryPointAddress, chainId, context' \n        }\n      });\n    }\n\n    if (context.mode === 'sponsor') {\n        return await handlePaymasterWithSponsor(userOperation, id, res, context.address)\n        \n    } else if (context.mode === 'user') {\n        return await handlePaymasterWithoutSponsor(id, res, context.address)\n    } else {\n        return res.status(400).json({\n            jsonrpc: '2.0',\n            id,\n            error: { code: -32602, message: 'Invalid context' }\n        });\n    }\n  } catch (error) {\n    console.error('Error in getPaymasterStubData:', error);\n    \n    // Format the error for consistent response\n    const errorResponse = formatPaymasterError(error, id);\n    return res.status(500).json(errorResponse);\n  }\n}\n\nasync function handlePaymasterWithSponsor(userOperation: UserOperation, id: any, res: NextApiResponse, payorAddress: Address) {\n    const bondedBalance = await getBondedBalance(payorAddress);\n    if (bondedBalance < MIN_BONDED_BALANCE) {\n        return res.status(400).json({\n            jsonrpc: '2.0',\n            id,\n            error: { code: -32602, message: 'Insufficient bonded balance. Visit shmonad.xyz to bond more MON.' }\n        });\n    }\n    // Set validity window (valid for 1 hour)\n    const currentTime = BigInt(Math.floor(Date.now() / 1000));\n    const validUntil = currentTime + BigInt(3600);\n    const validAfter = BigInt(0);\n    \n    // Generate and sign the paymaster data\n    const signResult = await signUserOperationWithSponsor(\n      userOperation as UserOperation, \n      validUntil,\n      validAfter\n    );\n    \n    if (!signResult) {\n      return res.status(500).json({\n        jsonrpc: '2.0',\n        id,\n        error: { \n          code: -32603, \n          message: 'Failed to sign user operation',\n          data: 'Error generating paymaster signature'\n        }\n      });\n    }\n    \n    return res.status(200).json({\n        jsonrpc: '2.0',\n        id,\n        result: {\n          paymaster: signResult.paymasterAddress,\n          paymasterData: signResult.paymasterData,\n          paymasterVerificationGasLimit: '75000',\n          paymasterPostOpGasLimit: '120000',\n          sponsor: {\n            name: 'Fastlane Paymaster'\n          },\n          isFinal: true // This is the final data with real signature\n        }\n    });\n}\n\nasync function handlePaymasterWithoutSponsor(id: any, res: NextApiResponse, payorAddress: Address) {\n    const bondedBalance = await getBondedBalance(payorAddress);\n    if (bondedBalance < MIN_BONDED_BALANCE) {\n        return res.status(400).json({\n            jsonrpc: '2.0',\n            id,\n            error: { code: -32602, message: 'Insufficient bonded balance. Visit shmonad.xyz to bond more MON.' }\n        });\n    }\n    return res.status(200).json({\n        jsonrpc: '2.0',\n        id,\n        result: {\n          paymaster: await getPaymasterAddress(),\n          paymasterData: paymasterMode('user'),\n          paymasterVerificationGasLimit: '75000',\n          paymasterPostOpGasLimit: '120000',\n          sponsor: {\n            name: 'Fastlane Paymaster'\n          },\n          isFinal: true // This is the final data with real signature\n        }\n    });\n}\n\nfunction paymasterMode(\n    mode: \"user\" | \"sponsor\",\n    validUntil?: bigint,\n    validAfter?: bigint,\n    sponsorSignature?: Hex,\n    userClient?: Client\n  ) {\n    if (mode === \"user\") {\n      return \"0x00\" as Hex;\n    } else {\n      if (userClient === undefined) {\n        throw new Error(\"userClient is undefined\");\n      }\n      if (validUntil === undefined) {\n        throw new Error(\"validUntil is undefined\");\n      }\n      if (validAfter === undefined) {\n        throw new Error(\"validAfter is undefined\");\n      }\n      if (sponsorSignature === undefined) {\n        throw new Error(\"sponsorSignature is undefined\");\n      }\n  \n      const accountAddress = userClient.account?.address;\n      if (!accountAddress) {\n        throw new Error(\"userClient.account is undefined\");\n      }\n      return `0x01${accountAddress.slice(2)}${validUntil\n        .toString(16)\n        .padStart(12, \"0\")}${validAfter\n        .toString(16)\n        .padStart(12, \"0\")}${sponsorSignature.slice(2)}`;\n    }\n  }\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,oHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,oHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}