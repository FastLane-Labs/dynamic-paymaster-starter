{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/polyfills.js"],"sourcesContent":["'use client'\nimport { Buffer } from 'buffer/index.js';\n\n/* eslint-disable */\n/**\n * @walletconnect/client and @walletconnect/qrcode-modal use `global` and `Buffer`, respectively.\n * This issue is captured here: https://github.com/WalletConnect/walletconnect-monorepo/issues/341\n * Here are some GH issues of others facing the same problem:\n *   * https://github.com/WalletConnect/walletconnect-monorepo/issues/734\n *   * https://github.com/WalletConnect/walletconnect-monorepo/issues/748\n */\nif (typeof window !== 'undefined') {\n    window.global = globalThis;\n    Object.assign(window, { Buffer });\n}\n"],"names":[],"mappings":";AACA;AADA;;AAGA,kBAAkB,GAClB;;;;;;CAMC,GACD,IAAI,OAAO,WAAW,aAAa;IAC/B,OAAO,MAAM,GAAG;IAChB,OAAO,MAAM,CAAC,QAAQ;QAAE,QAAA,+HAAA,CAAA,SAAM;IAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/package.js"],"sourcesContent":["'use client'\nvar version = \"4.9.2\";\n\nexport { version };\n"],"names":[],"mappings":";;;AAAA;AACA,IAAI,UAAU","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/_virtual/_tslib.js"],"sourcesContent":["'use client'\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nexport { __awaiter, __rest };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;;;;;;8EAa8E,GAE9E,SAAS,OAAO,CAAC,EAAE,CAAC;IAChB,IAAI,IAAI,CAAC;IACT,IAAK,IAAI,KAAK,EAAG,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,OAAO,CAAC,KAAK,GAC9E,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACf,IAAI,KAAK,QAAQ,OAAO,OAAO,qBAAqB,KAAK,YACrD,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,qBAAqB,CAAC,IAAI,IAAI,EAAE,MAAM,EAAE,IAAK;QACpE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,OAAO,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GACzE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzB;IACJ,OAAO;AACX;AAEA,SAAS,UAAU,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;IAChD,SAAS,MAAM,KAAK;QAAI,OAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,OAAO;YAAI,QAAQ;QAAQ;IAAI;IAC3G,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,EAAE,SAAU,OAAO,EAAE,MAAM;QACrD,SAAS,UAAU,KAAK;YAAI,IAAI;gBAAE,KAAK,UAAU,IAAI,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC1F,SAAS,SAAS,KAAK;YAAI,IAAI;gBAAE,KAAK,SAAS,CAAC,QAAQ,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC7F,SAAS,KAAK,MAAM;YAAI,OAAO,IAAI,GAAG,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,IAAI,CAAC,WAAW;QAAW;QAC7G,KAAK,CAAC,YAAY,UAAU,KAAK,CAAC,SAAS,cAAc,EAAE,CAAC,EAAE,IAAI;IACtE;AACJ;AAEA,OAAO,oBAAoB,aAAa,kBAAkB,SAAU,KAAK,EAAE,UAAU,EAAE,OAAO;IAC1F,IAAI,IAAI,IAAI,MAAM;IAClB,OAAO,EAAE,IAAI,GAAG,mBAAmB,EAAE,KAAK,GAAG,OAAO,EAAE,UAAU,GAAG,YAAY;AACnF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/utils/normalizeRpcError/normalizeRpcError.js"],"sourcesContent":["'use client'\nimport { UserRejectedRequestError } from 'viem';\n\n/**\n * Some wallets may not reject some operations following the EIP-1193 standard.\n * This function normalizes the errors to follow the EIP-1193 standard.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst normalizeRpcError = (err) => {\n    /**\n     * When the error already comply with the EIP-1193 standard, we don't need to normalize it\n     */\n    if (err.code === 4001) {\n        throw err;\n    }\n    let mappedError = null;\n    try {\n        mappedError = mapRpcError(err);\n    }\n    catch (e) {\n        // ignore errors when mapping\n    }\n    if (mappedError) {\n        throw mappedError;\n    }\n    /**\n     * If no error is mapped, we rethrow the original error\n     */\n    throw err;\n};\nconst mapRpcError = (err) => {\n    /**\n     * Checks for user rejection error message\n     * Rainbow Extension will return a message like \"User rejected the request\"\n     * BitGet will return a message like \"user reject this request\"\n     * Keplr will return a message that matches \"Request rejected\"\n     */\n    if (typeof err.message === 'string' &&\n        (err.message.includes('User rejected the request') ||\n            err.message.includes('user reject this request') ||\n            err.message === 'Request rejected')) {\n        return new UserRejectedRequestError(err);\n    }\n    return null;\n};\n\nexport { normalizeRpcError };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA;;;CAGC,GACD,8DAA8D;AAC9D,MAAM,oBAAoB,CAAC;IACvB;;KAEC,GACD,IAAI,IAAI,IAAI,KAAK,MAAM;QACnB,MAAM;IACV;IACA,IAAI,cAAc;IAClB,IAAI;QACA,cAAc,YAAY;IAC9B,EACA,OAAO,GAAG;IACN,6BAA6B;IACjC;IACA,IAAI,aAAa;QACb,MAAM;IACV;IACA;;KAEC,GACD,MAAM;AACV;AACA,MAAM,cAAc,CAAC;IACjB;;;;;KAKC,GACD,IAAI,OAAO,IAAI,OAAO,KAAK,YACvB,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,gCAClB,IAAI,OAAO,CAAC,QAAQ,CAAC,+BACrB,IAAI,OAAO,KAAK,kBAAkB,GAAG;QACzC,OAAO,IAAI,6IAAA,CAAA,2BAAwB,CAAC;IACxC;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/ethProviderHelper.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../_virtual/_tslib.js';\nimport { createWalletClient, custom, getAddress } from 'viem';\nimport { ProviderLookup, logger, eventListenerHandlers } from '@dynamic-labs/wallet-connector-core';\nimport { findWalletBookWallet } from '@dynamic-labs/wallet-book';\nimport { getProvidersFromWindow, Eip6963ProviderSingleton } from '@dynamic-labs/utils';\nimport { chainsMap } from '@dynamic-labs/ethereum-core';\nimport { normalizeRpcError } from './utils/normalizeRpcError/normalizeRpcError.js';\n\nclass EthProviderHelper {\n    constructor(connector) {\n        this.walletBookWallet = findWalletBookWallet(connector.walletBook, connector.key);\n        this.connector = connector;\n    }\n    getInstalledProvider() {\n        const eip6963Provider = this.getEip6963Provider();\n        if (eip6963Provider) {\n            return eip6963Provider;\n        }\n        return this.getInjectedProvider();\n    }\n    getInjectedProvider() {\n        const config = this.getInjectedConfig();\n        if (!config ||\n            !config.extensionLocators ||\n            !config.extensionLocators.length)\n            return undefined;\n        return this.installedProviderLookup(config.extensionLocators);\n    }\n    getEip6963Provider() {\n        const { rdns } = this.connector.metadata;\n        if (!rdns) {\n            return undefined;\n        }\n        return this.eip6963ProviderLookup(rdns);\n    }\n    getInjectedConfig() {\n        var _a;\n        const injectedConfig = (_a = this.walletBookWallet) === null || _a === void 0 ? void 0 : _a.injectedConfig;\n        return injectedConfig === null || injectedConfig === void 0 ? void 0 : injectedConfig.find((c) => c.chain === 'evm');\n    }\n    installedProviders() {\n        const config = this.getInjectedConfig();\n        if (!config)\n            return [];\n        const providers = [];\n        if (config.windowLocations) {\n            for (const windowLocation of config.windowLocations) {\n                const foundProviders = getProvidersFromWindow(windowLocation);\n                if (foundProviders && foundProviders.length)\n                    providers.push(...foundProviders);\n            }\n        }\n        if (window.ethereum) {\n            if (!window.ethereum.providers || !window.ethereum.providers.length) {\n                providers.push(window.ethereum);\n            }\n            else {\n                window.ethereum.providers.forEach((p) => providers.push(p));\n            }\n        }\n        return providers;\n    }\n    installedProviderLookup(extensionLocators) {\n        const allInstalledProviders = this.installedProviders();\n        return ProviderLookup(allInstalledProviders, extensionLocators);\n    }\n    eip6963ProviderLookup(rdns) {\n        var _a;\n        const { providers } = Eip6963ProviderSingleton.get();\n        return (_a = providers.find((provider) => { var _a; return ((_a = provider === null || provider === void 0 ? void 0 : provider.info) === null || _a === void 0 ? void 0 : _a.rdns) === rdns; })) === null || _a === void 0 ? void 0 : _a.provider;\n    }\n    isInstalledHelper() {\n        return this.findProvider() !== undefined;\n    }\n    findProvider() {\n        return this.connector.findProvider();\n    }\n    findWalletClient(chainId) {\n        const provider = this.findProvider();\n        if (!provider) {\n            return undefined;\n        }\n        return createWalletClient({\n            account: this.connector.getActiveAccount(),\n            chain: chainId ? chainsMap[chainId] : this.connector.getActiveChain(),\n            transport: custom({\n                request: (args) => provider.request(args).catch(normalizeRpcError),\n            }),\n        });\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const client = this.findWalletClient();\n            if (!client) {\n                return Promise.resolve(undefined);\n            }\n            return this.getAddressWithProvider(client);\n        });\n    }\n    getAddressWithProvider(client) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const [lowercaseAddress] = yield client.requestAddresses();\n                const publicAddress = getAddress(lowercaseAddress);\n                this.connector.setActiveAccount(publicAddress);\n                return publicAddress;\n            }\n            catch (err) {\n                logger.error(err);\n                return Promise.reject(err);\n            }\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletAddress = yield this.getAddress();\n            if (!walletAddress) {\n                return Promise.resolve(undefined);\n            }\n            const client = this.findWalletClient();\n            if (!client) {\n                return Promise.resolve(undefined);\n            }\n            const signedMessage = yield client.signMessage({\n                account: walletAddress,\n                message: messageToSign,\n            });\n            return signedMessage;\n        });\n    }\n    _setupEventListeners(walletConnector) {\n        const web3Provider = this.findProvider();\n        if (!web3Provider) {\n            logger.warn('Provider not found', {\n                connector: walletConnector,\n            });\n            return {\n                tearDownEventListeners: () => { },\n            };\n        }\n        if (!web3Provider.on) {\n            logger.warn('Provider does not support event listeners', {\n                connector: walletConnector,\n                provider: web3Provider,\n            });\n            return {\n                tearDownEventListeners: () => { },\n            };\n        }\n        const { handleAccountChange, handleChainChange, handleDisconnect } = eventListenerHandlers(walletConnector);\n        web3Provider.on('accountsChanged', handleAccountChange);\n        web3Provider.on('chainChanged', handleChainChange);\n        web3Provider.on('disconnect', handleDisconnect);\n        const tearDownEventListeners = () => {\n            const web3Provider = this.findProvider();\n            if (!web3Provider) {\n                return;\n            }\n            if (handleAccountChange) {\n                web3Provider.removeListener('accountsChanged', handleAccountChange);\n            }\n            if (handleChainChange) {\n                web3Provider.removeListener('chainChanged', handleChainChange);\n            }\n            if (handleDisconnect) {\n                web3Provider.removeListener('disconnect', handleDisconnect);\n            }\n        };\n        return {\n            tearDownEventListeners,\n        };\n    }\n}\n\nexport { EthProviderHelper };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/utils/logger.js"],"sourcesContent":["'use client'\nimport { Logger } from '@dynamic-labs/logger';\n\nconst logger = new Logger('@dynamic-labs/ethereum');\n\nexport { logger };\n"],"names":[],"mappings":";;;AACA;AAAA;AADA;;AAGA,MAAM,SAAS,IAAI,2KAAA,CAAA,SAAM,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/walletConnect/WalletConnectProvider/WalletConnectProvider.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../_virtual/_tslib.js';\nimport EthereumProvider from '@walletconnect/ethereum-provider';\nimport { performPlatformSpecificConnectionMethod } from '@dynamic-labs/wallet-connector-core';\nimport { parseIntSafe, DynamicError } from '@dynamic-labs/utils';\nimport { logger } from '../../utils/logger.js';\n\nvar _a;\nclass WalletConnectProvider {\n    constructor() {\n        throw new Error('WalletConnectProvider is not instantiable');\n    }\n    static getMappedChainsByPreferredOrder() {\n        const allChains = _a.enabledNetworks.map((network) => `eip155:${network.chainId}`);\n        const reorderedChains = _a.preferredChains.filter((chain) => allChains.includes(chain));\n        const remainingChains = allChains.filter((chain) => !_a.preferredChains.includes(chain));\n        return [...reorderedChains, ...remainingChains].map((chain) => Number(chain.split(':')[1]));\n    }\n}\n_a = WalletConnectProvider;\nWalletConnectProvider.isInitializing = false;\nWalletConnectProvider.isInitialized = false;\nWalletConnectProvider.enabledNetworks = [];\nWalletConnectProvider.preferredChains = [];\nWalletConnectProvider.evmNetworkRpcMap = {};\nWalletConnectProvider.eventListenersSetup = false;\nWalletConnectProvider.accountChangedHandler = () => { };\nWalletConnectProvider.chainChangedHandler = () => { };\nWalletConnectProvider.disconnectHandler = () => { };\n/**\n * Initializes the provider. This method should only be called once.\n * Does not start a connection.\n */\nWalletConnectProvider.init = (...args_1) => __awaiter(void 0, [...args_1], void 0, function* ({ storePrefix = 'dynamic-wc2', } = {}) {\n    logger.debug('[WalletConnectProvider] init', {\n        isInitialized: _a.isInitialized,\n        isInitializing: _a.isInitializing,\n    });\n    if (_a.isInitializing ||\n        _a.isInitialized) {\n        return;\n    }\n    _a.isInitializing = true;\n    logger.debug('[WalletConnectProvider] initializing');\n    _a.providerInitPromise = EthereumProvider.init({\n        customStoragePrefix: storePrefix,\n        disableProviderPing: true,\n        optionalChains: _a.getMappedChainsByPreferredOrder(),\n        optionalEvents: ['chainChanged', 'accountsChanged'],\n        optionalMethods: [\n            'eth_chainId',\n            'eth_signTypedData',\n            'eth_signTransaction',\n            'eth_sign',\n            'personal_sign',\n            'eth_sendTransaction',\n            'eth_signTypedData_v4',\n            'wallet_switchEthereumChain',\n            'wallet_addEthereumChain',\n        ],\n        projectId: _a.projectId,\n        rpcMap: _a.evmNetworkRpcMap,\n        showQrModal: false,\n    });\n    _a.provider =\n        yield _a.providerInitPromise;\n    _a.isInitialized = true;\n    _a.isInitializing = false;\n    logger.debug('[WalletConnectProvider] initialized');\n});\n/**\n * Connects to a wallet. This method should be called whenever a new wallet connection is needed.\n * If the wallet is already connected when the page is refreshed, this method does not need to be called.\n */\nWalletConnectProvider.connect = (_b) => __awaiter(void 0, [_b], void 0, function* ({ deepLinks, deepLinkPreference, connectionOpts, }) {\n    const handleDisplayURI = (uri) => {\n        var _b;\n        logger.debug('[WalletConnectProvider] handleDisplayURI', uri);\n        _a.connectionUri = uri;\n        performPlatformSpecificConnectionMethod(_a.connectionUri, deepLinks, {\n            onDesktopUri: connectionOpts === null || connectionOpts === void 0 ? void 0 : connectionOpts.onDesktopUri,\n            onDisplayUri: connectionOpts === null || connectionOpts === void 0 ? void 0 : connectionOpts.onDisplayUri,\n        }, deepLinkPreference);\n        logger.debug('[WalletConnectProvider] removing display_uri event listener');\n        (_b = _a.provider) === null || _b === void 0 ? void 0 : _b.off('display_uri', handleDisplayURI);\n    };\n    if (!_a.provider) {\n        logger.error('[WalletConnectProvider] connect - provider is not initialized');\n        throw new DynamicError('WalletConnectProvider is not initialized');\n    }\n    // this is in case the user just cancels the deeplink prompt (i.e. in mobile/Safari)\n    // in this case, the connection is not rejected, so the \"enable\" promise is just pending\n    // so on retry, we should just use the same uri to handle that promise\n    if (_a.connectionUri) {\n        handleDisplayURI(_a.connectionUri);\n        return;\n    }\n    logger.debug('[WalletConnectProvider] adding display_uri event listener');\n    _a.provider.on('display_uri', handleDisplayURI);\n    try {\n        // enable = connect to the provider\n        const result = yield _a.provider.enable();\n        logger.debug('[WalletConnectProvider] connected to WalletConnect', result);\n        return result;\n    }\n    catch (error) {\n        logger.error('[WalletConnectProvider] Failed to connect to WalletConnect', error);\n        const customError = new DynamicError('Connection rejected. Please try again.');\n        customError.code = 'connection_rejected';\n        throw customError;\n    }\n    finally {\n        // Reset the connection URI after it's been consumed\n        _a.connectionUri = undefined;\n    }\n});\n/**\n * Disconnects from a wallet. This method should be called whenever we need to disconnect from a wallet.\n * It will kill the connection, but not the provider.\n */\nWalletConnectProvider.disconnect = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (!_a.provider) {\n        logger.debug('[WalletConnectProvider] disconnect - provider is not initialized');\n        return;\n    }\n    _a.connectionUri = undefined;\n    logger.debug('[WalletConnectProvider] disconnecting from WalletConnect');\n    try {\n        yield _a.provider.disconnect();\n    }\n    catch (error) {\n        logger.error('[WalletConnectProvider] Failed to disconnect from WalletConnect', error);\n    }\n});\n/**\n * Waits for the provider to be initialized and returns the EthereumProvider instance.\n * We should use this wherever possible (async methods), to ensure the provider is initialized.\n */\nWalletConnectProvider.awaitAndGetProvider = () => __awaiter(void 0, void 0, void 0, function* () { return _a.providerInitPromise; });\n/**\n * Returns the EthereumProvider instance.\n * Used when we need to access the provider synchronously.\n */\nWalletConnectProvider.getProvider = () => _a.provider;\nWalletConnectProvider.getConnectionUri = () => _a.connectionUri;\nWalletConnectProvider.handleChainChangedEvent = (chain, onChainChanged) => {\n    logger.debug('[WalletConnectProvider] handling chain change event', {\n        chain,\n    });\n    const chainId = parseIntSafe(chain);\n    if (!chainId) {\n        return;\n    }\n    onChainChanged === null || onChainChanged === void 0 ? void 0 : onChainChanged(chainId);\n};\nWalletConnectProvider.handleAccountChangedEvent = (accounts, onAccountChanged) => {\n    logger.debug('[WalletConnectProvider] handling account change event', {\n        accounts,\n    });\n    const [account] = accounts;\n    const address = account.includes(':') ? account.split(':').pop() : account;\n    if (!address) {\n        return;\n    }\n    onAccountChanged === null || onAccountChanged === void 0 ? void 0 : onAccountChanged(address);\n};\n/**\n * Sets up event listeners for the provider.\n */\nWalletConnectProvider.setupEventListeners = ({ onChainChanged, onAccountChanged, onDisconnect, }) => {\n    if (!_a.provider ||\n        _a.eventListenersSetup) {\n        return;\n    }\n    _a.chainChangedHandler = (chainId) => {\n        _a.handleChainChangedEvent(chainId, onChainChanged);\n    };\n    _a.accountChangedHandler = (account) => {\n        _a.handleAccountChangedEvent(account, onAccountChanged);\n    };\n    _a.disconnectHandler = () => {\n        logger.debug('[WalletConnectProvider] handling disconnect event');\n        onDisconnect === null || onDisconnect === void 0 ? void 0 : onDisconnect();\n    };\n    _a.provider.on('accountsChanged', _a.accountChangedHandler);\n    _a.provider.on('chainChanged', _a.chainChangedHandler);\n    _a.provider.on('disconnect', _a.disconnectHandler);\n    _a.eventListenersSetup = true;\n};\n/**\n * Tears down event listeners for the provider.\n */\nWalletConnectProvider.teardownEventListeners = () => {\n    if (!_a.provider ||\n        !_a.eventListenersSetup) {\n        return;\n    }\n    _a.provider.off('accountsChanged', _a.accountChangedHandler);\n    _a.provider.off('chainChanged', _a.chainChangedHandler);\n    _a.provider.off('disconnect', _a.disconnectHandler);\n    _a.eventListenersSetup = false;\n};\n\nexport { WalletConnectProvider };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/walletConnect/WalletConnectConnector/WalletConnectConnector.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../_virtual/_tslib.js';\nimport { createWalletClient, custom } from 'viem';\nimport { toAccount } from 'viem/accounts';\nimport { EthereumWalletConnector, chainsMap } from '@dynamic-labs/ethereum-core';\nimport { StorageService, parseIntSafe, DynamicError, isMobile, PlatformService } from '@dynamic-labs/utils';\nimport { logger, getDeepLink } from '@dynamic-labs/wallet-connector-core';\nimport { normalizeRpcError } from '../../utils/normalizeRpcError/normalizeRpcError.js';\nimport { WalletConnectProvider } from '../WalletConnectProvider/WalletConnectProvider.js';\n\nconst WC_CURRENT_CHAIN_KEY = 'dynamic-wc2-current-chain';\nclass WalletConnectConnector extends EthereumWalletConnector {\n    constructor(opts) {\n        super(opts);\n        this.canConnectViaQrCode = true;\n        this.isWalletConnect = true;\n        this.name = opts.walletName;\n        this.deepLinkPreference = opts.deepLinkPreference || 'native';\n        const storedChainId = StorageService.getItem(WC_CURRENT_CHAIN_KEY);\n        if (storedChainId) {\n            this.currentChainId = parseIntSafe(storedChainId);\n        }\n        if (!opts.projectId) {\n            throw new DynamicError('WalletConnect project ID is required');\n        }\n        // set provider props generic to all wallets\n        WalletConnectProvider.projectId = opts.projectId;\n        WalletConnectProvider.enabledNetworks = opts.evmNetworks;\n        WalletConnectProvider.preferredChains =\n            opts.walletConnectPreferredChains || [];\n        WalletConnectProvider.evmNetworkRpcMap = this.evmNetworkRpcMap();\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] init called', {\n                isInitialized: WalletConnectProvider.isInitialized,\n                isInitializing: WalletConnectProvider.isInitializing,\n            });\n            // we should only init the provider once as soon as possible\n            // the connection is established when a wallet is selected (with getAddress)\n            if (WalletConnectProvider.isInitialized ||\n                WalletConnectProvider.isInitializing) {\n                logger.debug('[WalletConnect] init - already initialized or initializing - skipping');\n                return;\n            }\n            logger.debug('[WalletConnect] init');\n            this.walletConnectorEventsEmitter.emit('connectorInitStarted', 'walletconnect');\n            try {\n                yield WalletConnectProvider.init();\n            }\n            catch (error) {\n                logger.error('[WalletConnect] init - error', error);\n                throw new DynamicError('WalletConnectProvider failed to initialize');\n            }\n            this.setupWCEventListeners();\n            this.walletConnectorEventsEmitter.emit('connectorInitCompleted', 'walletconnect');\n        });\n    }\n    setupWCEventListeners() {\n        logger.debug('[WalletConnect] setupWCEventListeners');\n        WalletConnectProvider.teardownEventListeners();\n        WalletConnectProvider.setupEventListeners({\n            onAccountChanged: (account) => {\n                logger.debug('[WalletConnect] onAccountChanged', { account });\n                this.emit('accountChange', { accounts: [account] });\n            },\n            onChainChanged: (chainId) => {\n                logger.debug('[WalletConnect] onChainChange', { chainId });\n                if (chainId === this.currentChainId) {\n                    logger.debug(`[WalletConnect] onChainChange - ignoring chainChanged event with same chain id as current chain id: ${chainId}`);\n                    return;\n                }\n                this.currentChainId = chainId;\n                this.emit('chainChange', { chain: String(chainId) });\n            },\n            onDisconnect: () => {\n                logger.debug('[WalletConnect] onDisconnect');\n                this.endSession();\n                this.emit('disconnect');\n            },\n        });\n    }\n    endSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            logger.debug('[WalletConnect] endSession');\n            this.currentChainId = undefined;\n            yield WalletConnectProvider.disconnect();\n        });\n    }\n    getAddress(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            logger.debug('[WalletConnect] getAddress', opts);\n            const provider = yield WalletConnectProvider.awaitAndGetProvider();\n            logger.debug('[WalletConnect] getAddress - connecting to WalletConnect', {\n                provider,\n            });\n            const addresses = yield WalletConnectProvider.connect({\n                connectionOpts: opts,\n                deepLinkPreference: this.deepLinkPreference,\n                deepLinks: this.metadata.deepLinks,\n            });\n            logger.debug('[WalletConnect] getAddress - connection result', addresses);\n            const address = addresses === null || addresses === void 0 ? void 0 : addresses[0];\n            return address;\n        });\n    }\n    getWalletClient(chainId) {\n        logger.logVerboseTroubleshootingMessage('[WalletConnect] getWalletClient was called - chainId', chainId);\n        const provider = WalletConnectProvider.getProvider();\n        if (!provider) {\n            logger.debug('[WalletConnect] getWalletClient - provider is not initialized');\n            throw new DynamicError('WalletConnectProvider is not initialized');\n        }\n        const walletClient = createWalletClient({\n            account: this.getActiveAccount(),\n            chain: chainsMap[chainId !== null && chainId !== void 0 ? chainId : String(this.currentChainId)],\n            transport: custom({\n                request: (args) => {\n                    this.deepLinkIfApplicable(args.method);\n                    return provider.request(args).catch(normalizeRpcError);\n                },\n            }),\n        });\n        return walletClient;\n    }\n    deepLinkIfApplicable(method) {\n        const methodsThatRequireDeepLink = [\n            'personal_sign',\n            'eth_sendTransaction',\n            'eth_signTypedData_v4',\n        ];\n        const deepLink = this.getDeepLink();\n        if (isMobile() && deepLink && methodsThatRequireDeepLink.includes(method)) {\n            PlatformService.openURL(deepLink);\n        }\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] signMessage', messageToSign);\n            const activeAccount = this.getActiveAccount();\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] signMessage - activeAccount', activeAccount);\n            if (!activeAccount) {\n                return;\n            }\n            const walletClient = yield this.getWalletClient();\n            return walletClient.signMessage({\n                account: activeAccount,\n                message: messageToSign,\n            });\n        });\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const activeAccount = this.getActiveAccount();\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] getConnectedAccounts - activeAccount', activeAccount);\n            return activeAccount ? [activeAccount.address] : [];\n        });\n    }\n    getActiveAccount() {\n        var _a;\n        const provider = WalletConnectProvider.getProvider();\n        const connectedAccount = (_a = provider === null || provider === void 0 ? void 0 : provider.accounts) === null || _a === void 0 ? void 0 : _a[0];\n        logger.logVerboseTroubleshootingMessage('[WalletConnect] getActiveAccount - connectedAccount', connectedAccount);\n        if (!connectedAccount) {\n            return undefined;\n        }\n        return toAccount(connectedAccount);\n    }\n    get currentChainId() {\n        const lsCurrentChain = StorageService.getItem(WC_CURRENT_CHAIN_KEY);\n        try {\n            return lsCurrentChain ? parseIntSafe(lsCurrentChain) : undefined;\n        }\n        catch (e) {\n            logger.debug('[WalletConnect] getCurrentChainId - error', e);\n            return undefined;\n        }\n    }\n    set currentChainId(value) {\n        if (value) {\n            StorageService.setItem(WC_CURRENT_CHAIN_KEY, value.toString());\n        }\n        else {\n            StorageService.removeItem(WC_CURRENT_CHAIN_KEY);\n        }\n    }\n    getActiveChain() {\n        if (!this.currentChainId) {\n            return undefined;\n        }\n        return chainsMap[this.currentChainId];\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] getNetwork');\n            const provider = yield WalletConnectProvider.awaitAndGetProvider();\n            if (provider === null || provider === void 0 ? void 0 : provider.chainId) {\n                const network = provider.chainId;\n                this.currentChainId = network;\n                logger.logVerboseTroubleshootingMessage('[WalletConnect] getNetwork - provider network', network);\n                return network;\n            }\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] getNetwork - no provider found, returning current chain id', {\n                currentChainId: this.currentChainId,\n            });\n            return this.currentChainId;\n        });\n    }\n    providerSwitchNetwork(_a) {\n        const _super = Object.create(null, {\n            providerSwitchNetwork: { get: () => super.providerSwitchNetwork }\n        });\n        return __awaiter(this, arguments, void 0, function* ({ network, }) {\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - network', {\n                network,\n                switchNetworkOnlyFromWallet: this.switchNetworkOnlyFromWallet,\n            });\n            const currentNetworkId = yield this.getNetwork();\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - currentNetworkId', currentNetworkId);\n            if (currentNetworkId && currentNetworkId === network.chainId) {\n                return;\n            }\n            if (this.switchNetworkOnlyFromWallet) {\n                throw new DynamicError('Network switching is only supported through the wallet');\n            }\n            const walletClient = yield this.getWalletClient();\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - will switch network');\n            yield _super.providerSwitchNetwork.call(this, { network, provider: walletClient });\n            this.currentChainId = network.chainId;\n            logger.logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - switched network', network.chainId);\n            this.emit('chainChange', { chain: String(network.chainId) });\n        });\n    }\n    supportsNetworkSwitching() {\n        return true;\n    }\n    getSupportedNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const provider = yield WalletConnectProvider.awaitAndGetProvider();\n            if (!(provider === null || provider === void 0 ? void 0 : provider.session)) {\n                return [];\n            }\n            const chains = [];\n            // Some wallet (i.e ZenGo) use namespaces.account to list supported chains\n            // while others use keys within the namespaces object\n            Object.keys(provider === null || provider === void 0 ? void 0 : provider.session.namespaces).forEach((key) => {\n                if (key.startsWith('eip155:')) {\n                    chains.push(key.split(':')[1]);\n                }\n            });\n            (_a = provider === null || provider === void 0 ? void 0 : provider.session.namespaces.eip155) === null || _a === void 0 ? void 0 : _a.accounts.forEach((account) => chains.push(account.split(':')[1]));\n            return chains.length\n                ? chains\n                : this.evmNetworks.map((network) => network.chainId.toString());\n        });\n    }\n    getDeepLink() {\n        var _a;\n        const provider = WalletConnectProvider.getProvider();\n        logger.debug('[WalletConnect] getDeepLink', {\n            hasSession: Boolean(provider === null || provider === void 0 ? void 0 : provider.session),\n            topic: (_a = provider === null || provider === void 0 ? void 0 : provider.session) === null || _a === void 0 ? void 0 : _a.topic,\n            uri: provider === null || provider === void 0 ? void 0 : provider.signer.uri,\n        });\n        if (!(provider === null || provider === void 0 ? void 0 : provider.session)) {\n            return;\n        }\n        const deepLink = getDeepLink({\n            deepLinks: this.metadata.deepLinks,\n            mode: 'regular',\n            preference: this.deepLinkPreference,\n            uri: provider.signer.uri,\n        });\n        logger.logVerboseTroubleshootingMessage('[WalletConnect] getDeepLink - deepLink', deepLink);\n        if (!deepLink) {\n            return;\n        }\n        // we need to include the session topic here because it helps the wallet\n        // auto redirect back to the dapp after signing\n        return `${deepLink}?sessionTopic=${provider.session.topic}`;\n    }\n    getConnectionUri() {\n        return WalletConnectProvider.getConnectionUri();\n    }\n}\n\nexport { WalletConnectConnector };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/injected/InjectedWalletBase.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { isMobile } from '@dynamic-labs/utils';\nimport { EthereumWalletConnector } from '@dynamic-labs/ethereum-core';\nimport { EthProviderHelper } from '../ethProviderHelper.js';\nimport { WalletConnectConnector } from '../walletConnect/WalletConnectConnector/WalletConnectConnector.js';\nimport { logger } from '../utils/logger.js';\n\nclass InjectedWalletBase extends EthereumWalletConnector {\n    constructor() {\n        super(...arguments);\n        this.walletConnectorFallback = false;\n    }\n    get ethProviderHelper() {\n        if (!this._ethProviderHelper) {\n            this._ethProviderHelper = new EthProviderHelper(this);\n        }\n        return this._ethProviderHelper;\n    }\n    getMobileOrInstalledWallet() {\n        var _a;\n        if (this.isInstalledOnBrowser()) {\n            return this;\n        }\n        // this is to handle the case where the user is in a webview.\n        // when the user is in a webview, customers should set the deepLinkPreference prop to universal,\n        // in which case this condition will be false, and the SDK will use WalletConnect (if available)\n        if (((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.inAppBrowserUrl) &&\n            this.mobileExperience === 'in-app-browser' &&\n            isMobile()) {\n            return this;\n        }\n        // this is the case where the wallet is not installed on the browser and\n        // it does not support WalletConnect. in this case, the SDK will instruct\n        // the user to download the wallet extension\n        if (!this.walletConnectorFallback) {\n            return this;\n        }\n        // if there is no WC project ID, we should not use WC\n        if (!this.constructorProps.projectId) {\n            logger.debug('[InjectedWalletBase] getMobileOrInstalledWallet - No WC project ID');\n            return this;\n        }\n        return new WalletConnectConnector(Object.assign(Object.assign({}, this.constructorProps), { walletName: this.name }));\n    }\n    findProvider() {\n        var _a;\n        return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.getInstalledProvider();\n    }\n    setupEventListeners() {\n        const provider = this.getWalletClient();\n        if (!provider)\n            return;\n        if (!this.ethProviderHelper)\n            return;\n        const { tearDownEventListeners } = this.ethProviderHelper._setupEventListeners(this);\n        this.teardownEventListeners = tearDownEventListeners;\n    }\n    getWalletClient(chainId) {\n        var _a;\n        return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.findWalletClient(chainId);\n    }\n    isInstalledOnBrowser() {\n        var _a;\n        return ((_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.findProvider()) !== undefined;\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.getAddress();\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getAddress();\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.signMessage(messageToSign);\n        });\n    }\n    proveOwnership(address, messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.validateActiveWallet(address);\n            return this.signMessage(messageToSign);\n        });\n    }\n    endSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // nothing to do on browser-based metamask\n            return;\n        });\n    }\n    providerSwitchNetwork(_a) {\n        const _super = Object.create(null, {\n            providerSwitchNetwork: { get: () => super.providerSwitchNetwork }\n        });\n        return __awaiter(this, arguments, void 0, function* ({ network, provider, }) {\n            return _super.providerSwitchNetwork.call(this, { network, provider });\n        });\n    }\n}\n\nexport { InjectedWalletBase };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/injected/PhantomEvm.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { isMobile, handleMobileWalletRedirect } from '@dynamic-labs/utils';\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\n\nclass PhantomEvm extends InjectedWalletBase {\n    constructor() {\n        super(...arguments);\n        this.name = 'Phantom';\n        this.overrideKey = 'phantomevm';\n    }\n    getAddress() {\n        const _super = Object.create(null, {\n            getAddress: { get: () => super.getAddress }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isInstalledOnBrowser()) {\n                return _super.getAddress.call(this);\n            }\n            if (isMobile()) {\n                handleMobileWalletRedirect({\n                    nativeLink: 'phantom://browse',\n                    universalLink: 'https://phantom.app/ul/browse',\n                });\n            }\n            return undefined;\n        });\n    }\n    canGetChainAddress() {\n        var _a, _b;\n        return Boolean((_b = (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.findProvider()) === null || _b === void 0 ? void 0 : _b.selectedAddress);\n    }\n}\n\nexport { PhantomEvm };\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;AAAA;AACA;AAHA;;;;AAKA,MAAM,mBAAmB,sLAAA,CAAA,qBAAkB;IACvC,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;IACvB;IACA,aAAa;QACT,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM;YAC/B,YAAY;gBAAE,KAAK,IAAM,KAAK,CAAC;YAAW;QAC9C;QACA,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;YACnC,IAAI,IAAI,CAAC,oBAAoB,IAAI;gBAC7B,OAAO,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI;YACtC;YACA,IAAI,CAAA,GAAA,yKAAA,CAAA,WAAQ,AAAD,KAAK;gBACZ,CAAA,GAAA,6MAAA,CAAA,6BAA0B,AAAD,EAAE;oBACvB,YAAY;oBACZ,eAAe;gBACnB;YACJ;YACA,OAAO;QACX;IACJ;IACA,qBAAqB;QACjB,IAAI,IAAI;QACR,OAAO,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,iBAAiB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,YAAY,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,eAAe;IACtK;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1077, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/injected/ExodusEvm.js"],"sourcesContent":["'use client'\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\n\n// leaving ExodusEvm in here due to a backwards compatibility issue with this one wallet and v18\nclass ExodusEvm extends InjectedWalletBase {\n    constructor() {\n        super(...arguments);\n        this.name = 'ExodusEvm';\n        this.overrideKey = 'exodusevm';\n        this.walletConnectorFallback = true;\n    }\n}\n\nexport { ExodusEvm };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,gGAAgG;AAChG,MAAM,kBAAkB,sLAAA,CAAA,qBAAkB;IACtC,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,uBAAuB,GAAG;IACnC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/injected/FallbackEvmConnector.js"],"sourcesContent":["'use client'\nimport { InjectedWalletBase } from './InjectedWalletBase.js';\n\nclass FallbackEvmConnector extends InjectedWalletBase {\n    constructor() {\n        super(...arguments);\n        this.name = 'Fallback Connector';\n        this.overrideKey = 'fallbackconnector';\n        this.isAvailable = false;\n    }\n    isInstalledOnBrowser() {\n        return false;\n    }\n}\n\nexport { FallbackEvmConnector };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,MAAM,6BAA6B,sLAAA,CAAA,qBAAkB;IACjD,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,WAAW,GAAG;IACvB;IACA,uBAAuB;QACnB,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/utils/getConnectorConstructorForEip6963Wallet/getConnectorConstructorForEip6963Wallet.js"],"sourcesContent":["'use client'\nimport { sanitizeName } from '@dynamic-labs/utils';\nimport { InjectedWalletBase } from '../../injected/InjectedWalletBase.js';\n\nconst getConnectorConstructorForEip6963Wallet = (walletDetail) => {\n    const { info, provider } = walletDetail;\n    const sanitizedName = sanitizeName(info.name);\n    return class extends InjectedWalletBase {\n        constructor(props) {\n            super(Object.assign(Object.assign({}, props), { metadata: {\n                    groupKey: sanitizedName,\n                    icon: info.icon,\n                    id: info.uuid,\n                    name: info.name,\n                    rdns: info.rdns,\n                } }));\n            this.name = info.name;\n            this.overrideKey = `${sanitizedName}evm`;\n        }\n        findProvider() {\n            return provider;\n        }\n    };\n};\n\nexport { getConnectorConstructorForEip6963Wallet };\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;AAFA;;;AAIA,MAAM,0CAA0C,CAAC;IAC7C,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC3B,MAAM,gBAAgB,CAAA,GAAA,iLAAA,CAAA,eAAY,AAAD,EAAE,KAAK,IAAI;IAC5C,OAAO,cAAc,sLAAA,CAAA,qBAAkB;QACnC,YAAY,KAAK,CAAE;YACf,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ;gBAAE,UAAU;oBAClD,UAAU;oBACV,MAAM,KAAK,IAAI;oBACf,IAAI,KAAK,IAAI;oBACb,MAAM,KAAK,IAAI;oBACf,MAAM,KAAK,IAAI;gBACnB;YAAE;YACN,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI;YACrB,IAAI,CAAC,WAAW,GAAG,GAAG,cAAc,GAAG,CAAC;QAC5C;QACA,eAAe;YACX,OAAO;QACX;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1161, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/utils/getConnectorConstructorInjectedWallet/getConnectorConstructorInjectedWallet.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../_virtual/_tslib.js';\nimport { PlatformService } from '@dynamic-labs/utils';\nimport { InjectedWalletBase } from '../../injected/InjectedWalletBase.js';\nimport { logger } from '../logger.js';\n\nconst getConnectorConstructorInjectedWallet = (key, wallet) => {\n    const { shortName } = wallet;\n    const name = shortName || wallet.name;\n    const walletConnectorFallback = Boolean(wallet.walletConnect);\n    return class extends InjectedWalletBase {\n        constructor() {\n            super(...arguments);\n            this.name = name;\n            this.walletConnectorFallback = walletConnectorFallback;\n            // this is the key from the wallet book entry so that we don't purely rely on the normalized name\n            this.overrideKey = key;\n        }\n        getAddress() {\n            const _super = Object.create(null, {\n                getAddress: { get: () => super.getAddress }\n            });\n            return __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                if (this.isInstalledOnBrowser()) {\n                    return _super.getAddress.call(this);\n                }\n                const inAppBrowserBase = (_a = this.metadata) === null || _a === void 0 ? void 0 : _a.inAppBrowserUrl;\n                if (!inAppBrowserBase) {\n                    const error = new Error(`No inAppBrowserBase found for ${this.name}.`);\n                    logger.error(error.message);\n                    throw error;\n                }\n                // TODO: use PlatformService\n                PlatformService.openURL(`${inAppBrowserBase}/${window.location.href}`);\n                return undefined;\n            });\n        }\n    };\n};\n\nexport { getConnectorConstructorInjectedWallet };\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;AACA;AACA;AAJA;;;;;AAMA,MAAM,wCAAwC,CAAC,KAAK;IAChD,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,MAAM,OAAO,aAAa,OAAO,IAAI;IACrC,MAAM,0BAA0B,QAAQ,OAAO,aAAa;IAC5D,OAAO,cAAc,sLAAA,CAAA,qBAAkB;QACnC,aAAc;YACV,KAAK,IAAI;YACT,IAAI,CAAC,IAAI,GAAG;YACZ,IAAI,CAAC,uBAAuB,GAAG;YAC/B,iGAAiG;YACjG,IAAI,CAAC,WAAW,GAAG;QACvB;QACA,aAAa;YACT,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM;gBAC/B,YAAY;oBAAE,KAAK,IAAM,KAAK,CAAC;gBAAW;YAC9C;YACA,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;gBACnC,IAAI;gBACJ,IAAI,IAAI,CAAC,oBAAoB,IAAI;oBAC7B,OAAO,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI;gBACtC;gBACA,MAAM,mBAAmB,CAAC,KAAK,IAAI,CAAC,QAAQ,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,eAAe;gBACrG,IAAI,CAAC,kBAAkB;oBACnB,MAAM,QAAQ,IAAI,MAAM,CAAC,8BAA8B,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACrE,uKAAA,CAAA,SAAM,CAAC,KAAK,CAAC,MAAM,OAAO;oBAC1B,MAAM;gBACV;gBACA,4BAA4B;gBAC5B,mMAAA,CAAA,kBAAe,CAAC,OAAO,CAAC,GAAG,iBAAiB,CAAC,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE;gBACrE,OAAO;YACX;QACJ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/injected/fetchInjectedWalletConnectors.js"],"sourcesContent":["'use client'\nimport { logger, walletConnectorEvents } from '@dynamic-labs/wallet-connector-core';\nimport { Eip6963ProviderSingleton, sanitizeName, listenToEip6963Events } from '@dynamic-labs/utils';\nimport { getConnectorConstructorForEip6963Wallet } from '../utils/getConnectorConstructorForEip6963Wallet/getConnectorConstructorForEip6963Wallet.js';\nimport { getConnectorConstructorInjectedWallet } from '../utils/getConnectorConstructorInjectedWallet/getConnectorConstructorInjectedWallet.js';\nimport { PhantomEvm } from './PhantomEvm.js';\nimport { ExodusEvm } from './ExodusEvm.js';\n\nconst injectedWalletOverrides = [\n    PhantomEvm,\n    ExodusEvm,\n];\nconst walletsWithCustomConnectors = [\n    'phantomevm',\n    'coinbase',\n    'exodusevm',\n    'abstract',\n    'metamask',\n    'edenonline',\n    'intersend',\n];\nlet removeEip6963EventsListener;\n// should add eip6963 connector only if not in wallet-book, to avoid adding duplicate connectors\nconst shouldAddEip6963Connector = (eip6963ProviderInfo, walletBook) => {\n    var _a;\n    const { rdns, name } = eip6963ProviderInfo;\n    const chain = 'evm';\n    const connectorKey = `${sanitizeName(name)}${chain}`;\n    logger.logVerboseTroubleshootingMessage('[ETH shouldAddEip6963Connector]', rdns, name, chain, connectorKey);\n    const existingWallet = Object.entries((_a = walletBook === null || walletBook === void 0 ? void 0 : walletBook.wallets) !== null && _a !== void 0 ? _a : {}).find(([key, wallet]) => {\n        var _a, _b;\n        return ((_a = wallet.eip6963Config) === null || _a === void 0 ? void 0 : _a.rdns) === rdns ||\n            key === connectorKey ||\n            walletsWithCustomConnectors.includes(connectorKey) ||\n            (wallet.name === name && ((_b = wallet.injectedConfig) === null || _b === void 0 ? void 0 : _b[0].chain) === chain);\n    });\n    logger.logVerboseTroubleshootingMessage('[ETH shouldAddEip6963Connector]', existingWallet);\n    return !existingWallet;\n};\nconst addEip6963Listener = (walletBook) => {\n    removeEip6963EventsListener === null || removeEip6963EventsListener === void 0 ? void 0 : removeEip6963EventsListener();\n    removeEip6963EventsListener = listenToEip6963Events((event) => {\n        if (!shouldAddEip6963Connector(event.detail.info, walletBook)) {\n            return;\n        }\n        logger.logVerboseTroubleshootingMessage('[ETH fetchInjectedWalletConnectors] listenToEip6963Events', event.detail);\n        walletConnectorEvents.emit('providerInjected', {\n            injectedConnectorConstructor: getConnectorConstructorForEip6963Wallet(event.detail),\n        });\n    });\n};\nconst fetchInjectedWalletConnector = ({ walletBook, }) => {\n    var _a;\n    addEip6963Listener(walletBook);\n    const walletBookConnectors = Object.entries((_a = walletBook === null || walletBook === void 0 ? void 0 : walletBook.wallets) !== null && _a !== void 0 ? _a : {})\n        .filter(([key, wallet]) => {\n        var _a;\n        return ((_a = wallet.injectedConfig) === null || _a === void 0 ? void 0 : _a.find((config) => config.chain === 'evm')) &&\n            !walletsWithCustomConnectors.includes(key);\n    })\n        .map(([key, wallet]) => getConnectorConstructorInjectedWallet(key, wallet));\n    const { providers } = Eip6963ProviderSingleton.get();\n    const eip6963Connectors = providers\n        .filter((provider) => shouldAddEip6963Connector(provider.info, walletBook))\n        .map((provider) => getConnectorConstructorForEip6963Wallet(provider));\n    logger.logVerboseTroubleshootingMessage('[ETH fetchInjectedWalletConnectors] eip6963Connectors', eip6963Connectors);\n    return [...walletBookConnectors, ...eip6963Connectors];\n};\n\nexport { fetchInjectedWalletConnector, injectedWalletOverrides };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1300, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/constants.js"],"sourcesContent":["'use client'\nconst INFURA_ID = '87939db78f824920ada5c872db3e56b8';\n\nexport { INFURA_ID };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,YAAY","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1312, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/utils/createInjectedConnector/createInjectedConnector.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../_virtual/_tslib.js';\nimport '@dynamic-labs/utils';\nimport { InjectedWalletBase } from '../../injected/InjectedWalletBase.js';\nimport '@dynamic-labs/wallet-connector-core';\nimport '../logger.js';\n\nconst createInjectedConnector = (customConnectorFn) => (props) => {\n    const delegate = customConnectorFn(props);\n    return [\n        class extends InjectedWalletBase {\n            constructor(props) {\n                super(Object.assign(Object.assign({}, props), { metadata: delegate.metadata }));\n                this.name = delegate.metadata.name;\n            }\n            init() {\n                return __awaiter(this, void 0, void 0, function* () {\n                    return delegate.init();\n                });\n            }\n            findProvider() {\n                return delegate.findProvider();\n            }\n            signMessage(messageToSign) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    return delegate.signMessage(messageToSign);\n                });\n            }\n            connect() {\n                const _super = Object.create(null, {\n                    connect: { get: () => super.connect }\n                });\n                return __awaiter(this, void 0, void 0, function* () {\n                    if (delegate.connect) {\n                        return delegate.connect();\n                    }\n                    return _super.connect.call(this);\n                });\n            }\n            endSession() {\n                const _super = Object.create(null, {\n                    endSession: { get: () => super.endSession }\n                });\n                return __awaiter(this, void 0, void 0, function* () {\n                    if (delegate.disconnect) {\n                        yield delegate.disconnect();\n                    }\n                    return _super.endSession.call(this);\n                });\n            }\n            getAddress() {\n                const _super = Object.create(null, {\n                    getAddress: { get: () => super.getAddress }\n                });\n                return __awaiter(this, void 0, void 0, function* () {\n                    if (delegate.getAddress) {\n                        return delegate.getAddress();\n                    }\n                    return _super.getAddress.call(this);\n                });\n            }\n            getConnectedAccounts() {\n                const _super = Object.create(null, {\n                    getConnectedAccounts: { get: () => super.getConnectedAccounts }\n                });\n                return __awaiter(this, void 0, void 0, function* () {\n                    if (delegate.getConnectedAccounts) {\n                        return delegate.getConnectedAccounts();\n                    }\n                    return _super.getConnectedAccounts.call(this);\n                });\n            }\n            filter() {\n                if (delegate.filter) {\n                    return delegate.filter();\n                }\n                return super.filter();\n            }\n            supportsNetworkSwitching() {\n                if (delegate.supportsNetworkSwitching) {\n                    return delegate.supportsNetworkSwitching();\n                }\n                return super.supportsNetworkSwitching();\n            }\n        },\n    ];\n};\n\nexport { createInjectedConnector };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,0BAA0B,CAAC,oBAAsB,CAAC;QACpD,MAAM,WAAW,kBAAkB;QACnC,OAAO;YACH,cAAc,sLAAA,CAAA,qBAAkB;gBAC5B,YAAY,KAAK,CAAE;oBACf,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ;wBAAE,UAAU,SAAS,QAAQ;oBAAC;oBAC5E,IAAI,CAAC,IAAI,GAAG,SAAS,QAAQ,CAAC,IAAI;gBACtC;gBACA,OAAO;oBACH,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;wBACnC,OAAO,SAAS,IAAI;oBACxB;gBACJ;gBACA,eAAe;oBACX,OAAO,SAAS,YAAY;gBAChC;gBACA,YAAY,aAAa,EAAE;oBACvB,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;wBACnC,OAAO,SAAS,WAAW,CAAC;oBAChC;gBACJ;gBACA,UAAU;oBACN,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM;wBAC/B,SAAS;4BAAE,KAAK,IAAM,KAAK,CAAC;wBAAQ;oBACxC;oBACA,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;wBACnC,IAAI,SAAS,OAAO,EAAE;4BAClB,OAAO,SAAS,OAAO;wBAC3B;wBACA,OAAO,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI;oBACnC;gBACJ;gBACA,aAAa;oBACT,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM;wBAC/B,YAAY;4BAAE,KAAK,IAAM,KAAK,CAAC;wBAAW;oBAC9C;oBACA,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;wBACnC,IAAI,SAAS,UAAU,EAAE;4BACrB,MAAM,SAAS,UAAU;wBAC7B;wBACA,OAAO,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI;oBACtC;gBACJ;gBACA,aAAa;oBACT,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM;wBAC/B,YAAY;4BAAE,KAAK,IAAM,KAAK,CAAC;wBAAW;oBAC9C;oBACA,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;wBACnC,IAAI,SAAS,UAAU,EAAE;4BACrB,OAAO,SAAS,UAAU;wBAC9B;wBACA,OAAO,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI;oBACtC;gBACJ;gBACA,uBAAuB;oBACnB,MAAM,SAAS,OAAO,MAAM,CAAC,MAAM;wBAC/B,sBAAsB;4BAAE,KAAK,IAAM,KAAK,CAAC;wBAAqB;oBAClE;oBACA,OAAO,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG;wBACnC,IAAI,SAAS,oBAAoB,EAAE;4BAC/B,OAAO,SAAS,oBAAoB;wBACxC;wBACA,OAAO,OAAO,oBAAoB,CAAC,IAAI,CAAC,IAAI;oBAChD;gBACJ;gBACA,SAAS;oBACL,IAAI,SAAS,MAAM,EAAE;wBACjB,OAAO,SAAS,MAAM;oBAC1B;oBACA,OAAO,KAAK,CAAC;gBACjB;gBACA,2BAA2B;oBACvB,IAAI,SAAS,wBAAwB,EAAE;wBACnC,OAAO,SAAS,wBAAwB;oBAC5C;oBACA,OAAO,KAAK,CAAC;gBACjB;YACJ;SACH;IACL","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1423, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/walletConnect/utils/fetchWalletConnectWallets.js"],"sourcesContent":["'use client'\nimport { WalletConnectConnector } from '../WalletConnectConnector/WalletConnectConnector.js';\n\nconst fetchWalletConnectWallets = ({ walletBook, }) => {\n    var _a;\n    return Object.entries((_a = walletBook === null || walletBook === void 0 ? void 0 : walletBook.wallets) !== null && _a !== void 0 ? _a : {})\n        .filter(([, wallet]) => wallet.walletConnect && !wallet.filterFromWalletConnect)\n        .map(([key, wallet]) => {\n        const { shortName } = wallet;\n        const name = shortName || wallet.name;\n        return class extends WalletConnectConnector {\n            constructor(props) {\n                super(Object.assign(Object.assign({}, props), { walletName: name }));\n                this.overrideKey = key;\n            }\n        };\n    });\n};\n\nexport { fetchWalletConnectWallets };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,MAAM,4BAA4B,CAAC,EAAE,UAAU,EAAG;IAC9C,IAAI;IACJ,OAAO,OAAO,OAAO,CAAC,CAAC,KAAK,eAAe,QAAQ,eAAe,KAAK,IAAI,KAAK,IAAI,WAAW,OAAO,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC,GACrI,MAAM,CAAC,CAAC,GAAG,OAAO,GAAK,OAAO,aAAa,IAAI,CAAC,OAAO,uBAAuB,EAC9E,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO;QACnB,MAAM,EAAE,SAAS,EAAE,GAAG;QACtB,MAAM,OAAO,aAAa,OAAO,IAAI;QACrC,OAAO,cAAc,yNAAA,CAAA,yBAAsB;YACvC,YAAY,KAAK,CAAE;gBACf,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ;oBAAE,YAAY;gBAAK;gBACjE,IAAI,CAAC,WAAW,GAAG;YACvB;QACJ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1451, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/walletConnect/utils/getWalletConnectConnector.js"],"sourcesContent":["'use client'\nimport { WalletConnectConnector } from '../WalletConnectConnector/WalletConnectConnector.js';\n\nconst getWalletConnectConnector = () => class extends WalletConnectConnector {\n    constructor(props) {\n        super(Object.assign(Object.assign({}, props), { walletName: 'WalletConnect' }));\n    }\n};\n\nexport { getWalletConnectConnector };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,MAAM,4BAA4B,IAAM,cAAc,yNAAA,CAAA,yBAAsB;QACxE,YAAY,KAAK,CAAE;YACf,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ;gBAAE,YAAY;YAAgB;QAChF;IACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1471, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/coinbase/helpers.js"],"sourcesContent":["'use client'\nimport { CoinbaseWalletSDK } from '@coinbase/wallet-sdk';\n\n// storing a reference to the coinbase provider because the provider methods work better when\n// they are called on the same instance\nlet coinbaseProvider;\nconst baseSepolia = 84532;\nconst baseMainnet = 8453;\nconst getCoinbaseProvider = ({ appLogoUrl, appName, evmNetworks, walletPreference, } = {}) => {\n    const appChainIds = evmNetworks === null || evmNetworks === void 0 ? void 0 : evmNetworks.map((network) => Number(network.chainId));\n    // just brings base sepolia to the front of the list, because that is treated as the default chain\n    const hasBaseSepolia = evmNetworks === null || evmNetworks === void 0 ? void 0 : evmNetworks.some((network) => network.chainId === baseSepolia);\n    if (hasBaseSepolia) {\n        appChainIds === null || appChainIds === void 0 ? void 0 : appChainIds.sort((a, b) => a === baseSepolia ? -1 : b === baseSepolia ? 1 : 0);\n    }\n    // just brings base mainnet to the front, because that that is treated as the default chain\n    const hasBaseMainnet = evmNetworks === null || evmNetworks === void 0 ? void 0 : evmNetworks.some((network) => network.chainId === baseMainnet);\n    if (hasBaseMainnet) {\n        appChainIds === null || appChainIds === void 0 ? void 0 : appChainIds.sort((a, b) => a === baseMainnet ? -1 : b === baseMainnet ? 1 : 0);\n    }\n    if (!coinbaseProvider) {\n        const coinbaseSdk = new CoinbaseWalletSDK({\n            appChainIds,\n            appLogoUrl,\n            appName,\n        });\n        coinbaseProvider = coinbaseSdk.makeWeb3Provider({\n            options: walletPreference !== null && walletPreference !== void 0 ? walletPreference : 'all',\n        });\n    }\n    return coinbaseProvider;\n};\n\nexport { getCoinbaseProvider };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,6FAA6F;AAC7F,uCAAuC;AACvC,IAAI;AACJ,MAAM,cAAc;AACpB,MAAM,cAAc;AACpB,MAAM,sBAAsB,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAG,GAAG,CAAC,CAAC;IACrF,MAAM,cAAc,gBAAgB,QAAQ,gBAAgB,KAAK,IAAI,KAAK,IAAI,YAAY,GAAG,CAAC,CAAC,UAAY,OAAO,QAAQ,OAAO;IACjI,kGAAkG;IAClG,MAAM,iBAAiB,gBAAgB,QAAQ,gBAAgB,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,CAAC,CAAC,UAAY,QAAQ,OAAO,KAAK;IACnI,IAAI,gBAAgB;QAChB,gBAAgB,QAAQ,gBAAgB,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,CAAC,CAAC,GAAG,IAAM,MAAM,cAAc,CAAC,IAAI,MAAM,cAAc,IAAI;IAC1I;IACA,2FAA2F;IAC3F,MAAM,iBAAiB,gBAAgB,QAAQ,gBAAgB,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,CAAC,CAAC,UAAY,QAAQ,OAAO,KAAK;IACnI,IAAI,gBAAgB;QAChB,gBAAgB,QAAQ,gBAAgB,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,CAAC,CAAC,GAAG,IAAM,MAAM,cAAc,CAAC,IAAI,MAAM,cAAc,IAAI;IAC1I;IACA,IAAI,CAAC,kBAAkB;QACnB,MAAM,cAAc,IAAI,wKAAA,CAAA,oBAAiB,CAAC;YACtC;YACA;YACA;QACJ;QACA,mBAAmB,YAAY,gBAAgB,CAAC;YAC5C,SAAS,qBAAqB,QAAQ,qBAAqB,KAAK,IAAI,mBAAmB;QAC3F;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1513, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/coinbase/coinbase.js"],"sourcesContent":["'use client'\nimport { __rest, __awaiter } from '../../_virtual/_tslib.js';\nimport { toHex, toBytes, createWalletClient, custom } from 'viem';\nimport { EthereumWalletConnector, chainsMap } from '@dynamic-labs/ethereum-core';\nimport { eventListenerHandlers } from '@dynamic-labs/wallet-connector-core';\nimport { getCoinbaseProvider } from './helpers.js';\n\nclass Coinbase extends EthereumWalletConnector {\n    constructor(_a) {\n        var { appName, appLogoUrl, evmNetworks, coinbaseWalletPreference } = _a, props = __rest(_a, [\"appName\", \"appLogoUrl\", \"evmNetworks\", \"coinbaseWalletPreference\"]);\n        super(Object.assign({ evmNetworks }, props));\n        this.name = 'Coinbase';\n        this.overrideKey = 'coinbase';\n        this.canConnectViaQrCode = false;\n        this.canConnectViaCustodialService = !this.isInstalledOnBrowser();\n        this.coinbaseProviderOpts = {\n            appLogoUrl: appLogoUrl,\n            appName: appName,\n            evmNetworks: evmNetworks,\n            walletPreference: coinbaseWalletPreference,\n        };\n    }\n    get coinbaseProvider() {\n        return getCoinbaseProvider(this.coinbaseProviderOpts);\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const accounts = (yield this.coinbaseProvider.request({\n                    method: 'eth_accounts',\n                }));\n                if (accounts[0]) {\n                    this.setActiveAccount(this.parseAddress(accounts[0]));\n                }\n                return accounts.map(this.parseAddress);\n            }\n            catch (error) {\n                return [];\n            }\n        });\n    }\n    isInstalledOnBrowser() {\n        var _a, _b;\n        return (Boolean((_a = window === null || window === void 0 ? void 0 : window.coinbaseWalletExtension) === null || _a === void 0 ? void 0 : _a.isCoinbaseWallet) ||\n            Boolean((_b = window === null || window === void 0 ? void 0 : window.ethereum) === null || _b === void 0 ? void 0 : _b.isCoinbaseWallet));\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [address] = (yield this.coinbaseProvider.request({\n                method: 'eth_requestAccounts',\n            }));\n            const parsedAddress = this.parseAddress(address);\n            this.setActiveAccount(parsedAddress);\n            return parsedAddress;\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [address] = (yield this.coinbaseProvider.request({\n                method: 'eth_requestAccounts',\n            }));\n            const parsedAddress = this.parseAddress(address);\n            try {\n                return (yield this.coinbaseProvider.request({\n                    method: 'personal_sign',\n                    params: [toHex(toBytes(messageToSign)), parsedAddress],\n                }));\n            }\n            catch (err) {\n                return undefined;\n            }\n        });\n    }\n    setupEventListeners() {\n        const { handleAccountChange, handleChainChange, handleDisconnect } = eventListenerHandlers(this);\n        this.coinbaseProvider.on('accountsChanged', handleAccountChange);\n        this.coinbaseProvider.on('chainChanged', handleChainChange);\n        this.coinbaseProvider.on('disconnect', handleDisconnect);\n        this.teardownEventListeners = () => {\n            this.coinbaseProvider.removeListener('accountsChanged', handleAccountChange);\n            this.coinbaseProvider.removeListener('chainChanged', handleChainChange);\n            this.coinbaseProvider.removeListener('disconnect', handleDisconnect);\n        };\n    }\n    getWalletClient(chainId) {\n        return createWalletClient({\n            account: this.getActiveAccount(),\n            chain: chainId ? chainsMap[chainId] : this.getActiveChain(),\n            transport: custom(this.coinbaseProvider),\n        });\n    }\n}\n\nexport { Coinbase };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1632, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/metaMask/utils/createMetaMaskSDKDisplayUriState.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../_virtual/_tslib.js';\n\n/**\n * Listens for the `display_uri` event emitted by the MetaMask SDK.\n *\n * The `display_uri` event is triggered during SDK initialization or when the `connect` method is called.\n * Calling `terminate` in the MetaMask SDK resets the connection, and a new `display_uri` will only be emitted\n * when `connect` is called again.\n *\n * This function manages the new `display_uri` received from these events.\n */\nconst createMetaMaskSDKDisplayUriState = (metaMaskSDK) => {\n    let lastKnownMetaMaskDeepLinkUri = null;\n    let displayUri = null;\n    metaMaskSDK.on('display_uri', (latestDisplayUri) => {\n        if (lastKnownMetaMaskDeepLinkUri !== latestDisplayUri) {\n            lastKnownMetaMaskDeepLinkUri = latestDisplayUri;\n            displayUri = latestDisplayUri.trim();\n        }\n    });\n    return {\n        consumeDisplayUri: () => __awaiter(void 0, void 0, void 0, function* () {\n            const currentDisplayUri = displayUri;\n            if (currentDisplayUri) {\n                displayUri = null;\n                return currentDisplayUri;\n            }\n            return new Promise((resolve) => {\n                let timeoutId = null;\n                let intervalId = null;\n                const cleanUp = () => {\n                    if (timeoutId)\n                        clearTimeout(timeoutId);\n                    if (intervalId)\n                        clearInterval(intervalId);\n                };\n                timeoutId = setTimeout(() => {\n                    cleanUp();\n                    resolve(undefined);\n                }, 1000);\n                intervalId = setInterval(() => {\n                    if (displayUri) {\n                        cleanUp();\n                        resolve(displayUri);\n                        displayUri = null;\n                    }\n                }, 10);\n            });\n        }),\n        getConnectionUri: () => displayUri !== null && displayUri !== void 0 ? displayUri : undefined,\n    };\n};\n\nexport { createMetaMaskSDKDisplayUriState };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA;;;;;;;;CAQC,GACD,MAAM,mCAAmC,CAAC;IACtC,IAAI,+BAA+B;IACnC,IAAI,aAAa;IACjB,YAAY,EAAE,CAAC,eAAe,CAAC;QAC3B,IAAI,iCAAiC,kBAAkB;YACnD,+BAA+B;YAC/B,aAAa,iBAAiB,IAAI;QACtC;IACJ;IACA,OAAO;QACH,mBAAmB,IAAM,CAAA,GAAA,mKAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;gBACvD,MAAM,oBAAoB;gBAC1B,IAAI,mBAAmB;oBACnB,aAAa;oBACb,OAAO;gBACX;gBACA,OAAO,IAAI,QAAQ,CAAC;oBAChB,IAAI,YAAY;oBAChB,IAAI,aAAa;oBACjB,MAAM,UAAU;wBACZ,IAAI,WACA,aAAa;wBACjB,IAAI,YACA,cAAc;oBACtB;oBACA,YAAY,WAAW;wBACnB;wBACA,QAAQ;oBACZ,GAAG;oBACH,aAAa,YAAY;wBACrB,IAAI,YAAY;4BACZ;4BACA,QAAQ;4BACR,aAAa;wBACjB;oBACJ,GAAG;gBACP;YACJ;QACA,kBAAkB,IAAM,eAAe,QAAQ,eAAe,KAAK,IAAI,aAAa;IACxF;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/metaMask/utils/waitForConnection.js"],"sourcesContent":["'use client'\nconst waitForConnection = (provider) => new Promise((resolve) => {\n    provider.once('connect', () => resolve());\n});\n\nexport { waitForConnection };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,oBAAoB,CAAC,WAAa,IAAI,QAAQ,CAAC;QACjD,SAAS,IAAI,CAAC,WAAW,IAAM;IACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1706, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/metaMask/utils/isPendingWalletRequestPermissionError.js"],"sourcesContent":["'use client'\nconst isPendingWalletRequestPermissionError = (error) => typeof error === 'object' &&\n    error !== null &&\n    'message' in error &&\n    error.message.includes(\"Request of type 'wallet_requestPermissions' already pending for origin\");\n\nexport { isPendingWalletRequestPermissionError };\n"],"names":[],"mappings":";;;AAAA;AACA,MAAM,wCAAwC,CAAC,QAAU,OAAO,UAAU,YACtE,UAAU,QACV,aAAa,SACb,MAAM,OAAO,CAAC,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1718, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/metaMask/MetaMaskConnector.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../_virtual/_tslib.js';\nimport { MetaMaskSDK } from '@metamask/sdk';\nimport { createWalletClient, custom, isHex, toHex } from 'viem';\nimport { getOrMapViemChain } from '@dynamic-labs/ethereum-core';\nimport { eventListenerHandlers } from '@dynamic-labs/wallet-connector-core';\nimport { createEventTimeline, PlatformService, isMobile, MetaMaskError, retryableFn, PlatformEventsService } from '@dynamic-labs/utils';\nimport { logger } from '../utils/logger.js';\nimport { InjectedWalletBase } from '../injected/InjectedWalletBase.js';\nimport { createMetaMaskSDKDisplayUriState } from './utils/createMetaMaskSDKDisplayUriState.js';\nimport { waitForConnection } from './utils/waitForConnection.js';\nimport { isPendingWalletRequestPermissionError } from './utils/isPendingWalletRequestPermissionError.js';\n\n/**\n * The MetaMask SDK must be initialized only once, so we store the instance\n * in these variables to avoid initializing it multiple times\n */\nlet _metaMaskSDK = null;\nlet _metaMaskSDKDisplayUriState = null;\nconst eventTimeline = createEventTimeline();\nclass MetaMaskConnector extends InjectedWalletBase {\n    constructor(props) {\n        super(props);\n        this.name = 'MetaMask';\n        this.overrideKey = 'metamask';\n        this.canConnectViaQrCode = true;\n        this.isInAppBrowser = false;\n        this.appName = props.appName;\n        this.appLogoUrl = props.appLogoUrl;\n        /**\n         * The isInAppBrowser must be calculated before initializing the MetaMask SDK.\n         *\n         * The isInAppBrowser is calculated by checking if the window provider is installed\n         * in the browser and if it is running on a mobile device.\n         *\n         * But the MetaMask SDK will inject its own provider to the window if not provider is injected.\n         * This means the MetaMask SDK can interfere with the isInAppBrowser calculation.\n         *\n         * So we need to calculate the isInAppBrowser before initializing the MetaMask SDK\n         * to prevent a false negative\n         */\n        this.isInAppBrowser = this.getIsInAppBrowser();\n        if (!_metaMaskSDK) {\n            this.createMetaMaskSDK();\n        }\n    }\n    isInstalledOnBrowser() {\n        var _a;\n        const metaMaskEip6963Provider = (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.eip6963ProviderLookup(this.rdns);\n        const isInstalled = Boolean(metaMaskEip6963Provider);\n        return isInstalled;\n    }\n    getSupportedNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.evmNetworks.map((network) => network.chainId.toString());\n        });\n    }\n    get metaMaskSDK() {\n        if (!_metaMaskSDK)\n            throw new Error('MetaMaskSDK not initialized');\n        return _metaMaskSDK;\n    }\n    set metaMaskSDK(metaMaskSDK) {\n        _metaMaskSDK = metaMaskSDK;\n    }\n    get metaMaskSDKDisplayUriState() {\n        if (!_metaMaskSDKDisplayUriState)\n            throw new Error('MetaMaskSDKDisplayUriState not initialized');\n        return _metaMaskSDKDisplayUriState;\n    }\n    createMetaMaskSDK() {\n        const dappMetadata = {\n            iconUrl: this.appLogoUrl,\n            name: this.appName,\n            url: PlatformService.getOrigin(),\n        };\n        _metaMaskSDK = new MetaMaskSDK({\n            checkInstallationImmediately: true,\n            dappMetadata,\n            enableAnalytics: false,\n            extensionOnly: this.isInstalledOnBrowser(),\n            headless: true,\n            injectProvider: false,\n            openDeeplink: PlatformService.openURL,\n            preferDesktop: !isMobile(),\n            readonlyRPCMap: getReadonlyRPCMap(this.evmNetworkRpcMap()),\n            useDeeplink: true,\n        });\n        _metaMaskSDKDisplayUriState =\n            createMetaMaskSDKDisplayUriState(_metaMaskSDK);\n    }\n    endSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            eventTimeline.postEvent('disconnect');\n            /**\n             * The MetaMask SDK must be terminated and reinitialized on mobile\n             * to prevent deeplinks not working\n             */\n            if (isMobile()) {\n                return this.metaMaskSDK.terminate().then(() => {\n                    _metaMaskSDK = null;\n                    _metaMaskSDKDisplayUriState = null;\n                    return this.createMetaMaskSDK();\n                });\n            }\n            /**\n             * Just terminate the SDK on desktop\n             */\n            return this.metaMaskSDK.terminate();\n        });\n    }\n    getAddress(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                // QR Code flow\n                if (!isMobile() && Boolean(opts === null || opts === void 0 ? void 0 : opts.onDisplayUri)) {\n                    this.metaMaskSDKDisplayUriState\n                        .consumeDisplayUri()\n                        .then((displayUri) => {\n                        var _a;\n                        if (!displayUri) {\n                            reject(new Error('MetaMask display uri not found'));\n                            return;\n                        }\n                        (_a = opts === null || opts === void 0 ? void 0 : opts.onDisplayUri) === null || _a === void 0 ? void 0 : _a.call(opts, displayUri);\n                    });\n                }\n                // Deep link to MetaMask app in-app browser\n                if (this.shouldDeepLinkToMetaMaskInAppBrowser() &&\n                    this.metadata.inAppBrowserUrl) {\n                    // Redirect to the in-app browser and append the current url\n                    PlatformService.openURL(`${this.metadata.inAppBrowserUrl}/${window.location.href}`);\n                    resolve(undefined);\n                    return;\n                }\n                // Connect to MetaMask\n                this.getConnectedAccountsSafely().then((initialConnectedAccounts) => __awaiter(this, void 0, void 0, function* () {\n                    if (initialConnectedAccounts.length) {\n                        resolve(this.parseAddress(initialConnectedAccounts[0]));\n                        return;\n                    }\n                    try {\n                        yield this.metaMaskSDK.connect();\n                    }\n                    catch (error) {\n                        const isRequestPendingError = isPendingWalletRequestPermissionError(error);\n                        if (!isRequestPendingError) {\n                            reject(MetaMaskError.fromError(error));\n                        }\n                        else {\n                            yield waitForConnection(this.getProvider());\n                        }\n                    }\n                    const accounts = yield this.getConnectedAccounts();\n                    resolve(accounts[0]);\n                }));\n            });\n        });\n    }\n    getConnectedAccountsSafely() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const connectedAccounts = yield this.getConnectedAccounts();\n                return connectedAccounts;\n            }\n            catch (err) {\n                logger.error(err);\n                return [];\n            }\n        });\n    }\n    getConnectedAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait for for MetaMask SDK to initialize\n            yield this.metaMaskSDK.sdkInitPromise;\n            const provider = this.getProvider();\n            if (!provider) {\n                return [];\n            }\n            /**\n             * The eth_accounts method can hang on mobile devices when\n             * the MetaMask SDK has not connected yet. So we use a retryable\n             * to ensure the timeout will be respected\n             */\n            const accounts = yield retryableFn(() => provider.request({\n                method: 'eth_accounts',\n                params: [],\n            }), {\n                fallbackValue: [],\n                timeoutMs: 1000,\n            });\n            if (!(accounts === null || accounts === void 0 ? void 0 : accounts.length)) {\n                return [];\n            }\n            return accounts.map(this.parseAddress);\n        });\n    }\n    signMessage(messageToSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.metaMaskSDK.sdkInitPromise;\n            /**\n             * Should wait for the window to be focused on mobile\n             * to account for the user moving between the MetaMaskApp\n             * and the browser\n             */\n            const windowFocusPromiseForMobile = !this.isInAppBrowser && isMobile()\n                ? waitForFocusWindowEvent()\n                : Promise.resolve();\n            const provider = this.getProvider();\n            if (!provider) {\n                return undefined;\n            }\n            const [selectedAddress] = yield this.getConnectedAccounts();\n            if (!selectedAddress) {\n                return undefined;\n            }\n            const walletClient = this.getWalletClientForAddress(selectedAddress);\n            if (!walletClient)\n                return undefined;\n            const signature = yield walletClient.signMessage({\n                message: messageToSign,\n            });\n            yield windowFocusPromiseForMobile;\n            return signature;\n        });\n    }\n    chooseAccountsToConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return [];\n        });\n    }\n    getWalletClient(chainId) {\n        const provider = this.getProvider();\n        if (!provider) {\n            return undefined;\n        }\n        const selectedAddress = provider.getSelectedAddress();\n        return this.getWalletClientForAddress(selectedAddress || undefined, chainId);\n    }\n    get rdns() {\n        const { rdns } = this.metadata;\n        if (!rdns) {\n            throw new Error('rdns not found in metadata');\n        }\n        return rdns;\n    }\n    setupEventListeners() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.metaMaskSDK.sdkInitPromise;\n            const metaMaskProvider = this.getProvider();\n            if (!metaMaskProvider) {\n                return;\n            }\n            const { handleAccountChange, handleChainChange, handleDisconnect } = eventListenerHandlers(this);\n            const handleAccountsChangedFromMetaMask = (accounts) => {\n                /**\n                 * MetaMask emits an account changed event when the wallet is disconnected\n                 * so we ignore the accountsChanged event if the disconnect event was recent\n                 */\n                if (eventTimeline.isEventRecent('disconnect', 1000)) {\n                    return;\n                }\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                handleAccountChange(accounts);\n            };\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            metaMaskProvider.on('accountsChanged', handleAccountsChangedFromMetaMask);\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            metaMaskProvider.on('chainChanged', handleChainChange);\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            metaMaskProvider.on('disconnect', handleDisconnect);\n            this.teardownEventListeners = () => {\n                metaMaskProvider.off('accountsChanged', handleAccountsChangedFromMetaMask);\n                metaMaskProvider.off('chainChanged', handleChainChange);\n                metaMaskProvider.off('disconnect', handleDisconnect);\n            };\n        });\n    }\n    /**\n     * This override is necessary to wait for the MetaMask SDK to initialize\n     * before calling the super method. Otherwise, the super method may fail\n     * to fetch the provider\n     */\n    getNetwork() {\n        const _super = Object.create(null, {\n            getNetwork: { get: () => super.getNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.metaMaskSDK.sdkInitPromise;\n            const net = yield _super.getNetwork.call(this);\n            return net;\n        });\n    }\n    // Utils\n    getProvider() {\n        var _a;\n        return ((_a = this.metaMaskSDK.getProvider()) !== null && _a !== void 0 ? _a : this.metaMaskSDK.getMobileProvider());\n    }\n    evmNetworkByChainId(chainId) {\n        return this.evmNetworks.find((network) => network.chainId === chainId);\n    }\n    getWalletClientForAddress(address, chainId) {\n        var _a, _b;\n        const provider = this.getProvider();\n        if (!provider) {\n            return undefined;\n        }\n        const effectiveChainId = (_b = (_a = this.toInt(chainId)) !== null && _a !== void 0 ? _a : this.getCurrentChainId()) !== null && _b !== void 0 ? _b : '1';\n        const network = this.evmNetworkByChainId(effectiveChainId);\n        return createWalletClient({\n            account: address,\n            chain: network ? getOrMapViemChain(network) : this.getActiveChain(),\n            transport: custom(provider),\n        });\n    }\n    toInt(chainId) {\n        if (!chainId)\n            return undefined;\n        try {\n            return parseInt(chainId);\n        }\n        catch (err) {\n            logger.debug(err);\n            return undefined;\n        }\n    }\n    getCurrentChainId() {\n        const provider = this.getProvider();\n        if (!provider) {\n            return undefined;\n        }\n        const chainId = provider.getChainId();\n        if (isHex(chainId)) {\n            return parseInt(chainId);\n        }\n        return chainId;\n    }\n    /**\n     * Checks if the current environment is the MetaMask in-app browser\n     * by checking if the MetaMask provider is installed in the window object\n     * on a mobile device\n     */\n    getIsInAppBrowser() {\n        var _a, _b;\n        if (!isMobile())\n            return false;\n        const provider = ((_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.eip6963ProviderLookup(this.rdns)) ||\n            ((_b = this.ethProviderHelper) === null || _b === void 0 ? void 0 : _b.getInjectedProvider());\n        return Boolean(provider);\n    }\n    shouldDeepLinkToMetaMaskInAppBrowser() {\n        // Not in an in-app browser\n        if (this.isInAppBrowser)\n            return false;\n        // Not a mobile device\n        if (!isMobile())\n            return false;\n        // SDK is configured to use the in-app browser\n        if (this.mobileExperience !== 'in-app-browser')\n            return false;\n        // Wallet does not have an in-app browser link\n        if (!this.metadata.inAppBrowserUrl)\n            return false;\n        return true;\n    }\n    getConnectionUri() {\n        return this.metaMaskSDKDisplayUriState.getConnectionUri();\n    }\n}\n// Utils\nconst getReadonlyRPCMap = (evmNetworkRpcMap) => Object.keys(evmNetworkRpcMap).reduce((acc, chainId) => (Object.assign(Object.assign({}, acc), { [toHex(parseInt(chainId))]: evmNetworkRpcMap[chainId] })), {});\n/**\n * Waits for the focus page event and await for an extra second\n * This is necessary to ensure the verify call will succeed\n */\nconst waitForFocusWindowEvent = () => new Promise((resolve) => {\n    PlatformEventsService.once('appFocused', resolve);\n}).then(() => new Promise((resolve) => setTimeout(resolve, 1000)));\n\nexport { MetaMaskConnector };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2105, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/EthereumWalletConnectors.js"],"sourcesContent":["'use client'\nimport { TurnkeyEVMWalletConnectors } from '@dynamic-labs/embedded-wallet-evm';\nimport '../_virtual/_tslib.js';\nimport '@dynamic-labs/utils';\nimport '@dynamic-labs/ethereum-core';\nimport 'viem';\nimport '@dynamic-labs/wallet-connector-core';\nimport '@dynamic-labs/wallet-book';\nimport 'viem/accounts';\nimport './walletConnect/WalletConnectProvider/WalletConnectProvider.js';\nimport { fetchWalletConnectWallets } from './walletConnect/utils/fetchWalletConnectWallets.js';\nimport { getWalletConnectConnector } from './walletConnect/utils/getWalletConnectConnector.js';\nimport './utils/logger.js';\nimport { FallbackEvmConnector } from './injected/FallbackEvmConnector.js';\nimport { injectedWalletOverrides, fetchInjectedWalletConnector } from './injected/fetchInjectedWalletConnectors.js';\nimport { Coinbase } from './coinbase/coinbase.js';\nimport { MetaMaskConnector } from './metaMask/MetaMaskConnector.js';\n\nconst EthereumWalletConnectors = (props) => [\n    ...injectedWalletOverrides,\n    ...fetchInjectedWalletConnector(props),\n    ...fetchWalletConnectWallets(props),\n    ...TurnkeyEVMWalletConnectors(props),\n    MetaMaskConnector,\n    Coinbase,\n    FallbackEvmConnector,\n    getWalletConnectConnector(),\n];\n\nexport { EthereumWalletConnectors };\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;;;;;;;;;;;;;;;;;AAkBA,MAAM,2BAA2B,CAAC,QAAU;WACrC,iMAAA,CAAA,0BAAuB;WACvB,CAAA,GAAA,iMAAA,CAAA,+BAA4B,AAAD,EAAE;WAC7B,CAAA,GAAA,2MAAA,CAAA,4BAAyB,AAAD,EAAE;WAC1B,CAAA,GAAA,mMAAA,CAAA,6BAA0B,AAAD,EAAE;QAC9B,qLAAA,CAAA,oBAAiB;QACjB,4KAAA,CAAA,WAAQ;QACR,wLAAA,CAAA,uBAAoB;QACpB,CAAA,GAAA,2MAAA,CAAA,4BAAyB,AAAD;KAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2157, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/EthereumWalletConnectorsWithConfig.js"],"sourcesContent":["'use client'\nimport { EthereumWalletConnectors } from './EthereumWalletConnectors.js';\n\nconst EthereumWalletConnectorsWithConfig = (providersConfig) => {\n    const classWithConfig = (className) => class extends className {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        constructor(...args) {\n            const [opts] = args;\n            super(Object.assign(Object.assign({}, opts), { providersConfig }));\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (props) => EthereumWalletConnectors(props).map(classWithConfig);\n};\n\nexport { EthereumWalletConnectorsWithConfig };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,MAAM,qCAAqC,CAAC;IACxC,MAAM,kBAAkB,CAAC,YAAc,cAAc;YACjD,8DAA8D;YAC9D,YAAY,GAAG,IAAI,CAAE;gBACjB,MAAM,CAAC,KAAK,GAAG;gBACf,KAAK,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO;oBAAE;gBAAgB;YACnE;QACJ;IACA,8DAA8D;IAC9D,OAAO,CAAC,QAAU,CAAA,GAAA,gLAAA,CAAA,2BAAwB,AAAD,EAAE,OAAO,GAAG,CAAC;AAC1D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2183, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/ethereum/src/index.js"],"sourcesContent":["'use client'\nimport './polyfills.js';\nimport { assertPackageVersion } from '@dynamic-labs/assert-package-version';\nimport { version } from '../package.js';\nexport { EthereumWalletConnector, createConnector, isEthereumWallet } from '@dynamic-labs/ethereum-core';\nexport { PhantomEvm } from './injected/PhantomEvm.js';\nexport { ExodusEvm } from './injected/ExodusEvm.js';\nexport { FallbackEvmConnector } from './injected/FallbackEvmConnector.js';\nexport { fetchInjectedWalletConnector, injectedWalletOverrides } from './injected/fetchInjectedWalletConnectors.js';\nexport { InjectedWalletBase as EthereumInjectedConnector } from './injected/InjectedWalletBase.js';\nexport { EthProviderHelper } from './ethProviderHelper.js';\nexport { INFURA_ID } from './constants.js';\nexport { createInjectedConnector } from './utils/createInjectedConnector/createInjectedConnector.js';\nexport { EthereumWalletConnectors } from './EthereumWalletConnectors.js';\nexport { EthereumWalletConnectorsWithConfig } from './EthereumWalletConnectorsWithConfig.js';\n\nassertPackageVersion('@dynamic-labs/ethereum', version);\n"],"names":[],"mappings":";AAEA;AACA;AAHA;;;;;;;;;;;;;;;AAgBA,CAAA,GAAA,+NAAA,CAAA,uBAAoB,AAAD,EAAE,0BAA0B,wJAAA,CAAA,UAAO","ignoreList":[0],"debugId":null}}]
}