{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/user.ts"],"sourcesContent":["import { createPublicClient, createWalletClient, Hex, http } from \"viem\";\nimport {\n  CHAIN,\n  RPC_URL,\n  PAYMASTER_URL,\n  PRIVATE_KEY,\n  SHBUNDLER_URL,\n  SPONSOR_WALLET_PRIVATE_KEY,\n} from \"./constants\";\nimport { toSafeSmartAccount } from \"permissionless/accounts\";\nimport { createBundlerClient, entryPoint07Address } from \"viem/account-abstraction\";\nimport { createPaymasterClient } from \"viem/account-abstraction\";\nimport { privateKeyToAccount } from \"viem/accounts\";\nimport { createSmartAccountClient } from \"permissionless/clients\";\n\n// EOA\nconst EOA = privateKeyToAccount(PRIVATE_KEY);\n\n// user client\nconst userClient = createWalletClient({\n  chain: CHAIN,\n  transport: http(RPC_URL),\n  account: EOA,\n});\n\n// public client\nconst publicClient = createPublicClient({\n  transport: http(RPC_URL),\n  chain: CHAIN,\n});\n\n// paymaster client\nconst paymasterClient = createPaymasterClient({\n  transport: http(PAYMASTER_URL),\n});\n\n// sponsor account\nconst sponsorAccount = privateKeyToAccount(SPONSOR_WALLET_PRIVATE_KEY as Hex)\n\n// sponsor wallet\nconst sponsorWallet = createWalletClient({\n  account: sponsorAccount,\n  chain: CHAIN,\n  transport: http(RPC_URL)\n})\n\n// smart wallet\nconst smartAccount = await toSafeSmartAccount({\n  client: publicClient,\n  entryPoint: {\n    address: entryPoint07Address,\n    version: \"0.7\",\n  },\n  owners: [EOA],\n  version: \"1.4.1\"\n});\n\nconst shBundler = createBundlerClient({\n  transport: http(SHBUNDLER_URL),\n  name: \"shBundler\",\n  account: smartAccount,\n  client: publicClient,\n  chain: CHAIN,\n  paymaster: paymasterClient,\n  paymasterContext: {\n    mode: \"sponsor\",\n    address: sponsorAccount.address,\n  },\n})\n\nconst smartAccountClient = createSmartAccountClient({\n  account: smartAccount,\n  client: publicClient,\n  chain: CHAIN,\n  bundlerTransport: http(SHBUNDLER_URL),\n  paymaster: paymasterClient,\n  paymasterContext: {\n    mode: \"sponsor\",\n    address: sponsorAccount.address,\n  },\n});\n\n\nexport { \n  userClient, \n  publicClient, \n  smartAccount, \n  paymasterClient, \n  sponsorWallet, \n  shBundler,\n  sponsorAccount,\n  smartAccountClient\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM;AACN,MAAM,MAAM,CAAA,GAAA,kKAAA,CAAA,sBAAmB,AAAD,EAAE,+HAAA,CAAA,cAAW;;AAE3C,cAAc;AACd,MAAM,aAAa,CAAA,GAAA,gKAAA,CAAA,qBAAkB,AAAD,EAAE;IACpC,OAAO,+HAAA,CAAA,QAAK;IACZ,WAAW,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD,EAAE,+HAAA,CAAA,UAAO;IACvB,SAAS;AACX;AAEA,gBAAgB;AAChB,MAAM,eAAe,CAAA,GAAA,gKAAA,CAAA,qBAAkB,AAAD,EAAE;IACtC,WAAW,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD,EAAE,+HAAA,CAAA,UAAO;IACvB,OAAO,+HAAA,CAAA,QAAK;AACd;AAEA,mBAAmB;AACnB,MAAM,kBAAkB,CAAA,GAAA,6LAAA,CAAA,wBAAqB,AAAD,EAAE;IAC5C,WAAW,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD,EAAE,+HAAA,CAAA,gBAAa;AAC/B;AAEA,kBAAkB;AAClB,MAAM,iBAAiB,CAAA,GAAA,kKAAA,CAAA,sBAAmB,AAAD,EAAE,+HAAA,CAAA,6BAA0B;AAErE,iBAAiB;AACjB,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,qBAAkB,AAAD,EAAE;IACvC,SAAS;IACT,OAAO,+HAAA,CAAA,QAAK;IACZ,WAAW,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD,EAAE,+HAAA,CAAA,UAAO;AACzB;AAEA,eAAe;AACf,MAAM,eAAe,MAAM,CAAA,GAAA,mLAAA,CAAA,qBAAkB,AAAD,EAAE;IAC5C,QAAQ;IACR,YAAY;QACV,SAAS,iLAAA,CAAA,sBAAmB;QAC5B,SAAS;IACX;IACA,QAAQ;QAAC;KAAI;IACb,SAAS;AACX;AAEA,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,sBAAmB,AAAD,EAAE;IACpC,WAAW,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD,EAAE,+HAAA,CAAA,gBAAa;IAC7B,MAAM;IACN,SAAS;IACT,QAAQ;IACR,OAAO,+HAAA,CAAA,QAAK;IACZ,WAAW;IACX,kBAAkB;QAChB,MAAM;QACN,SAAS,eAAe,OAAO;IACjC;AACF;AAEA,MAAM,qBAAqB,CAAA,GAAA,gLAAA,CAAA,2BAAwB,AAAD,EAAE;IAClD,SAAS;IACT,QAAQ;IACR,OAAO,+HAAA,CAAA,QAAK;IACZ,kBAAkB,CAAA,GAAA,gKAAA,CAAA,OAAI,AAAD,EAAE,+HAAA,CAAA,gBAAa;IACpC,WAAW;IACX,kBAAkB;QAChB,MAAM;QACN,SAAS,eAAe,OAAO;IACjC;AACF","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/rfq/common.ts"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { AtlasSdk, FastlaneBackend } from \"@fastlane-labs/atlas-sdk\";\nimport { CHAIN } from \"@/lib/fastlane/constants\";\n\nexport const provider = new ethers.JsonRpcProvider(\n  process.env.RPC_URL,\n  CHAIN.id\n);\n\nexport const atlasSdk = await AtlasSdk.create(\n  provider,\n  CHAIN.id,\n  new FastlaneBackend({\n    endpoint: process.env.AUCTIONEER_ENDPOINT as string,\n  })\n);\n"],"names":[],"mappings":";;;;AAKE;AALF;AACA;AACA;;;;AAEO,MAAM,WAAW,IAAI,mLAAA,CAAA,SAAM,CAAC,eAAe,CAChD,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,OAAO,EACnB,+HAAA,CAAA,QAAK,CAAC,EAAE;AAGH,MAAM,WAAW,MAAM,sKAAA,CAAA,WAAQ,CAAC,MAAM,CAC3C,UACA,+HAAA,CAAA,QAAK,CAAC,EAAE,EACR,IAAI,sKAAA,CAAA,kBAAe,CAAC;IAClB,UAAU,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB;AAC3C","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/rfq/contracts.ts"],"sourcesContent":["import { publicClient, smartAccount } from \"@/lib/fastlane/user\";\nimport { Hex, getContract } from \"viem\";\nimport { addressHubAbi, wethAbi, demoErc20Abi, pairAbi, swapRouterAbi, shMonadAbi, paymasterAbi } from \"@/lib/fastlane/abi/abi\";\nimport * as constants from \"@/lib/fastlane/constants\";\n\nconst addressHub = getContract({\n    address: constants.ADDRESS_HUB,\n    abi: addressHubAbi,\n    client: {\n      public: publicClient,\n      account: smartAccount,\n    },\n  });\n\nconst shMonadContract = getContract({\n  address: (await addressHub.read.shMonad([])) as Hex,\n  abi: shMonadAbi,\n  client: {\n    public: publicClient,\n    account: smartAccount,\n  },\n});\n\nconst paymasterContract = getContract({\n  address: (await addressHub.read.paymaster4337([])) as Hex,\n  abi: paymasterAbi,\n  client: {\n    public: publicClient,\n    account: smartAccount,\n  },\n});\n\n\nconst weth = getContract({\n    address: constants.WETH_ADDRESS,\n    abi: wethAbi,\n    client: {\n      public: publicClient,\n      account: smartAccount,\n    },\n  });\n  \nconst demoErc20UserIsSelling = getContract({\n    address: process.env.USER_SELL_TOKEN_ADDRESS as Hex,\n    abi: demoErc20Abi,\n    client: {\n        public: publicClient,\n        account: smartAccount,\n    },\n});\n\nconst demoErc20UserIsBuying = getContract({\n    address: process.env.USER_BUY_TOKEN_ADDRESS as Hex,\n    abi: demoErc20Abi,\n    client: {\n        public: publicClient,\n        account: smartAccount,\n    },\n});\n\nconst pairContract = getContract({\n  address: constants.PAIR_ADDRESS as Hex,\n  abi: pairAbi,\n  client: publicClient,\n});\n\nconst swapRouterContract = getContract({\n  address: constants.ROUTER_ADDRESS as Hex,\n  abi: swapRouterAbi,\n  client: publicClient,\n});\n\n\nexport { addressHub, weth, demoErc20UserIsSelling, demoErc20UserIsBuying, pairContract, swapRouterContract, shMonadContract, paymasterContract };\n"],"names":[],"mappings":";;;;;;;;;;AA2Ca;AA3Cb;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;AAEA,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IAC3B,SAAS,+HAAA,CAAA,cAAqB;IAC9B,KAAK,iJAAA,CAAA,gBAAa;IAClB,QAAQ;QACN,QAAQ,0HAAA,CAAA,eAAY;QACpB,SAAS,0HAAA,CAAA,eAAY;IACvB;AACF;AAEF,MAAM,kBAAkB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IAClC,SAAU,MAAM,WAAW,IAAI,CAAC,OAAO,CAAC,EAAE;IAC1C,KAAK,kJAAA,CAAA,aAAU;IACf,QAAQ;QACN,QAAQ,0HAAA,CAAA,eAAY;QACpB,SAAS,0HAAA,CAAA,eAAY;IACvB;AACF;AAEA,MAAM,oBAAoB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IACpC,SAAU,MAAM,WAAW,IAAI,CAAC,aAAa,CAAC,EAAE;IAChD,KAAK,sJAAA,CAAA,eAAY;IACjB,QAAQ;QACN,QAAQ,0HAAA,CAAA,eAAY;QACpB,SAAS,0HAAA,CAAA,eAAY;IACvB;AACF;AAGA,MAAM,OAAO,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IACrB,SAAS,+HAAA,CAAA,eAAsB;IAC/B,KAAK,4IAAA,CAAA,UAAO;IACZ,QAAQ;QACN,QAAQ,0HAAA,CAAA,eAAY;QACpB,SAAS,0HAAA,CAAA,eAAY;IACvB;AACF;AAEF,MAAM,yBAAyB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IACvC,SAAS,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,uBAAuB;IAC5C,KAAK,sJAAA,CAAA,eAAY;IACjB,QAAQ;QACJ,QAAQ,0HAAA,CAAA,eAAY;QACpB,SAAS,0HAAA,CAAA,eAAY;IACzB;AACJ;AAEA,MAAM,wBAAwB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IACtC,SAAS,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,sBAAsB;IAC3C,KAAK,sJAAA,CAAA,eAAY;IACjB,QAAQ;QACJ,QAAQ,0HAAA,CAAA,eAAY;QACpB,SAAS,0HAAA,CAAA,eAAY;IACzB;AACJ;AAEA,MAAM,eAAe,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,SAAS,+HAAA,CAAA,eAAsB;IAC/B,KAAK,4IAAA,CAAA,UAAO;IACZ,QAAQ,0HAAA,CAAA,eAAY;AACtB;AAEA,MAAM,qBAAqB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE;IACrC,SAAS,+HAAA,CAAA,iBAAwB;IACjC,KAAK,wJAAA,CAAA,gBAAa;IAClB,QAAQ,0HAAA,CAAA,eAAY;AACtB","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/rfq/baseline.ts"],"sourcesContent":["import { swapRouterAbi } from \"@/lib/fastlane/abi/abi\";\nimport { encodeFunctionData, zeroAddress } from \"viem\";\nimport * as constants from \"@/lib/fastlane/constants\";\nimport { BaselineCall } from \"@/lib/fastlane/rfq/types\";\nimport { swapRouterContract, pairContract } from \"@/lib/fastlane/rfq/contracts\";\n\nasync function generateBaseline(\n  recipient: string\n): Promise<[BaselineCall, bigint]> {\n  const userSellTokenAddress = constants.USER_SELL_TOKEN_ADDRESS;\n  const userBuyTokenAddress = constants.USER_BUY_TOKEN_ADDRESS;\n  const userSellTokenAmount = constants.USER_SELL_TOKEN_AMOUNT;\n  const routerAddress = constants.ROUTER_ADDRESS;\n\n  const [reserve0, reserve1, blockTimestampLast] = await pairContract.read.getReserves() as [bigint, bigint, bigint];\n  const token0 = await pairContract.read.token0();\n\n  const reserveIn = token0 === userSellTokenAddress ? reserve0 : reserve1;\n  const reserveOut = token0 === userSellTokenAddress ? reserve1 : reserve0;\n\n  const minAmountOut = await swapRouterContract.read.getAmountOut([\n    userSellTokenAmount,\n    reserveIn,\n    reserveOut,\n  ]) as bigint;\n\n  const data = encodeFunctionData({\n    abi: swapRouterAbi,\n    functionName: \"swapExactTokensForTokens\",\n    args: [\n      userSellTokenAmount,\n      minAmountOut,\n      [userSellTokenAddress, userBuyTokenAddress],\n      recipient,\n      BigInt(blockTimestampLast) + BigInt(1000),\n    ],\n  });\n  \n  const baselineCall: BaselineCall = {\n    to: routerAddress,\n    data,\n    value:\n      userSellTokenAddress === zeroAddress\n        ? BigInt(userSellTokenAmount)\n        : BigInt(0),\n  };\n\n  return [baselineCall, minAmountOut];\n}\n\nexport { generateBaseline };"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;AACA;AAEA;;;;;;;;;AAEA,eAAe,iBACb,SAAiB;IAEjB,MAAM,uBAAuB,+HAAA,CAAA,0BAAiC;IAC9D,MAAM,sBAAsB,+HAAA,CAAA,yBAAgC;IAC5D,MAAM,sBAAsB,+HAAA,CAAA,yBAAgC;IAC5D,MAAM,gBAAgB,+HAAA,CAAA,iBAAwB;IAE9C,MAAM,CAAC,UAAU,UAAU,mBAAmB,GAAG,MAAM,sIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,WAAW;IACpF,MAAM,SAAS,MAAM,sIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;IAE7C,MAAM,YAAY,WAAW,uBAAuB,WAAW;IAC/D,MAAM,aAAa,WAAW,uBAAuB,WAAW;IAEhE,MAAM,eAAe,MAAM,sIAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9D;QACA;QACA;KACD;IAED,MAAM,OAAO,CAAA,GAAA,qKAAA,CAAA,qBAAkB,AAAD,EAAE;QAC9B,KAAK,wJAAA,CAAA,gBAAa;QAClB,cAAc;QACd,MAAM;YACJ;YACA;YACA;gBAAC;gBAAsB;aAAoB;YAC3C;YACA,OAAO,sBAAsB,OAAO;SACrC;IACH;IAEA,MAAM,eAA6B;QACjC,IAAI;QACJ;QACA,OACE,yBAAyB,uJAAA,CAAA,cAAW,GAChC,OAAO,uBACP,OAAO;IACf;IAEA,OAAO;QAAC;QAAc;KAAa;AACrC","debugId":null}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/rfq/types.ts"],"sourcesContent":["import { Client, Hex } from \"viem\";\n\ntype GasPricesEncoded = {\n  maxFeePerGas: Hex;\n  maxPriorityFeePerGas: Hex;\n};\n\ntype GasPriceResultEncoded = {\n  fast: GasPricesEncoded;\n  standard: GasPricesEncoded;\n  slow: GasPricesEncoded;\n};\n\ntype GasPrices = {\n  maxFeePerGas: bigint;\n  maxPriorityFeePerGas: bigint;\n};\n\ntype GasPriceResult = {\n  fast: GasPrices;\n  standard: GasPrices;\n  slow: GasPrices;\n};\n\ntype GasPriceRequest = {\n  Method: \"gas_getUserOperationGasPrice\";\n  Parameters: [];\n  ReturnType: GasPriceResultEncoded;\n};\n\ninterface PolicyBond {\n  bonded: bigint;\n  unbonding: bigint;\n  lastAccessedBlock: bigint;\n}\n\ntype SwapIntent = {\n  tokenUserBuys: string;\n  minAmountUserBuys: bigint;\n  tokenUserSells: string;\n  amountUserSells: bigint;\n};\n\nfunction generateSwapIntent(minAmountUserBuys: bigint): SwapIntent {\n  const swapIntent: SwapIntent = {\n    tokenUserBuys: process.env.USER_BUY_TOKEN_ADDRESS as string,\n    minAmountUserBuys: minAmountUserBuys,\n    tokenUserSells: process.env.USER_SELL_TOKEN_ADDRESS as string,\n    amountUserSells: BigInt(process.env.USER_SELL_TOKEN_AMOUNT as string),\n  };\n\n  return swapIntent;\n}\n\ntype BaselineCall = {\n  to: string;\n  data: string;\n  value: bigint;\n};\n\ntype Call = {\n  to: Hex;\n  data: Hex;\n  value: bigint;\n};\n\ntype PaymasterMode = \"user\" | \"sponsor\";\ntype PaymasterData = {\n  mode: PaymasterMode;\n  validUntil?: bigint;\n  validAfter?: bigint;\n  sponsorSignature?: Hex;\n  userClient?: Client;\n};\n\nexport type {\n  GasPriceRequest,\n  GasPriceResult,\n  GasPriceResultEncoded,\n  PolicyBond,\n  SwapIntent,\n  BaselineCall,\n  Call,\n  PaymasterMode,\n  PaymasterData,\n};\n\nexport { generateSwapIntent };\n"],"names":[],"mappings":";;;AA6CmB;AAFnB,SAAS,mBAAmB,iBAAyB;IACnD,MAAM,aAAyB;QAC7B,eAAe,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,sBAAsB;QACjD,mBAAmB;QACnB,gBAAgB,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,uBAAuB;QACnD,iBAAiB,OAAO,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,sBAAsB;IAC5D;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/rfq/helpers.ts"],"sourcesContent":["import { Hex, encodeFunctionData, Client, zeroAddress } from \"viem\";\nimport { atlasSdk } from \"@/lib/fastlane/rfq/common\";\nimport { publicClient } from \"@/lib/fastlane/user\";\nimport { demoErc20UserIsSelling } from \"@/lib/fastlane/rfq/contracts\";\nimport * as constants from \"@/lib/fastlane/constants\";\n\nexport async function approveErc20IfNeeded(client: Client) {\n  if (process.env.USER_SELL_TOKEN_ADDRESS === zeroAddress) {\n    console.log(\"User selling ETH, skipping approval\");\n    return;\n  }\n\n  const atlasAddress = (await atlasSdk.getAtlasAddress()) as Hex;\n\n  const allowance = await demoErc20UserIsSelling.read.allowance([\n    client.account?.address,\n    atlasAddress,\n  ]) as bigint;\n\n  if (allowance >= BigInt(constants.USER_SELL_TOKEN_AMOUNT)) {\n    console.log(\"User already has enough allowance, skipping approval, \", allowance);\n    return;\n  }\n\n  console.log(\"Approving tokens\");\n\n  const data = encodeFunctionData({\n    abi: demoErc20UserIsSelling.abi,\n    functionName: \"approve\",\n    args: [atlasAddress, constants.USER_SELL_TOKEN_AMOUNT],\n  });\n\n  const hash = await client.sendTransaction({\n    to: process.env.USER_SELL_TOKEN_ADDRESS as Hex,\n    data,\n  });\n\n  await publicClient.waitForTransactionReceipt({ hash });\n\n  console.log(\"Aprroved:\", hash);\n}"],"names":[],"mappings":";;;AAOM;AAPN;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAEO,eAAe,qBAAqB,MAAc;IACvD,IAAI,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,uBAAuB,KAAK,uJAAA,CAAA,cAAW,EAAE;QACvD,QAAQ,GAAG,CAAC;QACZ;IACF;IAEA,MAAM,eAAgB,MAAM,mIAAA,CAAA,WAAQ,CAAC,eAAe;IAEpD,MAAM,YAAY,MAAM,sIAAA,CAAA,yBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC;QAC5D,OAAO,OAAO,EAAE;QAChB;KACD;IAED,IAAI,aAAa,OAAO,+HAAA,CAAA,yBAAgC,GAAG;QACzD,QAAQ,GAAG,CAAC,0DAA0D;QACtE;IACF;IAEA,QAAQ,GAAG,CAAC;IAEZ,MAAM,OAAO,CAAA,GAAA,qKAAA,CAAA,qBAAkB,AAAD,EAAE;QAC9B,KAAK,sIAAA,CAAA,yBAAsB,CAAC,GAAG;QAC/B,cAAc;QACd,MAAM;YAAC;YAAc,+HAAA,CAAA,yBAAgC;SAAC;IACxD;IAEA,MAAM,OAAO,MAAM,OAAO,eAAe,CAAC;QACxC,IAAI,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,uBAAuB;QACvC;IACF;IAEA,MAAM,0HAAA,CAAA,eAAY,CAAC,yBAAyB,CAAC;QAAE;IAAK;IAEpD,QAAQ,GAAG,CAAC,aAAa;AAC3B","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/rfq/atlas.ts"],"sourcesContent":["import { Bundle } from \"@fastlane-labs/atlas-sdk\";\nimport { provider, atlasSdk } from \"@/lib/fastlane/rfq/common\";\nimport { generateBaseline } from \"@/lib/fastlane/rfq/baseline\";\nimport { generateSwapIntent } from \"@/lib/fastlane/rfq/types\";\nimport { approveErc20IfNeeded } from \"@/lib/fastlane/rfq/helpers\";\nimport { Client, encodeFunctionData, Hex, zeroAddress } from \"viem\";\nimport * as constants from \"@/lib/fastlane/constants\";\nimport { rfqControlAbi } from \"@/lib/fastlane/abi/abi\";\n\nexport async function setupAtlas(walletClient: Client): Promise<Bundle> {\n  console.log(\"===== SETTING UP DEMO =====\");\n\n  const userAddress = walletClient.account?.address as Hex;\n\n  // smart wallet doesn't need to approve\n  if (walletClient.type == \"walletClient\") {\n    await approveErc20IfNeeded(walletClient);\n  }\n\n  const executionEnvironment = await atlasSdk.getExecutionEnvironment(\n    userAddress,\n    constants.RFQ_CONTROL_ADDRESS\n  );\n\n  const [baselineCall, minAmountOut] = await generateBaseline(\n    executionEnvironment\n  );\n\n  console.log(\"baseline swap amount:\", minAmountOut);\n\n  const swapIntent = generateSwapIntent(minAmountOut);\n\n  const swapData = encodeFunctionData({\n    abi: rfqControlAbi,\n    functionName: \"swap\",\n    args: [swapIntent, baselineCall],\n  });\n\n  const currentBlockNumber = await provider.getBlockNumber();\n  const suggestedFeeData = await provider.getFeeData();\n\n  console.log(\"Current block number:\", currentBlockNumber);\n\n  let atlasUserOperation = await atlasSdk.newUserOperation({\n    from: userAddress,\n    value:\n      constants.USER_SELL_TOKEN_ADDRESS == zeroAddress\n        ? BigInt(constants.USER_SELL_TOKEN_AMOUNT)\n        : BigInt(0),\n    gas: BigInt(1_000_000), // Hardcoded for demo\n    maxFeePerGas: (suggestedFeeData.maxFeePerGas as bigint) * BigInt(2),\n    deadline: BigInt(currentBlockNumber + 1000), // need big deadline because fast block times\n    dapp: constants.RFQ_CONTROL_ADDRESS,\n    control: constants.RFQ_CONTROL_ADDRESS,\n    sessionKey: constants.AUCTIONEER_ADDRESS,\n    data: swapData,\n  });\n\n  const bundle = (await atlasSdk.submitUserOperation(atlasUserOperation, [], {\n    auctionDurationInMillis: 1500, // Longer duration for the demo\n    disableBundling: true, // Disable Atlas bundler, we bundle ourselves\n    // disableSimulations: true,\n  })) as Bundle;\n\n  console.log(\"Atlas bundle received\");\n\n  console.log(\"===== SETUP COMPLETE =====\");\n\n  return bundle;\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;AAEO,eAAe,WAAW,YAAoB;IACnD,QAAQ,GAAG,CAAC;IAEZ,MAAM,cAAc,aAAa,OAAO,EAAE;IAE1C,uCAAuC;IACvC,IAAI,aAAa,IAAI,IAAI,gBAAgB;QACvC,MAAM,CAAA,GAAA,oIAAA,CAAA,uBAAoB,AAAD,EAAE;IAC7B;IAEA,MAAM,uBAAuB,MAAM,mIAAA,CAAA,WAAQ,CAAC,uBAAuB,CACjE,aACA,+HAAA,CAAA,sBAA6B;IAG/B,MAAM,CAAC,cAAc,aAAa,GAAG,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EACxD;IAGF,QAAQ,GAAG,CAAC,yBAAyB;IAErC,MAAM,aAAa,CAAA,GAAA,kIAAA,CAAA,qBAAkB,AAAD,EAAE;IAEtC,MAAM,WAAW,CAAA,GAAA,qKAAA,CAAA,qBAAkB,AAAD,EAAE;QAClC,KAAK,wJAAA,CAAA,gBAAa;QAClB,cAAc;QACd,MAAM;YAAC;YAAY;SAAa;IAClC;IAEA,MAAM,qBAAqB,MAAM,mIAAA,CAAA,WAAQ,CAAC,cAAc;IACxD,MAAM,mBAAmB,MAAM,mIAAA,CAAA,WAAQ,CAAC,UAAU;IAElD,QAAQ,GAAG,CAAC,yBAAyB;IAErC,IAAI,qBAAqB,MAAM,mIAAA,CAAA,WAAQ,CAAC,gBAAgB,CAAC;QACvD,MAAM;QACN,OACE,+HAAA,CAAA,0BAAiC,IAAI,uJAAA,CAAA,cAAW,GAC5C,OAAO,+HAAA,CAAA,yBAAgC,IACvC,OAAO;QACb,KAAK,OAAO;QACZ,cAAc,AAAC,iBAAiB,YAAY,GAAc,OAAO;QACjE,UAAU,OAAO,qBAAqB;QACtC,MAAM,+HAAA,CAAA,sBAA6B;QACnC,SAAS,+HAAA,CAAA,sBAA6B;QACtC,YAAY,+HAAA,CAAA,qBAA4B;QACxC,MAAM;IACR;IAEA,MAAM,SAAU,MAAM,mIAAA,CAAA,WAAQ,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,EAAE;QACzE,yBAAyB;QACzB,iBAAiB;IAEnB;IAEA,QAAQ,GAAG,CAAC;IAEZ,QAAQ,GAAG,CAAC;IAEZ,OAAO;AACT","debugId":null}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/lib/fastlane/rfq/demo-smart-wallet.ts"],"sourcesContent":["import { atlasSdk } from \"@/lib/fastlane/rfq/common\";\nimport { publicClient, smartAccount, smartAccountClient } from \"@/lib/fastlane/user\";\nimport { encodeFunctionData, Hex, zeroAddress } from \"viem\";\nimport { setupAtlas } from \"@/lib/fastlane/rfq/atlas\";\nimport { demoErc20UserIsSelling, shMonadContract, weth, paymasterContract } from \"@/lib/fastlane/rfq/contracts\";\nimport { demoErc20Abi, wethAbi } from \"@/lib/fastlane/abi/abi\";\nimport { Call } from \"@/lib/fastlane/rfq/types\";\nimport * as constants from \"@/lib/fastlane/constants\";\n\n\nasync function rfqSwap() {\n  const smartAccountBalance = await publicClient.getBalance({\n    address: smartAccount.address,\n  });\n  console.log(\"smart account address\", smartAccount.address);\n  console.log(\"Smart Account MON Balance:\", smartAccountBalance);\n\n  const policyId = (await paymasterContract.read.POLICY_ID([])) as bigint;\n\n  const smartAccountBondedAmount = (await shMonadContract.read.balanceOfBonded([\n    policyId,\n    smartAccount.address,\n  ])) as bigint;\n  console.log(\"Smart Account shmonad bonded\", smartAccountBondedAmount);\n\n  const wethBalance = await weth.read.balanceOf([smartAccount.address]);\n  console.log(\"WETH Balance:\", wethBalance); \n\n  const bundle = await setupAtlas(smartAccountClient);\n  const atlasAddress = (await atlasSdk.getAtlasAddress()) as Hex;\n\n  const wrapData = encodeFunctionData({\n    abi: wethAbi,\n    functionName: \"deposit\",\n    args: [],\n  });\n  const wrapCall: Call = {to: constants.WETH_ADDRESS, data: wrapData, value: BigInt(constants.USER_SELL_TOKEN_AMOUNT)};\n\n  const approveData = encodeFunctionData({\n    abi: demoErc20Abi,\n    functionName: \"approve\",\n    args: [atlasAddress, constants.USER_SELL_TOKEN_AMOUNT],\n  });\n  const approveCall: Call = {to: constants.USER_SELL_TOKEN_ADDRESS, data: approveData, value: BigInt(0)};\n\n  const allowance = await demoErc20UserIsSelling.read.allowance([\n    smartAccount.address,\n    atlasAddress,\n  ]) as bigint;\n\n  if (allowance >= BigInt(constants.USER_SELL_TOKEN_AMOUNT)) {\n    console.log(\"User already has enough allowance, skipping approval, \", allowance);\n  }\n\n  const atlasData = atlasSdk.getMetacallCalldata(\n    bundle.userOperation,\n    bundle.solverOperations,\n    bundle.dAppOperation,\n  ) as Hex;\n\n  const atlasCall: Call = {\n    to: atlasAddress,\n    value:\n    constants.USER_SELL_TOKEN_ADDRESS == zeroAddress\n        ? BigInt(constants.USER_SELL_TOKEN_AMOUNT)\n        : BigInt(0),\n    data: atlasData,\n  };\n\n  if (bundle.solverOperations.length > 0) {\n    console.log(\"solver bid amount:\", bundle.solverOperations[0].getField(\"bidAmount\").value);\n  }\n\n  const calls = [wrapCall, approveCall, atlasCall];\n\n  // const hash = await smartAccountClient.sendUserOperation({\n  //     account: smartAccount,\n  //     calls: calls,\n  // });\n\n  // console.log(\"User Operation Hash:\", hash);\n\n  // const userOpReceipt = await smartAccountClient.waitForUserOperationReceipt({ hash });\n  // console.log(\"User Operation Receipt:\", userOpReceipt);\n}\n\nexport { rfqSwap };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;AAGA,eAAe;IACb,MAAM,sBAAsB,MAAM,0HAAA,CAAA,eAAY,CAAC,UAAU,CAAC;QACxD,SAAS,0HAAA,CAAA,eAAY,CAAC,OAAO;IAC/B;IACA,QAAQ,GAAG,CAAC,yBAAyB,0HAAA,CAAA,eAAY,CAAC,OAAO;IACzD,QAAQ,GAAG,CAAC,8BAA8B;IAE1C,MAAM,WAAY,MAAM,sIAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IAE3D,MAAM,2BAA4B,MAAM,sIAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,eAAe,CAAC;QAC3E;QACA,0HAAA,CAAA,eAAY,CAAC,OAAO;KACrB;IACD,QAAQ,GAAG,CAAC,gCAAgC;IAE5C,MAAM,cAAc,MAAM,sIAAA,CAAA,OAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAAC,0HAAA,CAAA,eAAY,CAAC,OAAO;KAAC;IACpE,QAAQ,GAAG,CAAC,iBAAiB;IAE7B,MAAM,SAAS,MAAM,CAAA,GAAA,kIAAA,CAAA,aAAU,AAAD,EAAE,0HAAA,CAAA,qBAAkB;IAClD,MAAM,eAAgB,MAAM,mIAAA,CAAA,WAAQ,CAAC,eAAe;IAEpD,MAAM,WAAW,CAAA,GAAA,qKAAA,CAAA,qBAAkB,AAAD,EAAE;QAClC,KAAK,4IAAA,CAAA,UAAO;QACZ,cAAc;QACd,MAAM,EAAE;IACV;IACA,MAAM,WAAiB;QAAC,IAAI,+HAAA,CAAA,eAAsB;QAAE,MAAM;QAAU,OAAO,OAAO,+HAAA,CAAA,yBAAgC;IAAC;IAEnH,MAAM,cAAc,CAAA,GAAA,qKAAA,CAAA,qBAAkB,AAAD,EAAE;QACrC,KAAK,sJAAA,CAAA,eAAY;QACjB,cAAc;QACd,MAAM;YAAC;YAAc,+HAAA,CAAA,yBAAgC;SAAC;IACxD;IACA,MAAM,cAAoB;QAAC,IAAI,+HAAA,CAAA,0BAAiC;QAAE,MAAM;QAAa,OAAO,OAAO;IAAE;IAErG,MAAM,YAAY,MAAM,sIAAA,CAAA,yBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC;QAC5D,0HAAA,CAAA,eAAY,CAAC,OAAO;QACpB;KACD;IAED,IAAI,aAAa,OAAO,+HAAA,CAAA,yBAAgC,GAAG;QACzD,QAAQ,GAAG,CAAC,0DAA0D;IACxE;IAEA,MAAM,YAAY,mIAAA,CAAA,WAAQ,CAAC,mBAAmB,CAC5C,OAAO,aAAa,EACpB,OAAO,gBAAgB,EACvB,OAAO,aAAa;IAGtB,MAAM,YAAkB;QACtB,IAAI;QACJ,OACA,+HAAA,CAAA,0BAAiC,IAAI,uJAAA,CAAA,cAAW,GAC1C,OAAO,+HAAA,CAAA,yBAAgC,IACvC,OAAO;QACb,MAAM;IACR;IAEA,IAAI,OAAO,gBAAgB,CAAC,MAAM,GAAG,GAAG;QACtC,QAAQ,GAAG,CAAC,sBAAsB,OAAO,gBAAgB,CAAC,EAAE,CAAC,QAAQ,CAAC,aAAa,KAAK;IAC1F;IAEA,MAAM,QAAQ;QAAC;QAAU;QAAa;KAAU;AAEhD,4DAA4D;AAC5D,6BAA6B;AAC7B,oBAAoB;AACpB,MAAM;AAEN,6CAA6C;AAE7C,wFAAwF;AACxF,yDAAyD;AAC3D","debugId":null}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/app/components/Methods.js"],"sourcesContent":["'use client';\nimport { useState, useEffect } from 'react';\nimport { useDynamicContext, useIsLoggedIn } from \"@dynamic-labs/sdk-react-core\";\nimport { isEthereumWallet } from '@dynamic-labs/ethereum'\nimport { userClient, smartAccountClient, sponsorAccount } from '@/lib/fastlane/user';\nimport { shBundler } from '@/lib/fastlane/user';\nimport { rfqSwap } from '@/lib/fastlane/rfq/demo-smart-wallet';\nimport './Methods.css';\n\nexport default function DynamicMethods({ isDarkMode }) {\n  const isLoggedIn = useIsLoggedIn();\n  const { sdkHasLoaded, primaryWallet } = useDynamicContext();\n  const [isLoading, setIsLoading] = useState(true);\n  const [result, setResult] = useState('');\n\n  \n  const safeStringify = (obj) => {\n    const seen = new WeakSet();\n    return JSON.stringify(obj, (key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        if (seen.has(value)) {\n          return '[Circular]';\n        }\n        seen.add(value);\n      }\n      return value;\n    }, 2);\n  };\n\n  useEffect(() => {\n    if (sdkHasLoaded && isLoggedIn && primaryWallet) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [sdkHasLoaded, isLoggedIn, primaryWallet]);\n\n  function clearResult() {\n    setResult('');\n  }\n\n  async function fetchWalletClient() {\n      if(!smartAccountClient) return;\n      setResult(safeStringify(smartAccountClient));\n  }\n\n  async function sendSponsoredTransaction() {\n    if(!smartAccountClient) return;\n    const userOpHash = await smartAccountClient.sendUserOperation({\n      account: smartAccountClient.account,\n      calls: [\n        {\n          to: userClient.account.address,\n          value: 1000000000000000n,\n        },\n      ],\n    });\n    \n    console.log(\"User Operation Hash:\", userOpHash);\n    \n    const userOpReceipt = await shBundler.waitForUserOperationReceipt({\n      hash: userOpHash,\n    });\n    console.log(\"User Operation Receipt:\", userOpReceipt);\n  }\n\n  async function setupRFQDemo() {\n    await rfqSwap();\n  }\n\n\n\n   return (\n    <>\n      {!isLoading && (\n        <div className=\"dynamic-methods\" data-theme={isDarkMode ? 'dark' : 'light'}>\n          <div className=\"methods-container\">\n            \n            \n    {primaryWallet && isEthereumWallet(primaryWallet) &&\n      <>\n        <button className=\"btn btn-primary\" onClick={fetchWalletClient}>Fetch Wallet Client</button>\n        <button className=\"btn btn-primary\" onClick={sendSponsoredTransaction}>Send Sponsored Transaction</button>    \n        <button className=\"btn btn-primary\" onClick={setupRFQDemo}>Setup RFQ Demo</button>\n      </>\n    }\n\n        </div>\n          {result && (\n            <div className=\"results-container\">\n              <pre className=\"results-text\">{result}</pre>\n            </div>\n          )}\n          {result && (\n            <div className=\"clear-container\">\n              <button className=\"btn btn-primary\" onClick={clearResult}>Clear</button>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;;;;;;;;AANA;;;;;;;;AASe,SAAS,eAAe,EAAE,UAAU,EAAE;;IACnD,MAAM,aAAa,CAAA,GAAA,8NAAA,CAAA,gBAAa,AAAD;IAC/B,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,iPAAA,CAAA,oBAAiB,AAAD;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAGrC,MAAM,gBAAgB,CAAC;QACrB,MAAM,OAAO,IAAI;QACjB,OAAO,KAAK,SAAS,CAAC,KAAK,CAAC,KAAK;YAC/B,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;gBAC/C,IAAI,KAAK,GAAG,CAAC,QAAQ;oBACnB,OAAO;gBACT;gBACA,KAAK,GAAG,CAAC;YACX;YACA,OAAO;QACT,GAAG;IACL;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,gBAAgB,cAAc,eAAe;gBAC/C,aAAa;YACf,OAAO;gBACL,aAAa;YACf;QACF;mCAAG;QAAC;QAAc;QAAY;KAAc;IAE5C,SAAS;QACP,UAAU;IACZ;IAEA,eAAe;QACX,IAAG,CAAC,0HAAA,CAAA,qBAAkB,EAAE;QACxB,UAAU,cAAc,0HAAA,CAAA,qBAAkB;IAC9C;IAEA,eAAe;QACb,IAAG,CAAC,0HAAA,CAAA,qBAAkB,EAAE;QACxB,MAAM,aAAa,MAAM,0HAAA,CAAA,qBAAkB,CAAC,iBAAiB,CAAC;YAC5D,SAAS,0HAAA,CAAA,qBAAkB,CAAC,OAAO;YACnC,OAAO;gBACL;oBACE,IAAI,0HAAA,CAAA,aAAU,CAAC,OAAO,CAAC,OAAO;oBAC9B,OAAO,iBAAiB;gBAC1B;aACD;QACH;QAEA,QAAQ,GAAG,CAAC,wBAAwB;QAEpC,MAAM,gBAAgB,MAAM,0HAAA,CAAA,YAAS,CAAC,2BAA2B,CAAC;YAChE,MAAM;QACR;QACA,QAAQ,GAAG,CAAC,2BAA2B;IACzC;IAEA,eAAe;QACb,MAAM,CAAA,GAAA,oJAAA,CAAA,UAAO,AAAD;IACd;IAIC,qBACC;kBACG,CAAC,2BACA,6LAAC;YAAI,WAAU;YAAkB,cAAY,aAAa,SAAS;;8BACjE,6LAAC;oBAAI,WAAU;8BAGpB,iBAAiB,CAAA,GAAA,iNAAA,CAAA,mBAAgB,AAAD,EAAE,gCACjC;;0CACE,6LAAC;gCAAO,WAAU;gCAAkB,SAAS;0CAAmB;;;;;;0CAChE,6LAAC;gCAAO,WAAU;gCAAkB,SAAS;0CAA0B;;;;;;0CACvE,6LAAC;gCAAO,WAAU;gCAAkB,SAAS;0CAAc;;;;;;;;;;;;;gBAKxD,wBACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCAAgB;;;;;;;;;;;gBAGlC,wBACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAO,WAAU;wBAAkB,SAAS;kCAAa;;;;;;;;;;;;;;;;;;AAOxE;GA7FwB;;QACH,8NAAA,CAAA,gBAAa;QACQ,iPAAA,CAAA,oBAAiB;;;KAFnC","debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { DynamicWidget } from \"@/lib/dynamic\";\nimport { useState, useEffect } from 'react';\nimport DynamicMethods from \"@/app/components/Methods\";\nimport './page.css';\n\nconst checkIsDarkSchemePreferred = () => {\n  if (typeof window !== 'undefined') {\n    return window.matchMedia?.('(prefers-color-scheme:dark)')?.matches ?? false;\n  }\n  return false;\n};\n\nexport default function Main() {\n  const [isDarkMode, setIsDarkMode] = useState(checkIsDarkSchemePreferred);\n\n  useEffect(() => {\n    const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => setIsDarkMode(checkIsDarkSchemePreferred());\n    \n    darkModeMediaQuery.addEventListener('change', handleChange);\n    return () => darkModeMediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  return (\n    <div className={`container ${isDarkMode ? 'dark' : 'light'}`}>\n      <div className=\"header\">\n        <img className=\"logo\" src={isDarkMode ? \"/logo-light.png\" : \"/logo-dark.png\"} alt=\"dynamic\" />\n        <div className=\"header-buttons\">\n          <button className=\"docs-button\" onClick={() => window.open('https://docs.dynamic.xyz', '_blank', 'noopener,noreferrer')}>Docs</button>\n          <button className=\"get-started\" onClick={() => window.open('https://app.dynamic.xyz', '_blank', 'noopener,noreferrer')}>Get started</button>\n        </div>\n      </div>\n      <div className=\"modal\">\n        <DynamicWidget />\n        <DynamicMethods isDarkMode={isDarkMode} />\n      </div>\n      <div className=\"footer\">\n        <div className=\"footer-text\">Made with ❤️ by dynamic</div>\n        <img className=\"footer-image\" src={isDarkMode ? \"/image-dark.png\" : \"/image-light.png\"} alt=\"dynamic\" />\n      </div>\n    </div> \n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AACA;;;;;;;AAJA;;;;;AAOA,MAAM,6BAA6B;IACjC,wCAAmC;QACjC,OAAO,OAAO,UAAU,GAAG,gCAAgC,WAAW;IACxE;;AAEF;AAEe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,MAAM,qBAAqB,OAAO,UAAU,CAAC;YAC7C,MAAM;+CAAe,IAAM,cAAc;;YAEzC,mBAAmB,gBAAgB,CAAC,UAAU;YAC9C;kCAAO,IAAM,mBAAmB,mBAAmB,CAAC,UAAU;;QAChE;yBAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAW,CAAC,UAAU,EAAE,aAAa,SAAS,SAAS;;0BAC1D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;wBAAO,KAAK,aAAa,oBAAoB;wBAAkB,KAAI;;;;;;kCAClF,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAO,WAAU;gCAAc,SAAS,IAAM,OAAO,IAAI,CAAC,4BAA4B,UAAU;0CAAwB;;;;;;0CACzH,6LAAC;gCAAO,WAAU;gCAAc,SAAS,IAAM,OAAO,IAAI,CAAC,2BAA2B,UAAU;0CAAwB;;;;;;;;;;;;;;;;;;0BAG5H,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,uNAAA,CAAA,gBAAa;;;;;kCACd,6LAAC,+HAAA,CAAA,UAAc;wBAAC,YAAY;;;;;;;;;;;;0BAE9B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAc;;;;;;kCAC7B,6LAAC;wBAAI,WAAU;wBAAe,KAAK,aAAa,oBAAoB;wBAAoB,KAAI;;;;;;;;;;;;;;;;;;AAIpG;GA9BwB;KAAA","debugId":null}}]
}