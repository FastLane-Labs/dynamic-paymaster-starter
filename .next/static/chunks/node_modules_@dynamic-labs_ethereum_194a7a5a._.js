(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@dynamic-labs_ethereum_194a7a5a._.js", {

"[project]/node_modules/@dynamic-labs/ethereum/src/polyfills.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/buffer/index.js [app-client] (ecmascript)");
'use client';
;
/* eslint-disable */ /**
 * @walletconnect/client and @walletconnect/qrcode-modal use `global` and `Buffer`, respectively.
 * This issue is captured here: https://github.com/WalletConnect/walletconnect-monorepo/issues/341
 * Here are some GH issues of others facing the same problem:
 *   * https://github.com/WalletConnect/walletconnect-monorepo/issues/734
 *   * https://github.com/WalletConnect/walletconnect-monorepo/issues/748
 */ if (typeof window !== 'undefined') {
    window.global = globalThis;
    Object.assign(window, {
        Buffer: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"]
    });
}
}}),
"[project]/node_modules/@dynamic-labs/ethereum/package.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "version": (()=>version)
});
'use client';
var version = "4.9.2";
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "__awaiter": (()=>__awaiter),
    "__rest": (()=>__rest)
});
'use client';
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/utils/normalizeRpcError/normalizeRpcError.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "normalizeRpcError": (()=>normalizeRpcError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$rpc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/errors/rpc.js [app-client] (ecmascript)");
'use client';
;
/**
 * Some wallets may not reject some operations following the EIP-1193 standard.
 * This function normalizes the errors to follow the EIP-1193 standard.
 */ // eslint-disable-next-line @typescript-eslint/no-explicit-any
const normalizeRpcError = (err)=>{
    /**
     * When the error already comply with the EIP-1193 standard, we don't need to normalize it
     */ if (err.code === 4001) {
        throw err;
    }
    let mappedError = null;
    try {
        mappedError = mapRpcError(err);
    } catch (e) {
    // ignore errors when mapping
    }
    if (mappedError) {
        throw mappedError;
    }
    /**
     * If no error is mapped, we rethrow the original error
     */ throw err;
};
const mapRpcError = (err)=>{
    /**
     * Checks for user rejection error message
     * Rainbow Extension will return a message like "User rejected the request"
     * BitGet will return a message like "user reject this request"
     * Keplr will return a message that matches "Request rejected"
     */ if (typeof err.message === 'string' && (err.message.includes('User rejected the request') || err.message.includes('user reject this request') || err.message === 'Request rejected')) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$rpc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UserRejectedRequestError"](err);
    }
    return null;
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/ethProviderHelper.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EthProviderHelper": (()=>EthProviderHelper)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/createWalletClient.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/transports/custom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/utils/address/getAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$ProviderLookup$2f$ProviderLookup$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/ProviderLookup/ProviderLookup.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$eventListenerHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/eventListenerHandlers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$book$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-book/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$book$2f$src$2f$helpers$2f$findWalletBookWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-book/src/helpers/findWalletBookWallet.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$getProvidersFromWindow$2f$getProvidersFromWindow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/getProvidersFromWindow/getProvidersFromWindow.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$eip6963$2f$eip6963Provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/eip6963/eip6963Provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$chainsMap$2f$chainsMap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/utils/viem/chainsMap/chainsMap.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$normalizeRpcError$2f$normalizeRpcError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/normalizeRpcError/normalizeRpcError.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
class EthProviderHelper {
    constructor(connector){
        this.walletBookWallet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$book$2f$src$2f$helpers$2f$findWalletBookWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findWalletBookWallet"])(connector.walletBook, connector.key);
        this.connector = connector;
    }
    getInstalledProvider() {
        const eip6963Provider = this.getEip6963Provider();
        if (eip6963Provider) {
            return eip6963Provider;
        }
        return this.getInjectedProvider();
    }
    getInjectedProvider() {
        const config = this.getInjectedConfig();
        if (!config || !config.extensionLocators || !config.extensionLocators.length) return undefined;
        return this.installedProviderLookup(config.extensionLocators);
    }
    getEip6963Provider() {
        const { rdns } = this.connector.metadata;
        if (!rdns) {
            return undefined;
        }
        return this.eip6963ProviderLookup(rdns);
    }
    getInjectedConfig() {
        var _a;
        const injectedConfig = (_a = this.walletBookWallet) === null || _a === void 0 ? void 0 : _a.injectedConfig;
        return injectedConfig === null || injectedConfig === void 0 ? void 0 : injectedConfig.find((c)=>c.chain === 'evm');
    }
    installedProviders() {
        const config = this.getInjectedConfig();
        if (!config) return [];
        const providers = [];
        if (config.windowLocations) {
            for (const windowLocation of config.windowLocations){
                const foundProviders = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$getProvidersFromWindow$2f$getProvidersFromWindow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getProvidersFromWindow"])(windowLocation);
                if (foundProviders && foundProviders.length) providers.push(...foundProviders);
            }
        }
        if (window.ethereum) {
            if (!window.ethereum.providers || !window.ethereum.providers.length) {
                providers.push(window.ethereum);
            } else {
                window.ethereum.providers.forEach((p)=>providers.push(p));
            }
        }
        return providers;
    }
    installedProviderLookup(extensionLocators) {
        const allInstalledProviders = this.installedProviders();
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$ProviderLookup$2f$ProviderLookup$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ProviderLookup"])(allInstalledProviders, extensionLocators);
    }
    eip6963ProviderLookup(rdns) {
        var _a;
        const { providers } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$eip6963$2f$eip6963Provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Eip6963ProviderSingleton"].get();
        return (_a = providers.find((provider)=>{
            var _a;
            return ((_a = provider === null || provider === void 0 ? void 0 : provider.info) === null || _a === void 0 ? void 0 : _a.rdns) === rdns;
        })) === null || _a === void 0 ? void 0 : _a.provider;
    }
    isInstalledHelper() {
        return this.findProvider() !== undefined;
    }
    findProvider() {
        return this.connector.findProvider();
    }
    findWalletClient(chainId) {
        const provider = this.findProvider();
        if (!provider) {
            return undefined;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWalletClient"])({
            account: this.connector.getActiveAccount(),
            chain: chainId ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$chainsMap$2f$chainsMap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chainsMap"][chainId] : this.connector.getActiveChain(),
            transport: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["custom"])({
                request: (args)=>provider.request(args).catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$normalizeRpcError$2f$normalizeRpcError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeRpcError"])
            })
        });
    }
    getAddress() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            const client = this.findWalletClient();
            if (!client) {
                return Promise.resolve(undefined);
            }
            return this.getAddressWithProvider(client);
        });
    }
    getAddressWithProvider(client) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            try {
                const [lowercaseAddress] = yield client.requestAddresses();
                const publicAddress = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(lowercaseAddress);
                this.connector.setActiveAccount(publicAddress);
                return publicAddress;
            } catch (err) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].error(err);
                return Promise.reject(err);
            }
        });
    }
    signMessage(messageToSign) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            const walletAddress = yield this.getAddress();
            if (!walletAddress) {
                return Promise.resolve(undefined);
            }
            const client = this.findWalletClient();
            if (!client) {
                return Promise.resolve(undefined);
            }
            const signedMessage = yield client.signMessage({
                account: walletAddress,
                message: messageToSign
            });
            return signedMessage;
        });
    }
    _setupEventListeners(walletConnector) {
        const web3Provider = this.findProvider();
        if (!web3Provider) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].warn('Provider not found', {
                connector: walletConnector
            });
            return {
                tearDownEventListeners: ()=>{}
            };
        }
        if (!web3Provider.on) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].warn('Provider does not support event listeners', {
                connector: walletConnector,
                provider: web3Provider
            });
            return {
                tearDownEventListeners: ()=>{}
            };
        }
        const { handleAccountChange, handleChainChange, handleDisconnect } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$eventListenerHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["eventListenerHandlers"])(walletConnector);
        web3Provider.on('accountsChanged', handleAccountChange);
        web3Provider.on('chainChanged', handleChainChange);
        web3Provider.on('disconnect', handleDisconnect);
        const tearDownEventListeners = ()=>{
            const web3Provider = this.findProvider();
            if (!web3Provider) {
                return;
            }
            if (handleAccountChange) {
                web3Provider.removeListener('accountsChanged', handleAccountChange);
            }
            if (handleChainChange) {
                web3Provider.removeListener('chainChanged', handleChainChange);
            }
            if (handleDisconnect) {
                web3Provider.removeListener('disconnect', handleDisconnect);
            }
        };
        return {
            tearDownEventListeners
        };
    }
}
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/utils/logger.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "logger": (()=>logger)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$logger$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/logger/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$logger$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/logger/src/index.js [app-client] (ecmascript) <locals>");
'use client';
;
const logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$logger$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Logger"]('@dynamic-labs/ethereum');
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/WalletConnectProvider/WalletConnectProvider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "WalletConnectProvider": (()=>WalletConnectProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$walletconnect$2f$ethereum$2d$provider$2f$dist$2f$index$2e$es$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@walletconnect/ethereum-provider/dist/index.es.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$walletConnectDeepLinks$2f$performPlatformSpecificConnectionMethod$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/walletConnectDeepLinks/performPlatformSpecificConnectionMethod.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$parseIntSafe$2f$parseIntSafe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/parseIntSafe/parseIntSafe.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/errors/DynamicError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/logger.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
var _a;
class WalletConnectProvider {
    constructor(){
        throw new Error('WalletConnectProvider is not instantiable');
    }
    static getMappedChainsByPreferredOrder() {
        const allChains = _a.enabledNetworks.map((network)=>`eip155:${network.chainId}`);
        const reorderedChains = _a.preferredChains.filter((chain)=>allChains.includes(chain));
        const remainingChains = allChains.filter((chain)=>!_a.preferredChains.includes(chain));
        return [
            ...reorderedChains,
            ...remainingChains
        ].map((chain)=>Number(chain.split(':')[1]));
    }
}
_a = WalletConnectProvider;
WalletConnectProvider.isInitializing = false;
WalletConnectProvider.isInitialized = false;
WalletConnectProvider.enabledNetworks = [];
WalletConnectProvider.preferredChains = [];
WalletConnectProvider.evmNetworkRpcMap = {};
WalletConnectProvider.eventListenersSetup = false;
WalletConnectProvider.accountChangedHandler = ()=>{};
WalletConnectProvider.chainChangedHandler = ()=>{};
WalletConnectProvider.disconnectHandler = ()=>{};
/**
 * Initializes the provider. This method should only be called once.
 * Does not start a connection.
 */ WalletConnectProvider.init = (...args_1)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, [
        ...args_1
    ], void 0, function*({ storePrefix = 'dynamic-wc2' } = {}) {
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] init', {
            isInitialized: _a.isInitialized,
            isInitializing: _a.isInitializing
        });
        if (_a.isInitializing || _a.isInitialized) {
            return;
        }
        _a.isInitializing = true;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] initializing');
        _a.providerInitPromise = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$walletconnect$2f$ethereum$2d$provider$2f$dist$2f$index$2e$es$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].init({
            customStoragePrefix: storePrefix,
            disableProviderPing: true,
            optionalChains: _a.getMappedChainsByPreferredOrder(),
            optionalEvents: [
                'chainChanged',
                'accountsChanged'
            ],
            optionalMethods: [
                'eth_chainId',
                'eth_signTypedData',
                'eth_signTransaction',
                'eth_sign',
                'personal_sign',
                'eth_sendTransaction',
                'eth_signTypedData_v4',
                'wallet_switchEthereumChain',
                'wallet_addEthereumChain'
            ],
            projectId: _a.projectId,
            rpcMap: _a.evmNetworkRpcMap,
            showQrModal: false
        });
        _a.provider = yield _a.providerInitPromise;
        _a.isInitialized = true;
        _a.isInitializing = false;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] initialized');
    });
/**
 * Connects to a wallet. This method should be called whenever a new wallet connection is needed.
 * If the wallet is already connected when the page is refreshed, this method does not need to be called.
 */ WalletConnectProvider.connect = (_b)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, [
        _b
    ], void 0, function*({ deepLinks, deepLinkPreference, connectionOpts }) {
        const handleDisplayURI = (uri)=>{
            var _b;
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] handleDisplayURI', uri);
            _a.connectionUri = uri;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$walletConnectDeepLinks$2f$performPlatformSpecificConnectionMethod$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["performPlatformSpecificConnectionMethod"])(_a.connectionUri, deepLinks, {
                onDesktopUri: connectionOpts === null || connectionOpts === void 0 ? void 0 : connectionOpts.onDesktopUri,
                onDisplayUri: connectionOpts === null || connectionOpts === void 0 ? void 0 : connectionOpts.onDisplayUri
            }, deepLinkPreference);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] removing display_uri event listener');
            (_b = _a.provider) === null || _b === void 0 ? void 0 : _b.off('display_uri', handleDisplayURI);
        };
        if (!_a.provider) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].error('[WalletConnectProvider] connect - provider is not initialized');
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DynamicError"]('WalletConnectProvider is not initialized');
        }
        // this is in case the user just cancels the deeplink prompt (i.e. in mobile/Safari)
        // in this case, the connection is not rejected, so the "enable" promise is just pending
        // so on retry, we should just use the same uri to handle that promise
        if (_a.connectionUri) {
            handleDisplayURI(_a.connectionUri);
            return;
        }
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] adding display_uri event listener');
        _a.provider.on('display_uri', handleDisplayURI);
        try {
            // enable = connect to the provider
            const result = yield _a.provider.enable();
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] connected to WalletConnect', result);
            return result;
        } catch (error) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].error('[WalletConnectProvider] Failed to connect to WalletConnect', error);
            const customError = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DynamicError"]('Connection rejected. Please try again.');
            customError.code = 'connection_rejected';
            throw customError;
        } finally{
            // Reset the connection URI after it's been consumed
            _a.connectionUri = undefined;
        }
    });
/**
 * Disconnects from a wallet. This method should be called whenever we need to disconnect from a wallet.
 * It will kill the connection, but not the provider.
 */ WalletConnectProvider.disconnect = ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function*() {
        if (!_a.provider) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] disconnect - provider is not initialized');
            return;
        }
        _a.connectionUri = undefined;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] disconnecting from WalletConnect');
        try {
            yield _a.provider.disconnect();
        } catch (error) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].error('[WalletConnectProvider] Failed to disconnect from WalletConnect', error);
        }
    });
/**
 * Waits for the provider to be initialized and returns the EthereumProvider instance.
 * We should use this wherever possible (async methods), to ensure the provider is initialized.
 */ WalletConnectProvider.awaitAndGetProvider = ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function*() {
        return _a.providerInitPromise;
    });
/**
 * Returns the EthereumProvider instance.
 * Used when we need to access the provider synchronously.
 */ WalletConnectProvider.getProvider = ()=>_a.provider;
WalletConnectProvider.getConnectionUri = ()=>_a.connectionUri;
WalletConnectProvider.handleChainChangedEvent = (chain, onChainChanged)=>{
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] handling chain change event', {
        chain
    });
    const chainId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$parseIntSafe$2f$parseIntSafe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseIntSafe"])(chain);
    if (!chainId) {
        return;
    }
    onChainChanged === null || onChainChanged === void 0 ? void 0 : onChainChanged(chainId);
};
WalletConnectProvider.handleAccountChangedEvent = (accounts, onAccountChanged)=>{
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] handling account change event', {
        accounts
    });
    const [account] = accounts;
    const address = account.includes(':') ? account.split(':').pop() : account;
    if (!address) {
        return;
    }
    onAccountChanged === null || onAccountChanged === void 0 ? void 0 : onAccountChanged(address);
};
/**
 * Sets up event listeners for the provider.
 */ WalletConnectProvider.setupEventListeners = ({ onChainChanged, onAccountChanged, onDisconnect })=>{
    if (!_a.provider || _a.eventListenersSetup) {
        return;
    }
    _a.chainChangedHandler = (chainId)=>{
        _a.handleChainChangedEvent(chainId, onChainChanged);
    };
    _a.accountChangedHandler = (account)=>{
        _a.handleAccountChangedEvent(account, onAccountChanged);
    };
    _a.disconnectHandler = ()=>{
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnectProvider] handling disconnect event');
        onDisconnect === null || onDisconnect === void 0 ? void 0 : onDisconnect();
    };
    _a.provider.on('accountsChanged', _a.accountChangedHandler);
    _a.provider.on('chainChanged', _a.chainChangedHandler);
    _a.provider.on('disconnect', _a.disconnectHandler);
    _a.eventListenersSetup = true;
};
/**
 * Tears down event listeners for the provider.
 */ WalletConnectProvider.teardownEventListeners = ()=>{
    if (!_a.provider || !_a.eventListenersSetup) {
        return;
    }
    _a.provider.off('accountsChanged', _a.accountChangedHandler);
    _a.provider.off('chainChanged', _a.chainChangedHandler);
    _a.provider.off('disconnect', _a.disconnectHandler);
    _a.eventListenersSetup = false;
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/WalletConnectConnector/WalletConnectConnector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "WalletConnectConnector": (()=>WalletConnectConnector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/createWalletClient.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/transports/custom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$accounts$2f$toAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/accounts/toAccount.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$connector$2f$EthereumWalletConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/connector/EthereumWalletConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$chainsMap$2f$chainsMap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/utils/viem/chainsMap/chainsMap.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$StorageService$2f$StorageService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/services/StorageService/StorageService.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$parseIntSafe$2f$parseIntSafe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/parseIntSafe/parseIntSafe.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/errors/DynamicError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/isMobile/isMobile.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/services/PlatformService/PlatformService.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$walletConnectDeepLinks$2f$walletConnectDeepLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/walletConnectDeepLinks/walletConnectDeepLinks.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$normalizeRpcError$2f$normalizeRpcError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/normalizeRpcError/normalizeRpcError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/WalletConnectProvider/WalletConnectProvider.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
;
const WC_CURRENT_CHAIN_KEY = 'dynamic-wc2-current-chain';
class WalletConnectConnector extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$connector$2f$EthereumWalletConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EthereumWalletConnector"] {
    constructor(opts){
        super(opts);
        this.canConnectViaQrCode = true;
        this.isWalletConnect = true;
        this.name = opts.walletName;
        this.deepLinkPreference = opts.deepLinkPreference || 'native';
        const storedChainId = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$StorageService$2f$StorageService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StorageService"].getItem(WC_CURRENT_CHAIN_KEY);
        if (storedChainId) {
            this.currentChainId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$parseIntSafe$2f$parseIntSafe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseIntSafe"])(storedChainId);
        }
        if (!opts.projectId) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DynamicError"]('WalletConnect project ID is required');
        }
        // set provider props generic to all wallets
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].projectId = opts.projectId;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].enabledNetworks = opts.evmNetworks;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].preferredChains = opts.walletConnectPreferredChains || [];
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].evmNetworkRpcMap = this.evmNetworkRpcMap();
    }
    init() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] init called', {
                isInitialized: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].isInitialized,
                isInitializing: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].isInitializing
            });
            // we should only init the provider once as soon as possible
            // the connection is established when a wallet is selected (with getAddress)
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].isInitialized || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].isInitializing) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] init - already initialized or initializing - skipping');
                return;
            }
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] init');
            this.walletConnectorEventsEmitter.emit('connectorInitStarted', 'walletconnect');
            try {
                yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].init();
            } catch (error) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].error('[WalletConnect] init - error', error);
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DynamicError"]('WalletConnectProvider failed to initialize');
            }
            this.setupWCEventListeners();
            this.walletConnectorEventsEmitter.emit('connectorInitCompleted', 'walletconnect');
        });
    }
    setupWCEventListeners() {
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] setupWCEventListeners');
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].teardownEventListeners();
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].setupEventListeners({
            onAccountChanged: (account)=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] onAccountChanged', {
                    account
                });
                this.emit('accountChange', {
                    accounts: [
                        account
                    ]
                });
            },
            onChainChanged: (chainId)=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] onChainChange', {
                    chainId
                });
                if (chainId === this.currentChainId) {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug(`[WalletConnect] onChainChange - ignoring chainChanged event with same chain id as current chain id: ${chainId}`);
                    return;
                }
                this.currentChainId = chainId;
                this.emit('chainChange', {
                    chain: String(chainId)
                });
            },
            onDisconnect: ()=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] onDisconnect');
                this.endSession();
                this.emit('disconnect');
            }
        });
    }
    endSession() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] endSession');
            this.currentChainId = undefined;
            yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].disconnect();
        });
    }
    getAddress(opts) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] getAddress', opts);
            const provider = yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].awaitAndGetProvider();
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] getAddress - connecting to WalletConnect', {
                provider
            });
            const addresses = yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].connect({
                connectionOpts: opts,
                deepLinkPreference: this.deepLinkPreference,
                deepLinks: this.metadata.deepLinks
            });
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] getAddress - connection result', addresses);
            const address = addresses === null || addresses === void 0 ? void 0 : addresses[0];
            return address;
        });
    }
    getWalletClient(chainId) {
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] getWalletClient was called - chainId', chainId);
        const provider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].getProvider();
        if (!provider) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] getWalletClient - provider is not initialized');
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DynamicError"]('WalletConnectProvider is not initialized');
        }
        const walletClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWalletClient"])({
            account: this.getActiveAccount(),
            chain: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$chainsMap$2f$chainsMap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chainsMap"][chainId !== null && chainId !== void 0 ? chainId : String(this.currentChainId)],
            transport: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["custom"])({
                request: (args)=>{
                    this.deepLinkIfApplicable(args.method);
                    return provider.request(args).catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$normalizeRpcError$2f$normalizeRpcError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeRpcError"]);
                }
            })
        });
        return walletClient;
    }
    deepLinkIfApplicable(method) {
        const methodsThatRequireDeepLink = [
            'personal_sign',
            'eth_sendTransaction',
            'eth_signTypedData_v4'
        ];
        const deepLink = this.getDeepLink();
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])() && deepLink && methodsThatRequireDeepLink.includes(method)) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PlatformService"].openURL(deepLink);
        }
    }
    signMessage(messageToSign) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] signMessage', messageToSign);
            const activeAccount = this.getActiveAccount();
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] signMessage - activeAccount', activeAccount);
            if (!activeAccount) {
                return;
            }
            const walletClient = yield this.getWalletClient();
            return walletClient.signMessage({
                account: activeAccount,
                message: messageToSign
            });
        });
    }
    getConnectedAccounts() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            const activeAccount = this.getActiveAccount();
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] getConnectedAccounts - activeAccount', activeAccount);
            return activeAccount ? [
                activeAccount.address
            ] : [];
        });
    }
    getActiveAccount() {
        var _a;
        const provider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].getProvider();
        const connectedAccount = (_a = provider === null || provider === void 0 ? void 0 : provider.accounts) === null || _a === void 0 ? void 0 : _a[0];
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] getActiveAccount - connectedAccount', connectedAccount);
        if (!connectedAccount) {
            return undefined;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$accounts$2f$toAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toAccount"])(connectedAccount);
    }
    get currentChainId() {
        const lsCurrentChain = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$StorageService$2f$StorageService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StorageService"].getItem(WC_CURRENT_CHAIN_KEY);
        try {
            return lsCurrentChain ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$parseIntSafe$2f$parseIntSafe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseIntSafe"])(lsCurrentChain) : undefined;
        } catch (e) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] getCurrentChainId - error', e);
            return undefined;
        }
    }
    set currentChainId(value) {
        if (value) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$StorageService$2f$StorageService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StorageService"].setItem(WC_CURRENT_CHAIN_KEY, value.toString());
        } else {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$StorageService$2f$StorageService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StorageService"].removeItem(WC_CURRENT_CHAIN_KEY);
        }
    }
    getActiveChain() {
        if (!this.currentChainId) {
            return undefined;
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$chainsMap$2f$chainsMap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chainsMap"][this.currentChainId];
    }
    getNetwork() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] getNetwork');
            const provider = yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].awaitAndGetProvider();
            if (provider === null || provider === void 0 ? void 0 : provider.chainId) {
                const network = provider.chainId;
                this.currentChainId = network;
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] getNetwork - provider network', network);
                return network;
            }
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] getNetwork - no provider found, returning current chain id', {
                currentChainId: this.currentChainId
            });
            return this.currentChainId;
        });
    }
    providerSwitchNetwork(_a) {
        const _super = Object.create(null, {
            providerSwitchNetwork: {
                get: ()=>super.providerSwitchNetwork
            }
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, arguments, void 0, function*({ network }) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - network', {
                network,
                switchNetworkOnlyFromWallet: this.switchNetworkOnlyFromWallet
            });
            const currentNetworkId = yield this.getNetwork();
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - currentNetworkId', currentNetworkId);
            if (currentNetworkId && currentNetworkId === network.chainId) {
                return;
            }
            if (this.switchNetworkOnlyFromWallet) {
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$DynamicError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DynamicError"]('Network switching is only supported through the wallet');
            }
            const walletClient = yield this.getWalletClient();
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - will switch network');
            yield _super.providerSwitchNetwork.call(this, {
                network,
                provider: walletClient
            });
            this.currentChainId = network.chainId;
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] providerSwitchNetwork - switched network', network.chainId);
            this.emit('chainChange', {
                chain: String(network.chainId)
            });
        });
    }
    supportsNetworkSwitching() {
        return true;
    }
    getSupportedNetworks() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            var _a;
            const provider = yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].awaitAndGetProvider();
            if (!(provider === null || provider === void 0 ? void 0 : provider.session)) {
                return [];
            }
            const chains = [];
            // Some wallet (i.e ZenGo) use namespaces.account to list supported chains
            // while others use keys within the namespaces object
            Object.keys(provider === null || provider === void 0 ? void 0 : provider.session.namespaces).forEach((key)=>{
                if (key.startsWith('eip155:')) {
                    chains.push(key.split(':')[1]);
                }
            });
            (_a = provider === null || provider === void 0 ? void 0 : provider.session.namespaces.eip155) === null || _a === void 0 ? void 0 : _a.accounts.forEach((account)=>chains.push(account.split(':')[1]));
            return chains.length ? chains : this.evmNetworks.map((network)=>network.chainId.toString());
        });
    }
    getDeepLink() {
        var _a;
        const provider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].getProvider();
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[WalletConnect] getDeepLink', {
            hasSession: Boolean(provider === null || provider === void 0 ? void 0 : provider.session),
            topic: (_a = provider === null || provider === void 0 ? void 0 : provider.session) === null || _a === void 0 ? void 0 : _a.topic,
            uri: provider === null || provider === void 0 ? void 0 : provider.signer.uri
        });
        if (!(provider === null || provider === void 0 ? void 0 : provider.session)) {
            return;
        }
        const deepLink = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$walletConnectDeepLinks$2f$walletConnectDeepLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDeepLink"])({
            deepLinks: this.metadata.deepLinks,
            mode: 'regular',
            preference: this.deepLinkPreference,
            uri: provider.signer.uri
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[WalletConnect] getDeepLink - deepLink', deepLink);
        if (!deepLink) {
            return;
        }
        // we need to include the session topic here because it helps the wallet
        // auto redirect back to the dapp after signing
        return `${deepLink}?sessionTopic=${provider.session.topic}`;
    }
    getConnectionUri() {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectProvider"].getConnectionUri();
    }
}
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "InjectedWalletBase": (()=>InjectedWalletBase)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/isMobile/isMobile.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$connector$2f$EthereumWalletConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/connector/EthereumWalletConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$ethProviderHelper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/ethProviderHelper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectConnector$2f$WalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/WalletConnectConnector/WalletConnectConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/logger.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
class InjectedWalletBase extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$connector$2f$EthereumWalletConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EthereumWalletConnector"] {
    constructor(){
        super(...arguments);
        this.walletConnectorFallback = false;
    }
    get ethProviderHelper() {
        if (!this._ethProviderHelper) {
            this._ethProviderHelper = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$ethProviderHelper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EthProviderHelper"](this);
        }
        return this._ethProviderHelper;
    }
    getMobileOrInstalledWallet() {
        var _a;
        if (this.isInstalledOnBrowser()) {
            return this;
        }
        // this is to handle the case where the user is in a webview.
        // when the user is in a webview, customers should set the deepLinkPreference prop to universal,
        // in which case this condition will be false, and the SDK will use WalletConnect (if available)
        if (((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.inAppBrowserUrl) && this.mobileExperience === 'in-app-browser' && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])()) {
            return this;
        }
        // this is the case where the wallet is not installed on the browser and
        // it does not support WalletConnect. in this case, the SDK will instruct
        // the user to download the wallet extension
        if (!this.walletConnectorFallback) {
            return this;
        }
        // if there is no WC project ID, we should not use WC
        if (!this.constructorProps.projectId) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug('[InjectedWalletBase] getMobileOrInstalledWallet - No WC project ID');
            return this;
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectConnector$2f$WalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectConnector"](Object.assign(Object.assign({}, this.constructorProps), {
            walletName: this.name
        }));
    }
    findProvider() {
        var _a;
        return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.getInstalledProvider();
    }
    setupEventListeners() {
        const provider = this.getWalletClient();
        if (!provider) return;
        if (!this.ethProviderHelper) return;
        const { tearDownEventListeners } = this.ethProviderHelper._setupEventListeners(this);
        this.teardownEventListeners = tearDownEventListeners;
    }
    getWalletClient(chainId) {
        var _a;
        return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.findWalletClient(chainId);
    }
    isInstalledOnBrowser() {
        var _a;
        return ((_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.findProvider()) !== undefined;
    }
    getAddress() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            var _a;
            return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.getAddress();
        });
    }
    connect() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            yield this.getAddress();
        });
    }
    signMessage(messageToSign) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            var _a;
            return (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.signMessage(messageToSign);
        });
    }
    proveOwnership(address, messageToSign) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            yield this.validateActiveWallet(address);
            return this.signMessage(messageToSign);
        });
    }
    endSession() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            // nothing to do on browser-based metamask
            return;
        });
    }
    providerSwitchNetwork(_a) {
        const _super = Object.create(null, {
            providerSwitchNetwork: {
                get: ()=>super.providerSwitchNetwork
            }
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, arguments, void 0, function*({ network, provider }) {
            return _super.providerSwitchNetwork.call(this, {
                network,
                provider
            });
        });
    }
}
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/injected/PhantomEvm.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PhantomEvm": (()=>PhantomEvm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/isMobile/isMobile.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$handleMobileWalletRedirect$2f$handleMobileWalletRedirect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/handleMobileWalletRedirect/handleMobileWalletRedirect.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
'use client';
;
;
;
class PhantomEvm extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectedWalletBase"] {
    constructor(){
        super(...arguments);
        this.name = 'Phantom';
        this.overrideKey = 'phantomevm';
    }
    getAddress() {
        const _super = Object.create(null, {
            getAddress: {
                get: ()=>super.getAddress
            }
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            if (this.isInstalledOnBrowser()) {
                return _super.getAddress.call(this);
            }
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])()) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$handleMobileWalletRedirect$2f$handleMobileWalletRedirect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["handleMobileWalletRedirect"])({
                    nativeLink: 'phantom://browse',
                    universalLink: 'https://phantom.app/ul/browse'
                });
            }
            return undefined;
        });
    }
    canGetChainAddress() {
        var _a, _b;
        return Boolean((_b = (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.findProvider()) === null || _b === void 0 ? void 0 : _b.selectedAddress);
    }
}
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/injected/ExodusEvm.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ExodusEvm": (()=>ExodusEvm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
'use client';
;
// leaving ExodusEvm in here due to a backwards compatibility issue with this one wallet and v18
class ExodusEvm extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectedWalletBase"] {
    constructor(){
        super(...arguments);
        this.name = 'ExodusEvm';
        this.overrideKey = 'exodusevm';
        this.walletConnectorFallback = true;
    }
}
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/injected/FallbackEvmConnector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FallbackEvmConnector": (()=>FallbackEvmConnector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
'use client';
;
class FallbackEvmConnector extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectedWalletBase"] {
    constructor(){
        super(...arguments);
        this.name = 'Fallback Connector';
        this.overrideKey = 'fallbackconnector';
        this.isAvailable = false;
    }
    isInstalledOnBrowser() {
        return false;
    }
}
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/utils/getConnectorConstructorForEip6963Wallet/getConnectorConstructorForEip6963Wallet.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getConnectorConstructorForEip6963Wallet": (()=>getConnectorConstructorForEip6963Wallet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$sanitizeName$2f$sanitizeName$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/sanitizeName/sanitizeName.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
'use client';
;
;
const getConnectorConstructorForEip6963Wallet = (walletDetail)=>{
    const { info, provider } = walletDetail;
    const sanitizedName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$sanitizeName$2f$sanitizeName$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sanitizeName"])(info.name);
    return class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectedWalletBase"] {
        constructor(props){
            super(Object.assign(Object.assign({}, props), {
                metadata: {
                    groupKey: sanitizedName,
                    icon: info.icon,
                    id: info.uuid,
                    name: info.name,
                    rdns: info.rdns
                }
            }));
            this.name = info.name;
            this.overrideKey = `${sanitizedName}evm`;
        }
        findProvider() {
            return provider;
        }
    };
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/utils/getConnectorConstructorInjectedWallet/getConnectorConstructorInjectedWallet.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getConnectorConstructorInjectedWallet": (()=>getConnectorConstructorInjectedWallet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/services/PlatformService/PlatformService.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/logger.js [app-client] (ecmascript)");
'use client';
;
;
;
;
const getConnectorConstructorInjectedWallet = (key, wallet)=>{
    const { shortName } = wallet;
    const name = shortName || wallet.name;
    const walletConnectorFallback = Boolean(wallet.walletConnect);
    return class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectedWalletBase"] {
        constructor(){
            super(...arguments);
            this.name = name;
            this.walletConnectorFallback = walletConnectorFallback;
            // this is the key from the wallet book entry so that we don't purely rely on the normalized name
            this.overrideKey = key;
        }
        getAddress() {
            const _super = Object.create(null, {
                getAddress: {
                    get: ()=>super.getAddress
                }
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                var _a;
                if (this.isInstalledOnBrowser()) {
                    return _super.getAddress.call(this);
                }
                const inAppBrowserBase = (_a = this.metadata) === null || _a === void 0 ? void 0 : _a.inAppBrowserUrl;
                if (!inAppBrowserBase) {
                    const error = new Error(`No inAppBrowserBase found for ${this.name}.`);
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].error(error.message);
                    throw error;
                }
                // TODO: use PlatformService
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PlatformService"].openURL(`${inAppBrowserBase}/${window.location.href}`);
                return undefined;
            });
        }
    };
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/injected/fetchInjectedWalletConnectors.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fetchInjectedWalletConnector": (()=>fetchInjectedWalletConnector),
    "injectedWalletOverrides": (()=>injectedWalletOverrides)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$events$2f$walletConnectorEvents$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/events/walletConnectorEvents.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$eip6963$2f$eip6963Provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/eip6963/eip6963Provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$sanitizeName$2f$sanitizeName$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/sanitizeName/sanitizeName.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$getConnectorConstructorForEip6963Wallet$2f$getConnectorConstructorForEip6963Wallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/getConnectorConstructorForEip6963Wallet/getConnectorConstructorForEip6963Wallet.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$getConnectorConstructorInjectedWallet$2f$getConnectorConstructorInjectedWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/getConnectorConstructorInjectedWallet/getConnectorConstructorInjectedWallet.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$PhantomEvm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/PhantomEvm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$ExodusEvm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/ExodusEvm.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
const injectedWalletOverrides = [
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$PhantomEvm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PhantomEvm"],
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$ExodusEvm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExodusEvm"]
];
const walletsWithCustomConnectors = [
    'phantomevm',
    'coinbase',
    'exodusevm',
    'abstract',
    'metamask',
    'edenonline',
    'intersend'
];
let removeEip6963EventsListener;
// should add eip6963 connector only if not in wallet-book, to avoid adding duplicate connectors
const shouldAddEip6963Connector = (eip6963ProviderInfo, walletBook)=>{
    var _a;
    const { rdns, name } = eip6963ProviderInfo;
    const chain = 'evm';
    const connectorKey = `${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$sanitizeName$2f$sanitizeName$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sanitizeName"])(name)}${chain}`;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[ETH shouldAddEip6963Connector]', rdns, name, chain, connectorKey);
    const existingWallet = Object.entries((_a = walletBook === null || walletBook === void 0 ? void 0 : walletBook.wallets) !== null && _a !== void 0 ? _a : {}).find(([key, wallet])=>{
        var _a, _b;
        return ((_a = wallet.eip6963Config) === null || _a === void 0 ? void 0 : _a.rdns) === rdns || key === connectorKey || walletsWithCustomConnectors.includes(connectorKey) || wallet.name === name && ((_b = wallet.injectedConfig) === null || _b === void 0 ? void 0 : _b[0].chain) === chain;
    });
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[ETH shouldAddEip6963Connector]', existingWallet);
    return !existingWallet;
};
const addEip6963Listener = (walletBook)=>{
    removeEip6963EventsListener === null || removeEip6963EventsListener === void 0 ? void 0 : removeEip6963EventsListener();
    removeEip6963EventsListener = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$eip6963$2f$eip6963Provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["listenToEip6963Events"])((event)=>{
        if (!shouldAddEip6963Connector(event.detail.info, walletBook)) {
            return;
        }
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[ETH fetchInjectedWalletConnectors] listenToEip6963Events', event.detail);
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$events$2f$walletConnectorEvents$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walletConnectorEvents"].emit('providerInjected', {
            injectedConnectorConstructor: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$getConnectorConstructorForEip6963Wallet$2f$getConnectorConstructorForEip6963Wallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConnectorConstructorForEip6963Wallet"])(event.detail)
        });
    });
};
const fetchInjectedWalletConnector = ({ walletBook })=>{
    var _a;
    addEip6963Listener(walletBook);
    const walletBookConnectors = Object.entries((_a = walletBook === null || walletBook === void 0 ? void 0 : walletBook.wallets) !== null && _a !== void 0 ? _a : {}).filter(([key, wallet])=>{
        var _a;
        return ((_a = wallet.injectedConfig) === null || _a === void 0 ? void 0 : _a.find((config)=>config.chain === 'evm')) && !walletsWithCustomConnectors.includes(key);
    }).map(([key, wallet])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$getConnectorConstructorInjectedWallet$2f$getConnectorConstructorInjectedWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConnectorConstructorInjectedWallet"])(key, wallet));
    const { providers } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$eip6963$2f$eip6963Provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Eip6963ProviderSingleton"].get();
    const eip6963Connectors = providers.filter((provider)=>shouldAddEip6963Connector(provider.info, walletBook)).map((provider)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$getConnectorConstructorForEip6963Wallet$2f$getConnectorConstructorForEip6963Wallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getConnectorConstructorForEip6963Wallet"])(provider));
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].logVerboseTroubleshootingMessage('[ETH fetchInjectedWalletConnectors] eip6963Connectors', eip6963Connectors);
    return [
        ...walletBookConnectors,
        ...eip6963Connectors
    ];
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "INFURA_ID": (()=>INFURA_ID)
});
'use client';
const INFURA_ID = '87939db78f824920ada5c872db3e56b8';
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/utils/createInjectedConnector/createInjectedConnector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createInjectedConnector": (()=>createInjectedConnector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/logger.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
const createInjectedConnector = (customConnectorFn)=>(props)=>{
        const delegate = customConnectorFn(props);
        return [
            class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectedWalletBase"] {
                constructor(props){
                    super(Object.assign(Object.assign({}, props), {
                        metadata: delegate.metadata
                    }));
                    this.name = delegate.metadata.name;
                }
                init() {
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                        return delegate.init();
                    });
                }
                findProvider() {
                    return delegate.findProvider();
                }
                signMessage(messageToSign) {
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                        return delegate.signMessage(messageToSign);
                    });
                }
                connect() {
                    const _super = Object.create(null, {
                        connect: {
                            get: ()=>super.connect
                        }
                    });
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                        if (delegate.connect) {
                            return delegate.connect();
                        }
                        return _super.connect.call(this);
                    });
                }
                endSession() {
                    const _super = Object.create(null, {
                        endSession: {
                            get: ()=>super.endSession
                        }
                    });
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                        if (delegate.disconnect) {
                            yield delegate.disconnect();
                        }
                        return _super.endSession.call(this);
                    });
                }
                getAddress() {
                    const _super = Object.create(null, {
                        getAddress: {
                            get: ()=>super.getAddress
                        }
                    });
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                        if (delegate.getAddress) {
                            return delegate.getAddress();
                        }
                        return _super.getAddress.call(this);
                    });
                }
                getConnectedAccounts() {
                    const _super = Object.create(null, {
                        getConnectedAccounts: {
                            get: ()=>super.getConnectedAccounts
                        }
                    });
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                        if (delegate.getConnectedAccounts) {
                            return delegate.getConnectedAccounts();
                        }
                        return _super.getConnectedAccounts.call(this);
                    });
                }
                filter() {
                    if (delegate.filter) {
                        return delegate.filter();
                    }
                    return super.filter();
                }
                supportsNetworkSwitching() {
                    if (delegate.supportsNetworkSwitching) {
                        return delegate.supportsNetworkSwitching();
                    }
                    return super.supportsNetworkSwitching();
                }
            }
        ];
    };
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/utils/fetchWalletConnectWallets.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fetchWalletConnectWallets": (()=>fetchWalletConnectWallets)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectConnector$2f$WalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/WalletConnectConnector/WalletConnectConnector.js [app-client] (ecmascript)");
'use client';
;
const fetchWalletConnectWallets = ({ walletBook })=>{
    var _a;
    return Object.entries((_a = walletBook === null || walletBook === void 0 ? void 0 : walletBook.wallets) !== null && _a !== void 0 ? _a : {}).filter(([, wallet])=>wallet.walletConnect && !wallet.filterFromWalletConnect).map(([key, wallet])=>{
        const { shortName } = wallet;
        const name = shortName || wallet.name;
        return class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectConnector$2f$WalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectConnector"] {
            constructor(props){
                super(Object.assign(Object.assign({}, props), {
                    walletName: name
                }));
                this.overrideKey = key;
            }
        };
    });
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/utils/getWalletConnectConnector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getWalletConnectConnector": (()=>getWalletConnectConnector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectConnector$2f$WalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/WalletConnectConnector/WalletConnectConnector.js [app-client] (ecmascript)");
'use client';
;
const getWalletConnectConnector = ()=>class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectConnector$2f$WalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WalletConnectConnector"] {
        constructor(props){
            super(Object.assign(Object.assign({}, props), {
                walletName: 'WalletConnect'
            }));
        }
    };
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/coinbase/helpers.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getCoinbaseProvider": (()=>getCoinbaseProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$wallet$2d$sdk$2f$dist$2f$CoinbaseWalletSDK$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@coinbase/wallet-sdk/dist/CoinbaseWalletSDK.js [app-client] (ecmascript)");
'use client';
;
// storing a reference to the coinbase provider because the provider methods work better when
// they are called on the same instance
let coinbaseProvider;
const baseSepolia = 84532;
const baseMainnet = 8453;
const getCoinbaseProvider = ({ appLogoUrl, appName, evmNetworks, walletPreference } = {})=>{
    const appChainIds = evmNetworks === null || evmNetworks === void 0 ? void 0 : evmNetworks.map((network)=>Number(network.chainId));
    // just brings base sepolia to the front of the list, because that is treated as the default chain
    const hasBaseSepolia = evmNetworks === null || evmNetworks === void 0 ? void 0 : evmNetworks.some((network)=>network.chainId === baseSepolia);
    if (hasBaseSepolia) {
        appChainIds === null || appChainIds === void 0 ? void 0 : appChainIds.sort((a, b)=>a === baseSepolia ? -1 : b === baseSepolia ? 1 : 0);
    }
    // just brings base mainnet to the front, because that that is treated as the default chain
    const hasBaseMainnet = evmNetworks === null || evmNetworks === void 0 ? void 0 : evmNetworks.some((network)=>network.chainId === baseMainnet);
    if (hasBaseMainnet) {
        appChainIds === null || appChainIds === void 0 ? void 0 : appChainIds.sort((a, b)=>a === baseMainnet ? -1 : b === baseMainnet ? 1 : 0);
    }
    if (!coinbaseProvider) {
        const coinbaseSdk = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$wallet$2d$sdk$2f$dist$2f$CoinbaseWalletSDK$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CoinbaseWalletSDK"]({
            appChainIds,
            appLogoUrl,
            appName
        });
        coinbaseProvider = coinbaseSdk.makeWeb3Provider({
            options: walletPreference !== null && walletPreference !== void 0 ? walletPreference : 'all'
        });
    }
    return coinbaseProvider;
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/coinbase/coinbase.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Coinbase": (()=>Coinbase)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/createWalletClient.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/transports/custom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$connector$2f$EthereumWalletConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/connector/EthereumWalletConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$chainsMap$2f$chainsMap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/utils/viem/chainsMap/chainsMap.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$eventListenerHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/eventListenerHandlers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$coinbase$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/coinbase/helpers.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
class Coinbase extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$connector$2f$EthereumWalletConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EthereumWalletConnector"] {
    constructor(_a){
        var { appName, appLogoUrl, evmNetworks, coinbaseWalletPreference } = _a, props = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__rest"])(_a, [
            "appName",
            "appLogoUrl",
            "evmNetworks",
            "coinbaseWalletPreference"
        ]);
        super(Object.assign({
            evmNetworks
        }, props));
        this.name = 'Coinbase';
        this.overrideKey = 'coinbase';
        this.canConnectViaQrCode = false;
        this.canConnectViaCustodialService = !this.isInstalledOnBrowser();
        this.coinbaseProviderOpts = {
            appLogoUrl: appLogoUrl,
            appName: appName,
            evmNetworks: evmNetworks,
            walletPreference: coinbaseWalletPreference
        };
    }
    get coinbaseProvider() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$coinbase$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getCoinbaseProvider"])(this.coinbaseProviderOpts);
    }
    getConnectedAccounts() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            try {
                const accounts = yield this.coinbaseProvider.request({
                    method: 'eth_accounts'
                });
                if (accounts[0]) {
                    this.setActiveAccount(this.parseAddress(accounts[0]));
                }
                return accounts.map(this.parseAddress);
            } catch (error) {
                return [];
            }
        });
    }
    isInstalledOnBrowser() {
        var _a, _b;
        return Boolean((_a = window === null || window === void 0 ? void 0 : window.coinbaseWalletExtension) === null || _a === void 0 ? void 0 : _a.isCoinbaseWallet) || Boolean((_b = window === null || window === void 0 ? void 0 : window.ethereum) === null || _b === void 0 ? void 0 : _b.isCoinbaseWallet);
    }
    getAddress() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            const [address] = yield this.coinbaseProvider.request({
                method: 'eth_requestAccounts'
            });
            const parsedAddress = this.parseAddress(address);
            this.setActiveAccount(parsedAddress);
            return parsedAddress;
        });
    }
    signMessage(messageToSign) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            const [address] = yield this.coinbaseProvider.request({
                method: 'eth_requestAccounts'
            });
            const parsedAddress = this.parseAddress(address);
            try {
                return yield this.coinbaseProvider.request({
                    method: 'personal_sign',
                    params: [
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBytes"])(messageToSign)),
                        parsedAddress
                    ]
                });
            } catch (err) {
                return undefined;
            }
        });
    }
    setupEventListeners() {
        const { handleAccountChange, handleChainChange, handleDisconnect } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$eventListenerHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["eventListenerHandlers"])(this);
        this.coinbaseProvider.on('accountsChanged', handleAccountChange);
        this.coinbaseProvider.on('chainChanged', handleChainChange);
        this.coinbaseProvider.on('disconnect', handleDisconnect);
        this.teardownEventListeners = ()=>{
            this.coinbaseProvider.removeListener('accountsChanged', handleAccountChange);
            this.coinbaseProvider.removeListener('chainChanged', handleChainChange);
            this.coinbaseProvider.removeListener('disconnect', handleDisconnect);
        };
    }
    getWalletClient(chainId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWalletClient"])({
            account: this.getActiveAccount(),
            chain: chainId ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$chainsMap$2f$chainsMap$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chainsMap"][chainId] : this.getActiveChain(),
            transport: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["custom"])(this.coinbaseProvider)
        });
    }
}
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/utils/createMetaMaskSDKDisplayUriState.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createMetaMaskSDKDisplayUriState": (()=>createMetaMaskSDKDisplayUriState)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
'use client';
;
/**
 * Listens for the `display_uri` event emitted by the MetaMask SDK.
 *
 * The `display_uri` event is triggered during SDK initialization or when the `connect` method is called.
 * Calling `terminate` in the MetaMask SDK resets the connection, and a new `display_uri` will only be emitted
 * when `connect` is called again.
 *
 * This function manages the new `display_uri` received from these events.
 */ const createMetaMaskSDKDisplayUriState = (metaMaskSDK)=>{
    let lastKnownMetaMaskDeepLinkUri = null;
    let displayUri = null;
    metaMaskSDK.on('display_uri', (latestDisplayUri)=>{
        if (lastKnownMetaMaskDeepLinkUri !== latestDisplayUri) {
            lastKnownMetaMaskDeepLinkUri = latestDisplayUri;
            displayUri = latestDisplayUri.trim();
        }
    });
    return {
        consumeDisplayUri: ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function*() {
                const currentDisplayUri = displayUri;
                if (currentDisplayUri) {
                    displayUri = null;
                    return currentDisplayUri;
                }
                return new Promise((resolve)=>{
                    let timeoutId = null;
                    let intervalId = null;
                    const cleanUp = ()=>{
                        if (timeoutId) clearTimeout(timeoutId);
                        if (intervalId) clearInterval(intervalId);
                    };
                    timeoutId = setTimeout(()=>{
                        cleanUp();
                        resolve(undefined);
                    }, 1000);
                    intervalId = setInterval(()=>{
                        if (displayUri) {
                            cleanUp();
                            resolve(displayUri);
                            displayUri = null;
                        }
                    }, 10);
                });
            }),
        getConnectionUri: ()=>displayUri !== null && displayUri !== void 0 ? displayUri : undefined
    };
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/utils/waitForConnection.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "waitForConnection": (()=>waitForConnection)
});
'use client';
const waitForConnection = (provider)=>new Promise((resolve)=>{
        provider.once('connect', ()=>resolve());
    });
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/utils/isPendingWalletRequestPermissionError.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isPendingWalletRequestPermissionError": (()=>isPendingWalletRequestPermissionError)
});
'use client';
const isPendingWalletRequestPermissionError = (error)=>typeof error === 'object' && error !== null && 'message' in error && error.message.includes("Request of type 'wallet_requestPermissions' already pending for origin");
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/MetaMaskConnector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MetaMaskConnector": (()=>MetaMaskConnector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$metamask$2f$sdk$2f$dist$2f$browser$2f$es$2f$metamask$2d$sdk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@metamask/sdk/dist/browser/es/metamask-sdk.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/createWalletClient.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/clients/transports/custom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$getOrMapViemChain$2f$getOrMapViemChain$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/utils/viem/getOrMapViemChain/getOrMapViemChain.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$eventListenerHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/utils/eventListenerHandlers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$eventTimeline$2f$eventTimeline$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/eventTimeline/eventTimeline.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/services/PlatformService/PlatformService.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/isMobile/isMobile.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$MetaMaskError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/errors/MetaMaskError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$retryableFn$2f$retryableFn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/retryableFn/retryableFn.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformEventsService$2f$PlatformEventsService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/services/PlatformEventsService/PlatformEventsService.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$utils$2f$createMetaMaskSDKDisplayUriState$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/utils/createMetaMaskSDKDisplayUriState.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$utils$2f$waitForConnection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/utils/waitForConnection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$utils$2f$isPendingWalletRequestPermissionError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/utils/isPendingWalletRequestPermissionError.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
;
;
;
;
/**
 * The MetaMask SDK must be initialized only once, so we store the instance
 * in these variables to avoid initializing it multiple times
 */ let _metaMaskSDK = null;
let _metaMaskSDKDisplayUriState = null;
const eventTimeline = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$eventTimeline$2f$eventTimeline$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createEventTimeline"])();
class MetaMaskConnector extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectedWalletBase"] {
    constructor(props){
        super(props);
        this.name = 'MetaMask';
        this.overrideKey = 'metamask';
        this.canConnectViaQrCode = true;
        this.isInAppBrowser = false;
        this.appName = props.appName;
        this.appLogoUrl = props.appLogoUrl;
        /**
         * The isInAppBrowser must be calculated before initializing the MetaMask SDK.
         *
         * The isInAppBrowser is calculated by checking if the window provider is installed
         * in the browser and if it is running on a mobile device.
         *
         * But the MetaMask SDK will inject its own provider to the window if not provider is injected.
         * This means the MetaMask SDK can interfere with the isInAppBrowser calculation.
         *
         * So we need to calculate the isInAppBrowser before initializing the MetaMask SDK
         * to prevent a false negative
         */ this.isInAppBrowser = this.getIsInAppBrowser();
        if (!_metaMaskSDK) {
            this.createMetaMaskSDK();
        }
    }
    isInstalledOnBrowser() {
        var _a;
        const metaMaskEip6963Provider = (_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.eip6963ProviderLookup(this.rdns);
        const isInstalled = Boolean(metaMaskEip6963Provider);
        return isInstalled;
    }
    getSupportedNetworks() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            return this.evmNetworks.map((network)=>network.chainId.toString());
        });
    }
    get metaMaskSDK() {
        if (!_metaMaskSDK) throw new Error('MetaMaskSDK not initialized');
        return _metaMaskSDK;
    }
    set metaMaskSDK(metaMaskSDK) {
        _metaMaskSDK = metaMaskSDK;
    }
    get metaMaskSDKDisplayUriState() {
        if (!_metaMaskSDKDisplayUriState) throw new Error('MetaMaskSDKDisplayUriState not initialized');
        return _metaMaskSDKDisplayUriState;
    }
    createMetaMaskSDK() {
        const dappMetadata = {
            iconUrl: this.appLogoUrl,
            name: this.appName,
            url: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PlatformService"].getOrigin()
        };
        _metaMaskSDK = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$metamask$2f$sdk$2f$dist$2f$browser$2f$es$2f$metamask$2d$sdk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MetaMaskSDK"]({
            checkInstallationImmediately: true,
            dappMetadata,
            enableAnalytics: false,
            extensionOnly: this.isInstalledOnBrowser(),
            headless: true,
            injectProvider: false,
            openDeeplink: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PlatformService"].openURL,
            preferDesktop: !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])(),
            readonlyRPCMap: getReadonlyRPCMap(this.evmNetworkRpcMap()),
            useDeeplink: true
        });
        _metaMaskSDKDisplayUriState = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$utils$2f$createMetaMaskSDKDisplayUriState$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createMetaMaskSDKDisplayUriState"])(_metaMaskSDK);
    }
    endSession() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            eventTimeline.postEvent('disconnect');
            /**
             * The MetaMask SDK must be terminated and reinitialized on mobile
             * to prevent deeplinks not working
             */ if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])()) {
                return this.metaMaskSDK.terminate().then(()=>{
                    _metaMaskSDK = null;
                    _metaMaskSDKDisplayUriState = null;
                    return this.createMetaMaskSDK();
                });
            }
            /**
             * Just terminate the SDK on desktop
             */ return this.metaMaskSDK.terminate();
        });
    }
    getAddress(opts) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            return new Promise((resolve, reject)=>{
                // QR Code flow
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])() && Boolean(opts === null || opts === void 0 ? void 0 : opts.onDisplayUri)) {
                    this.metaMaskSDKDisplayUriState.consumeDisplayUri().then((displayUri)=>{
                        var _a;
                        if (!displayUri) {
                            reject(new Error('MetaMask display uri not found'));
                            return;
                        }
                        (_a = opts === null || opts === void 0 ? void 0 : opts.onDisplayUri) === null || _a === void 0 ? void 0 : _a.call(opts, displayUri);
                    });
                }
                // Deep link to MetaMask app in-app browser
                if (this.shouldDeepLinkToMetaMaskInAppBrowser() && this.metadata.inAppBrowserUrl) {
                    // Redirect to the in-app browser and append the current url
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformService$2f$PlatformService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PlatformService"].openURL(`${this.metadata.inAppBrowserUrl}/${window.location.href}`);
                    resolve(undefined);
                    return;
                }
                // Connect to MetaMask
                this.getConnectedAccountsSafely().then((initialConnectedAccounts)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
                        if (initialConnectedAccounts.length) {
                            resolve(this.parseAddress(initialConnectedAccounts[0]));
                            return;
                        }
                        try {
                            yield this.metaMaskSDK.connect();
                        } catch (error) {
                            const isRequestPendingError = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$utils$2f$isPendingWalletRequestPermissionError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPendingWalletRequestPermissionError"])(error);
                            if (!isRequestPendingError) {
                                reject(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$errors$2f$MetaMaskError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MetaMaskError"].fromError(error));
                            } else {
                                yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$utils$2f$waitForConnection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["waitForConnection"])(this.getProvider());
                            }
                        }
                        const accounts = yield this.getConnectedAccounts();
                        resolve(accounts[0]);
                    }));
            });
        });
    }
    getConnectedAccountsSafely() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            try {
                const connectedAccounts = yield this.getConnectedAccounts();
                return connectedAccounts;
            } catch (err) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].error(err);
                return [];
            }
        });
    }
    getConnectedAccounts() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            // Wait for for MetaMask SDK to initialize
            yield this.metaMaskSDK.sdkInitPromise;
            const provider = this.getProvider();
            if (!provider) {
                return [];
            }
            /**
             * The eth_accounts method can hang on mobile devices when
             * the MetaMask SDK has not connected yet. So we use a retryable
             * to ensure the timeout will be respected
             */ const accounts = yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$retryableFn$2f$retryableFn$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["retryableFn"])(()=>provider.request({
                    method: 'eth_accounts',
                    params: []
                }), {
                fallbackValue: [],
                timeoutMs: 1000
            });
            if (!(accounts === null || accounts === void 0 ? void 0 : accounts.length)) {
                return [];
            }
            return accounts.map(this.parseAddress);
        });
    }
    signMessage(messageToSign) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            yield this.metaMaskSDK.sdkInitPromise;
            /**
             * Should wait for the window to be focused on mobile
             * to account for the user moving between the MetaMaskApp
             * and the browser
             */ const windowFocusPromiseForMobile = !this.isInAppBrowser && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])() ? waitForFocusWindowEvent() : Promise.resolve();
            const provider = this.getProvider();
            if (!provider) {
                return undefined;
            }
            const [selectedAddress] = yield this.getConnectedAccounts();
            if (!selectedAddress) {
                return undefined;
            }
            const walletClient = this.getWalletClientForAddress(selectedAddress);
            if (!walletClient) return undefined;
            const signature = yield walletClient.signMessage({
                message: messageToSign
            });
            yield windowFocusPromiseForMobile;
            return signature;
        });
    }
    chooseAccountsToConnect() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            return [];
        });
    }
    getWalletClient(chainId) {
        const provider = this.getProvider();
        if (!provider) {
            return undefined;
        }
        const selectedAddress = provider.getSelectedAddress();
        return this.getWalletClientForAddress(selectedAddress || undefined, chainId);
    }
    get rdns() {
        const { rdns } = this.metadata;
        if (!rdns) {
            throw new Error('rdns not found in metadata');
        }
        return rdns;
    }
    setupEventListeners() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            yield this.metaMaskSDK.sdkInitPromise;
            const metaMaskProvider = this.getProvider();
            if (!metaMaskProvider) {
                return;
            }
            const { handleAccountChange, handleChainChange, handleDisconnect } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$utils$2f$eventListenerHandlers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["eventListenerHandlers"])(this);
            const handleAccountsChangedFromMetaMask = (accounts)=>{
                /**
                 * MetaMask emits an account changed event when the wallet is disconnected
                 * so we ignore the accountsChanged event if the disconnect event was recent
                 */ if (eventTimeline.isEventRecent('disconnect', 1000)) {
                    return;
                }
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore
                handleAccountChange(accounts);
            };
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            metaMaskProvider.on('accountsChanged', handleAccountsChangedFromMetaMask);
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            metaMaskProvider.on('chainChanged', handleChainChange);
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            metaMaskProvider.on('disconnect', handleDisconnect);
            this.teardownEventListeners = ()=>{
                metaMaskProvider.off('accountsChanged', handleAccountsChangedFromMetaMask);
                metaMaskProvider.off('chainChanged', handleChainChange);
                metaMaskProvider.off('disconnect', handleDisconnect);
            };
        });
    }
    /**
     * This override is necessary to wait for the MetaMask SDK to initialize
     * before calling the super method. Otherwise, the super method may fail
     * to fetch the provider
     */ getNetwork() {
        const _super = Object.create(null, {
            getNetwork: {
                get: ()=>super.getNetwork
            }
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function*() {
            yield this.metaMaskSDK.sdkInitPromise;
            const net = yield _super.getNetwork.call(this);
            return net;
        });
    }
    // Utils
    getProvider() {
        var _a;
        return (_a = this.metaMaskSDK.getProvider()) !== null && _a !== void 0 ? _a : this.metaMaskSDK.getMobileProvider();
    }
    evmNetworkByChainId(chainId) {
        return this.evmNetworks.find((network)=>network.chainId === chainId);
    }
    getWalletClientForAddress(address, chainId) {
        var _a, _b;
        const provider = this.getProvider();
        if (!provider) {
            return undefined;
        }
        const effectiveChainId = (_b = (_a = this.toInt(chainId)) !== null && _a !== void 0 ? _a : this.getCurrentChainId()) !== null && _b !== void 0 ? _b : '1';
        const network = this.evmNetworkByChainId(effectiveChainId);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$createWalletClient$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWalletClient"])({
            account: address,
            chain: network ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$utils$2f$viem$2f$getOrMapViemChain$2f$getOrMapViemChain$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOrMapViemChain"])(network) : this.getActiveChain(),
            transport: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$clients$2f$transports$2f$custom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["custom"])(provider)
        });
    }
    toInt(chainId) {
        if (!chainId) return undefined;
        try {
            return parseInt(chainId);
        } catch (err) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logger"].debug(err);
            return undefined;
        }
    }
    getCurrentChainId() {
        const provider = this.getProvider();
        if (!provider) {
            return undefined;
        }
        const chainId = provider.getChainId();
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(chainId)) {
            return parseInt(chainId);
        }
        return chainId;
    }
    /**
     * Checks if the current environment is the MetaMask in-app browser
     * by checking if the MetaMask provider is installed in the window object
     * on a mobile device
     */ getIsInAppBrowser() {
        var _a, _b;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])()) return false;
        const provider = ((_a = this.ethProviderHelper) === null || _a === void 0 ? void 0 : _a.eip6963ProviderLookup(this.rdns)) || ((_b = this.ethProviderHelper) === null || _b === void 0 ? void 0 : _b.getInjectedProvider());
        return Boolean(provider);
    }
    shouldDeepLinkToMetaMaskInAppBrowser() {
        // Not in an in-app browser
        if (this.isInAppBrowser) return false;
        // Not a mobile device
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$isMobile$2f$isMobile$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isMobile"])()) return false;
        // SDK is configured to use the in-app browser
        if (this.mobileExperience !== 'in-app-browser') return false;
        // Wallet does not have an in-app browser link
        if (!this.metadata.inAppBrowserUrl) return false;
        return true;
    }
    getConnectionUri() {
        return this.metaMaskSDKDisplayUriState.getConnectionUri();
    }
}
// Utils
const getReadonlyRPCMap = (evmNetworkRpcMap)=>Object.keys(evmNetworkRpcMap).reduce((acc, chainId)=>Object.assign(Object.assign({}, acc), {
            [(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(parseInt(chainId))]: evmNetworkRpcMap[chainId]
        }), {});
/**
 * Waits for the focus page event and await for an extra second
 * This is necessary to ensure the verify call will succeed
 */ const waitForFocusWindowEvent = ()=>new Promise((resolve)=>{
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$services$2f$PlatformEventsService$2f$PlatformEventsService$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PlatformEventsService"].once('appFocused', resolve);
    }).then(()=>new Promise((resolve)=>setTimeout(resolve, 1000)));
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/EthereumWalletConnectors.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EthereumWalletConnectors": (()=>EthereumWalletConnectors)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$embedded$2d$wallet$2d$evm$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/embedded-wallet-evm/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$embedded$2d$wallet$2d$evm$2f$src$2f$TurnkeyEVMWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/embedded-wallet-evm/src/TurnkeyEVMWalletConnectors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$_virtual$2f$_tslib$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/_virtual/_tslib.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$utils$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/utils/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$connector$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-connector-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$wallet$2d$book$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/wallet-book/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$WalletConnectProvider$2f$WalletConnectProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/WalletConnectProvider/WalletConnectProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$utils$2f$fetchWalletConnectWallets$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/utils/fetchWalletConnectWallets.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$utils$2f$getWalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/walletConnect/utils/getWalletConnectConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$FallbackEvmConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/FallbackEvmConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$fetchInjectedWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/fetchInjectedWalletConnectors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$coinbase$2f$coinbase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/coinbase/coinbase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$MetaMaskConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/metaMask/MetaMaskConnector.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const EthereumWalletConnectors = (props)=>[
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$fetchInjectedWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["injectedWalletOverrides"],
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$fetchInjectedWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchInjectedWalletConnector"])(props),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$utils$2f$fetchWalletConnectWallets$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchWalletConnectWallets"])(props),
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$embedded$2d$wallet$2d$evm$2f$src$2f$TurnkeyEVMWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TurnkeyEVMWalletConnectors"])(props),
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$metaMask$2f$MetaMaskConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MetaMaskConnector"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$coinbase$2f$coinbase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Coinbase"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$FallbackEvmConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FallbackEvmConnector"],
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$walletConnect$2f$utils$2f$getWalletConnectConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWalletConnectConnector"])()
    ];
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/EthereumWalletConnectorsWithConfig.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EthereumWalletConnectorsWithConfig": (()=>EthereumWalletConnectorsWithConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$EthereumWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/EthereumWalletConnectors.js [app-client] (ecmascript)");
'use client';
;
const EthereumWalletConnectorsWithConfig = (providersConfig)=>{
    const classWithConfig = (className)=>class extends className {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            constructor(...args){
                const [opts] = args;
                super(Object.assign(Object.assign({}, opts), {
                    providersConfig
                }));
            }
        };
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return (props)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$EthereumWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EthereumWalletConnectors"])(props).map(classWithConfig);
};
;
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$assert$2d$package$2d$version$2f$src$2f$lib$2f$assertPackageVersion$2f$assertPackageVersion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/assert-package-version/src/lib/assertPackageVersion/assertPackageVersion.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$package$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/package.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
;
;
;
;
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$assert$2d$package$2d$version$2f$src$2f$lib$2f$assertPackageVersion$2f$assertPackageVersion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertPackageVersion"])('@dynamic-labs/ethereum', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$package$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["version"]);
}}),
"[project]/node_modules/@dynamic-labs/ethereum/src/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$polyfills$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/polyfills.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$assert$2d$package$2d$version$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/assert-package-version/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$package$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/package.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2d$core$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum-core/src/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$PhantomEvm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/PhantomEvm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$ExodusEvm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/ExodusEvm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$FallbackEvmConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/FallbackEvmConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$fetchInjectedWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/fetchInjectedWalletConnectors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$injected$2f$InjectedWalletBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/injected/InjectedWalletBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$ethProviderHelper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/ethProviderHelper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$utils$2f$createInjectedConnector$2f$createInjectedConnector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/utils/createInjectedConnector/createInjectedConnector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$EthereumWalletConnectors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/EthereumWalletConnectors.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$EthereumWalletConnectorsWithConfig$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/EthereumWalletConnectorsWithConfig.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$dynamic$2d$labs$2f$ethereum$2f$src$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@dynamic-labs/ethereum/src/index.js [app-client] (ecmascript) <locals>");
}}),
}]);

//# sourceMappingURL=node_modules_%40dynamic-labs_ethereum_194a7a5a._.js.map