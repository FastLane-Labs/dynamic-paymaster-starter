{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-api-core/src/runtime.js"],"sourcesContent":["import { __awaiter } from '../_virtual/_tslib.js';\n\n/* tslint:disable */\nconst BASE_PATH = \"https://app.dynamicauth.com/api/v0\".replace(/\\/+$/, \"\");\nconst isBlob = (value) => typeof Blob !== 'undefined' && value instanceof Blob;\n/**\n * This is the base class for all generated API classes.\n */\nclass BaseAPI {\n    constructor(configuration = new Configuration()) {\n        this.configuration = configuration;\n        this.fetchApi = (url, init) => __awaiter(this, void 0, void 0, function* () {\n            let fetchParams = { url, init };\n            for (const middleware of this.middleware) {\n                if (middleware.pre) {\n                    fetchParams = (yield middleware.pre(Object.assign({ fetch: this.fetchApi }, fetchParams))) || fetchParams;\n                }\n            }\n            let response = yield (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);\n            for (const middleware of this.middleware) {\n                if (middleware.post) {\n                    response = (yield middleware.post({\n                        fetch: this.fetchApi,\n                        url: fetchParams.url,\n                        init: fetchParams.init,\n                        response: response.clone(),\n                    })) || response;\n                }\n            }\n            return response;\n        });\n        this.middleware = configuration.middleware;\n    }\n    withMiddleware(...middlewares) {\n        const next = this.clone();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n    withPreMiddleware(...preMiddlewares) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware(...middlewares);\n    }\n    withPostMiddleware(...postMiddlewares) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware(...middlewares);\n    }\n    request(context, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { url, init } = this.createFetchParams(context, initOverrides);\n            const response = yield this.fetchApi(url, init);\n            if (response.status >= 200 && response.status < 300) {\n                return response;\n            }\n            throw response;\n        });\n    }\n    createFetchParams(context, initOverrides) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n            ? context.body\n            : JSON.stringify(context.body);\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = Object.assign({ method: context.method, headers: headers, body, credentials: this.configuration.credentials }, initOverrides);\n        return { url, init };\n    }\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    clone() {\n        const constructor = this.constructor;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n}\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n        this.name = \"RequiredError\";\n    }\n}\nconst COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\nclass Configuration {\n    constructor(configuration = {}) {\n        this.configuration = configuration;\n    }\n    get basePath() {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n    get fetchApi() {\n        return this.configuration.fetchApi;\n    }\n    get middleware() {\n        return this.configuration.middleware || [];\n    }\n    get queryParamsStringify() {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n    get username() {\n        return this.configuration.username;\n    }\n    get password() {\n        return this.configuration.password;\n    }\n    get apiKey() {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n    get accessToken() {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => __awaiter(this, void 0, void 0, function* () { return accessToken; });\n        }\n        return undefined;\n    }\n    get headers() {\n        return this.configuration.headers;\n    }\n    get credentials() {\n        return this.configuration.credentials;\n    }\n}\nfunction exists(json, key) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\nfunction querystring(params, prefix = '') {\n    return Object.keys(params)\n        .map((key) => {\n        const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n        const value = params[key];\n        if (value instanceof Array) {\n            const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                .join(`&${encodeURIComponent(fullKey)}=`);\n            return `${encodeURIComponent(fullKey)}=${multiValue}`;\n        }\n        if (value instanceof Date) {\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n        }\n        if (value instanceof Object) {\n            return querystring(value, fullKey);\n        }\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n    })\n        .filter(part => part.length > 0)\n        .join('&');\n}\nfunction mapValues(data, fn) {\n    return Object.keys(data).reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [key]: fn(data[key]) })), {});\n}\nfunction canConsumeForm(consumes) {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\nclass JSONApiResponse {\n    constructor(raw, transformer = (jsonValue) => jsonValue) {\n        this.raw = raw;\n        this.transformer = transformer;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.transformer(yield this.raw.json());\n        });\n    }\n}\nclass VoidApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return undefined;\n        });\n    }\n}\nclass BlobApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.raw.blob();\n        });\n    }\n    ;\n}\nclass TextApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.raw.text();\n        });\n    }\n    ;\n}\n\nexport { BASE_PATH, BaseAPI, BlobApiResponse, COLLECTION_FORMATS, Configuration, JSONApiResponse, RequiredError, TextApiResponse, VoidApiResponse, canConsumeForm, exists, mapValues, querystring };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}