{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/internalImplementation/utils/useStoreWithSelector/useStoreWithSelector.js"],"sourcesContent":["'use client'\nimport { useRef, useSyncExternalStore } from 'react';\n\n/**\n * Custom hook that provides a slice of the store state based on a selector function.\n *\n * @template TState - The type of the store state.\n * @template StateSlice - The type of the selected slice of the store state.\n * @param {StoreApi<TState>} api - The store API object.\n * @param {(state: TState) => StateSlice} selector - The selector function to extract the desired store slice.\n * @returns {StateSlice} - The selected slice of the store state.\n *\n * @example\n * const store = createStore(() => ({\n *   count: 0,\n * }))\n *\n * const count = useStoreWithSelector(store, ({ count }) => count);\n */\nconst useStoreWithSelector = (api, selector) => {\n    /**\n     * The cache is either an object or undefined. This allows us to differentiate between:\n     * 1. A selector that resolved to an undefined value\n     * 2. A cache that hasn't been populated yet\n     */\n    const serverSnapshotCacheRef = useRef(undefined);\n    const getSnapshot = () => selector(api.getState());\n    /**\n     * Cache the server snapshot in a ref to prevent infinite loops in Next.js SSR\n     *\n     * Next.js can re-render components multiple times during server-side rendering.\n     * If we don't cache the result of getServerSnapshot, it may cause an infinite loop\n     * as the component keeps re-rendering with new snapshots.\n     *\n     * Prevents this log \"Warning: The result of getServerSnapshot should be cached to avoid an infinite loop\"\n     */\n    const getServerSnapshot = () => {\n        if (serverSnapshotCacheRef.current === undefined) {\n            serverSnapshotCacheRef.current = {\n                value: selector(api.getInitialState()),\n            };\n        }\n        return serverSnapshotCacheRef.current.value;\n    };\n    const slice = useSyncExternalStore(api.subscribe, getSnapshot, getServerSnapshot);\n    return slice;\n};\n\nexport { useStoreWithSelector };\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA;;;;;;;;;;;;;;;CAeC,GACD,MAAM,uBAAuB,CAAC,KAAK;IAC/B;;;;KAIC,GACD,MAAM,yBAAyB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IACtC,MAAM,cAAc,IAAM,SAAS,IAAI,QAAQ;IAC/C;;;;;;;;KAQC,GACD,MAAM,oBAAoB;QACtB,IAAI,uBAAuB,OAAO,KAAK,WAAW;YAC9C,uBAAuB,OAAO,GAAG;gBAC7B,OAAO,SAAS,IAAI,eAAe;YACvC;QACJ;QACA,OAAO,uBAAuB,OAAO,CAAC,KAAK;IAC/C;IACA,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,SAAS,EAAE,aAAa;IAC/D,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/stateConfig.js"],"sourcesContent":["'use client'\n/**\n * Returns the initial state for the SdkStore\n */\nconst createInitialStates = (dynamicContextProps) => ({\n    connectedWalletsInfo: [],\n    connectorsInitializing: {},\n    dynamicContextProps,\n    loadingAndLifecycle: {\n        sessionValidation: false,\n    },\n    nonce: { expiresAt: undefined, nonce: undefined },\n    primaryWalletId: undefined,\n    projectSettings: { expiresAt: undefined, settings: undefined },\n    sendBalanceState: {\n        amount: undefined,\n        chainName: undefined,\n        nativePrice: undefined,\n    },\n    tokenBalancesState: {\n        error: undefined,\n        isError: false,\n        isLoading: false,\n        tokenBalances: undefined,\n    },\n    user: undefined,\n    walletOptions: {\n        groups: {},\n        walletConnectorOptions: [],\n    },\n});\n/**\n * Filters out which variables should be stored to local storage.\n * Also allows transforming them before storage.\n */\nconst transformStateForLocalStorage = (state) => ({\n    connectedWalletsInfo: state.connectedWalletsInfo,\n    nonce: state.nonce,\n    primaryWalletId: state.primaryWalletId,\n    projectSettings: state.projectSettings,\n    user: state.user,\n});\n/**\n * The store version works to invalidate old versions of the stored data\n * it should only be updated when the schema saved to local storage has a braking change.\n *\n * update using the current date in the format YYYY-MM-DD\n */\nconst storeVersion = '2025-02-21';\n\nexport { createInitialStates, storeVersion, transformStateForLocalStorage };\n"],"names":[],"mappings":";;;;;AAAA;AACA;;CAEC,GACD,MAAM,sBAAsB,CAAC,sBAAwB,CAAC;QAClD,sBAAsB,EAAE;QACxB,wBAAwB,CAAC;QACzB;QACA,qBAAqB;YACjB,mBAAmB;QACvB;QACA,OAAO;YAAE,WAAW;YAAW,OAAO;QAAU;QAChD,iBAAiB;QACjB,iBAAiB;YAAE,WAAW;YAAW,UAAU;QAAU;QAC7D,kBAAkB;YACd,QAAQ;YACR,WAAW;YACX,aAAa;QACjB;QACA,oBAAoB;YAChB,OAAO;YACP,SAAS;YACT,WAAW;YACX,eAAe;QACnB;QACA,MAAM;QACN,eAAe;YACX,QAAQ,CAAC;YACT,wBAAwB,EAAE;QAC9B;IACJ,CAAC;AACD;;;CAGC,GACD,MAAM,gCAAgC,CAAC,QAAU,CAAC;QAC9C,sBAAsB,MAAM,oBAAoB;QAChD,OAAO,MAAM,KAAK;QAClB,iBAAiB,MAAM,eAAe;QACtC,iBAAiB,MAAM,eAAe;QACtC,MAAM,MAAM,IAAI;IACpB,CAAC;AACD;;;;;CAKC,GACD,MAAM,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/internalImplementation/utils/syncLegacyStorage/syncLegacyStorage.js"],"sourcesContent":["'use client'\nimport { StorageService } from '@dynamic-labs/utils';\n\nconst AUTH_USER = 'dynamic_authenticated_user';\nconst syncLegacyStorage = (store) => {\n    const legacyUser = StorageService.getItem(AUTH_USER);\n    if (Boolean(legacyUser) && !store.getState().user) {\n        store.setState({ user: legacyUser !== null && legacyUser !== void 0 ? legacyUser : undefined });\n        StorageService.removeItem(AUTH_USER);\n    }\n    return store;\n};\n\nexport { syncLegacyStorage };\n"],"names":[],"mappings":";;;AACA;AAAA;AADA;;AAGA,MAAM,YAAY;AAClB,MAAM,oBAAoB,CAAC;IACvB,MAAM,aAAa,oMAAA,CAAA,iBAAc,CAAC,OAAO,CAAC;IAC1C,IAAI,QAAQ,eAAe,CAAC,MAAM,QAAQ,GAAG,IAAI,EAAE;QAC/C,MAAM,QAAQ,CAAC;YAAE,MAAM,eAAe,QAAQ,eAAe,KAAK,IAAI,aAAa;QAAU;QAC7F,oMAAA,CAAA,iBAAc,CAAC,UAAU,CAAC;IAC9B;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/internalImplementation/store.js"],"sourcesContent":["'use client'\nimport { persist, createStore } from '@dynamic-labs/store';\nimport { STORE_STORAGE_KEY } from '../../utils/constants/localStorage.js';\nimport '../../utils/constants/colors.js';\nimport '../../utils/constants/values.js';\nimport { transformStateForLocalStorage, createInitialStates, storeVersion } from '../stateConfig.js';\nimport { syncLegacyStorage } from './utils/syncLegacyStorage/syncLegacyStorage.js';\n\nlet store;\nconst getStore = () => {\n    if (!store) {\n        throw new Error('Store not initialized');\n    }\n    return store;\n};\nconst removeStoreInstance = () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    store = undefined;\n};\nconst initializeStore = (props) => {\n    var _a;\n    if (store) {\n        return;\n    }\n    const { localStorageSuffix } = (_a = props.settings) !== null && _a !== void 0 ? _a : {};\n    const persistName = localStorageSuffix\n        ? `${STORE_STORAGE_KEY}_${localStorageSuffix}`\n        : STORE_STORAGE_KEY;\n    store = syncLegacyStorage(persist({\n        name: persistName,\n        partialize: transformStateForLocalStorage,\n        storage: getStorage(),\n        // Map each entry to its initialValue\n        store: createStore(() => createInitialStates(props)),\n        version: storeVersion,\n    }));\n};\nconst getStorage = () => {\n    if (typeof localStorage === 'undefined') {\n        return {\n            getItem: () => null,\n            setItem: () => { },\n        };\n    }\n    return window.localStorage;\n};\n\nexport { getStore, initializeStore, removeStoreInstance };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQA,IAAI;AACJ,MAAM,WAAW;IACb,IAAI,CAAC,OAAO;QACR,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;AACA,MAAM,sBAAsB;IACxB,6DAA6D;IAC7D,aAAa;IACb,QAAQ;AACZ;AACA,MAAM,kBAAkB,CAAC;IACrB,IAAI;IACJ,IAAI,OAAO;QACP;IACJ;IACA,MAAM,EAAE,kBAAkB,EAAE,GAAG,CAAC,KAAK,MAAM,QAAQ,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC;IACvF,MAAM,cAAc,qBACd,GAAG,gNAAA,CAAA,oBAAiB,CAAC,CAAC,EAAE,oBAAoB,GAC5C,gNAAA,CAAA,oBAAiB;IACvB,QAAQ,CAAA,GAAA,gQAAA,CAAA,oBAAiB,AAAD,EAAE,CAAA,GAAA,iLAAA,CAAA,UAAO,AAAD,EAAE;QAC9B,MAAM;QACN,YAAY,kMAAA,CAAA,gCAA6B;QACzC,SAAS;QACT,qCAAqC;QACrC,OAAO,CAAA,GAAA,yLAAA,CAAA,cAAW,AAAD,EAAE,IAAM,CAAA,GAAA,kMAAA,CAAA,sBAAmB,AAAD,EAAE;QAC7C,SAAS,kMAAA,CAAA,eAAY;IACzB;AACJ;AACA,MAAM,aAAa;IACf,IAAI,OAAO,iBAAiB,aAAa;QACrC,OAAO;YACH,SAAS,IAAM;YACf,SAAS,KAAQ;QACrB;IACJ;IACA,OAAO,OAAO,YAAY;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/internalImplementation/utils/createStoreState/createStoreState.js"],"sourcesContent":["'use client'\nimport { useStoreWithSelector } from '../useStoreWithSelector/useStoreWithSelector.js';\nimport { getStore } from '../../store.js';\n\nconst createStoreState = (variable) => {\n    const capitalizedName = variable[0].toUpperCase() + variable.slice(1);\n    const useValue = () => useStoreWithSelector(getStore(), (state) => state[variable]);\n    const setValue = (value) => getStore().setState(Object.assign(Object.assign({}, getStore().getState()), { [variable]: value }));\n    const getValue = () => getStore().getState()[variable];\n    const resetValue = () => setValue(getStore().getInitialState()[variable]);\n    return {\n        [`use${capitalizedName}`]: useValue,\n        [`get${capitalizedName}`]: getValue,\n        [`set${capitalizedName}`]: setValue,\n        [`reset${capitalizedName}`]: resetValue,\n    };\n};\n\nexport { createStoreState };\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;AAIA,MAAM,mBAAmB,CAAC;IACtB,MAAM,kBAAkB,QAAQ,CAAC,EAAE,CAAC,WAAW,KAAK,SAAS,KAAK,CAAC;IACnE,MAAM,WAAW,IAAM,CAAA,GAAA,sQAAA,CAAA,uBAAoB,AAAD,EAAE,CAAA,GAAA,sNAAA,CAAA,WAAQ,AAAD;8DAAK,CAAC,QAAU,KAAK,CAAC,SAAS;;IAClF,MAAM,WAAW,CAAC,QAAU,CAAA,GAAA,sNAAA,CAAA,WAAQ,AAAD,IAAI,QAAQ,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,CAAA,GAAA,sNAAA,CAAA,WAAQ,AAAD,IAAI,QAAQ,KAAK;YAAE,CAAC,SAAS,EAAE;QAAM;IAC5H,MAAM,WAAW,IAAM,CAAA,GAAA,sNAAA,CAAA,WAAQ,AAAD,IAAI,QAAQ,EAAE,CAAC,SAAS;IACtD,MAAM,aAAa,IAAM,SAAS,CAAA,GAAA,sNAAA,CAAA,WAAQ,AAAD,IAAI,eAAe,EAAE,CAAC,SAAS;IACxE,OAAO;QACH,CAAC,CAAC,GAAG,EAAE,iBAAiB,CAAC,EAAE;QAC3B,CAAC,CAAC,GAAG,EAAE,iBAAiB,CAAC,EAAE;QAC3B,CAAC,CAAC,GAAG,EAAE,iBAAiB,CAAC,EAAE;QAC3B,CAAC,CAAC,KAAK,EAAE,iBAAiB,CAAC,EAAE;IACjC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/dynamicContextProps/defaultDynamicSettings.js"],"sourcesContent":["'use client'\nconst PUBLIC_PROJECT_LIVE_ENVIRONMENT_ID = '2762a57b-faa4-41ce-9f16-abff9300e2c9';\n/**\n * These values will override undefined values in the dynamic context settings.\n */\nconst defaultDynamicSettings = {\n    appLogoUrl: 'https://demo.dynamic.xyz/assets/dynamic-logo.svg',\n    appName: 'Dynamic Example',\n    debugError: false,\n    deepLinkPreference: 'native',\n    detectNewWalletsForLinking: false,\n    displaySiweStatement: true,\n    enableConnectOnlyFallback: false,\n    enableVisitTrackingOnConnectOnly: true,\n    initialAuthenticationMode: 'connect-and-sign',\n    logLevel: 'WARN',\n    shadowDOMEnabled: true,\n    showLockedWalletView: false,\n    tokensFilter: (tokens) => tokens,\n};\n\nexport { PUBLIC_PROJECT_LIVE_ENVIRONMENT_ID, defaultDynamicSettings };\n"],"names":[],"mappings":";;;;AAAA;AACA,MAAM,qCAAqC;AAC3C;;CAEC,GACD,MAAM,yBAAyB;IAC3B,YAAY;IACZ,SAAS;IACT,YAAY;IACZ,oBAAoB;IACpB,4BAA4B;IAC5B,sBAAsB;IACtB,2BAA2B;IAC3B,kCAAkC;IAClC,2BAA2B;IAC3B,UAAU;IACV,kBAAkB;IAClB,sBAAsB;IACtB,cAAc,CAAC,SAAW;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/dynamicContextProps/dynamicContextProps.js"],"sourcesContent":["'use client'\nimport { useEffect } from 'react';\nimport { MissingEnvironmentIdError } from '@dynamic-labs/utils';\nimport { logger as logger$1 } from '@dynamic-labs/wallet-connector-core';\nimport ApiEndpoint from '../../../config/ApiEndpoint.js';\nimport { logger } from '../../../shared/logger.js';\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\nimport { defaultDynamicSettings, PUBLIC_PROJECT_LIVE_ENVIRONMENT_ID } from './defaultDynamicSettings.js';\n\nconst { getDynamicContextProps, setDynamicContextProps, useDynamicContextProps, } = createStoreState('dynamicContextProps');\nconst getDynamicSettings = () => applyDefaultSettings(getDynamicContextProps().settings);\nconst useDynamicSettings = () => applyDefaultSettings(useDynamicContextProps().settings);\nconst getEnvironmentId = () => getDynamicSettings().environmentId;\nconst useEnvironmentId = () => useDynamicSettings().environmentId;\nconst setEnvironmentId = (environmentId) => {\n    const props = getDynamicContextProps();\n    setDynamicContextProps(Object.assign(Object.assign({}, props), { settings: Object.assign(Object.assign({}, props.settings), { environmentId }) }));\n};\nconst useApiBaseUrl = () => useDynamicSettings().apiBaseUrl;\nconst applyDefaultSettings = (settings) => {\n    const newSettings = Object.assign({}, settings);\n    Object.keys(defaultDynamicSettings).forEach((key) => {\n        const typedKey = key;\n        if (newSettings[typedKey] === undefined) {\n            // @ts-expect-error TS fails to infer this type properly\n            newSettings[typedKey] = defaultDynamicSettings[typedKey];\n        }\n    });\n    return newSettings;\n};\nconst useSyncDynamicContextProps = ({ settings, emitErrors, enableInstrumentation, locale, theme, }) => {\n    const environmentId = useEnvironmentId();\n    if (!environmentId) {\n        throw new MissingEnvironmentIdError();\n    }\n    // We don't want to update the env id here.\n    // If it changes, the user should be logged out and we will detect that in useValidateSession.\n    settings.environmentId = environmentId;\n    useEffect(() => {\n        var _a;\n        if (environmentId === PUBLIC_PROJECT_LIVE_ENVIRONMENT_ID) {\n            logger.warn(`WARNING: DYNAMIC is using a test environment ID ${environmentId}. Please sign up on https://app.dynamic.xyz/ to get your production environment ID.`);\n        }\n        if (settings.logLevel) {\n            logger.setLogLevel(settings.logLevel);\n            logger$1.setLogLevel(settings.logLevel);\n        }\n        ApiEndpoint.setBaseUrl((_a = process.env.DYNAMIC_API_BASE_URL) !== null && _a !== void 0 ? _a : settings.apiBaseUrl);\n        setDynamicContextProps({\n            emitErrors,\n            enableInstrumentation,\n            locale,\n            settings,\n            theme,\n        });\n    }, [\n        emitErrors,\n        enableInstrumentation,\n        environmentId,\n        locale,\n        settings,\n        theme,\n    ]);\n};\n\nexport { applyDefaultSettings, getDynamicContextProps, getDynamicSettings, getEnvironmentId, setDynamicContextProps, setEnvironmentId, useApiBaseUrl, useDynamicContextProps, useDynamicSettings, useEnvironmentId, useSyncDynamicContextProps };\n"],"names":[],"mappings":";;;;;;;;;;;;;AA+CqC;AA9CrC;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASA,MAAM,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AACrG,MAAM,qBAAqB,IAAM,qBAAqB,yBAAyB,QAAQ;AACvF,MAAM,qBAAqB,IAAM,qBAAqB,yBAAyB,QAAQ;AACvF,MAAM,mBAAmB,IAAM,qBAAqB,aAAa;AACjE,MAAM,mBAAmB,IAAM,qBAAqB,aAAa;AACjE,MAAM,mBAAmB,CAAC;IACtB,MAAM,QAAQ;IACd,uBAAuB,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ;QAAE,UAAU,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,MAAM,QAAQ,GAAG;YAAE;QAAc;IAAG;AACnJ;AACA,MAAM,gBAAgB,IAAM,qBAAqB,UAAU;AAC3D,MAAM,uBAAuB,CAAC;IAC1B,MAAM,cAAc,OAAO,MAAM,CAAC,CAAC,GAAG;IACtC,OAAO,IAAI,CAAC,6OAAA,CAAA,yBAAsB,EAAE,OAAO,CAAC,CAAC;QACzC,MAAM,WAAW;QACjB,IAAI,WAAW,CAAC,SAAS,KAAK,WAAW;YACrC,wDAAwD;YACxD,WAAW,CAAC,SAAS,GAAG,6OAAA,CAAA,yBAAsB,CAAC,SAAS;QAC5D;IACJ;IACA,OAAO;AACX;AACA,MAAM,6BAA6B,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,qBAAqB,EAAE,MAAM,EAAE,KAAK,EAAG;IAC/F,MAAM,gBAAgB;IACtB,IAAI,CAAC,eAAe;QAChB,MAAM,IAAI,2LAAA,CAAA,4BAAyB;IACvC;IACA,2CAA2C;IAC3C,8FAA8F;IAC9F,SAAS,aAAa,GAAG;IACzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gDAAE;YACN,IAAI;YACJ,IAAI,kBAAkB,6OAAA,CAAA,qCAAkC,EAAE;gBACtD,8LAAA,CAAA,SAAM,CAAC,IAAI,CAAC,CAAC,gDAAgD,EAAE,cAAc,mFAAmF,CAAC;YACrK;YACA,IAAI,SAAS,QAAQ,EAAE;gBACnB,8LAAA,CAAA,SAAM,CAAC,WAAW,CAAC,SAAS,QAAQ;gBACpC,6LAAA,CAAA,SAAQ,CAAC,WAAW,CAAC,SAAS,QAAQ;YAC1C;YACA,mMAAA,CAAA,UAAW,CAAC,UAAU,CAAC,CAAC,KAAK,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,SAAS,UAAU;YACnH,uBAAuB;gBACnB;gBACA;gBACA;gBACA;gBACA;YACJ;QACJ;+CAAG;QACC;QACA;QACA;QACA;QACA;QACA;KACH;AACL","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/primaryWalletId/primaryWalletId.js"],"sourcesContent":["'use client'\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getPrimaryWalletId, setPrimaryWalletId, usePrimaryWalletId, resetPrimaryWalletId, } = createStoreState('primaryWalletId');\n\nexport { getPrimaryWalletId, resetPrimaryWalletId, setPrimaryWalletId, usePrimaryWalletId };\n"],"names":[],"mappings":";;;;;;AACA;AADA;;AAGA,MAAM,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,oBAAoB,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/user/raiseUserProfileEvent/raiseUserProfileEvent.js"],"sourcesContent":["'use client'\nimport { getProjectSettings } from '../../projectSettings/projectSettings.js';\nimport { dynamicEvents } from '../../../../events/dynamicEvents.js';\n\nconst hasFieldChanged = (fields, record1, record2) => {\n    if (!record1 || !record2)\n        return false;\n    for (const name of fields) {\n        const oldValue = record1[name];\n        const newValue = record2[name];\n        if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n            return true;\n        }\n    }\n    return false;\n};\nconst raiseUserProfileEvent = ({ oldUser, newUser, }) => {\n    var _a, _b;\n    const settings = getProjectSettings();\n    if (!settings)\n        return;\n    const hasKycChanged = hasFieldChanged(settings.kyc.map(({ name }) => name), oldUser, newUser);\n    const hasCustomFieldsChanged = hasFieldChanged((_b = (_a = settings.customFields) === null || _a === void 0 ? void 0 : _a.map(({ name }) => name)) !== null && _b !== void 0 ? _b : [], oldUser.metadata, newUser.metadata);\n    if (!hasKycChanged && !hasCustomFieldsChanged)\n        return;\n    dynamicEvents.emit('userProfileUpdated', newUser);\n};\n\nexport { hasFieldChanged, raiseUserProfileEvent };\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAIA,MAAM,kBAAkB,CAAC,QAAQ,SAAS;IACtC,IAAI,CAAC,WAAW,CAAC,SACb,OAAO;IACX,KAAK,MAAM,QAAQ,OAAQ;QACvB,MAAM,WAAW,OAAO,CAAC,KAAK;QAC9B,MAAM,WAAW,OAAO,CAAC,KAAK;QAC9B,IAAI,KAAK,SAAS,CAAC,cAAc,KAAK,SAAS,CAAC,WAAW;YACvD,OAAO;QACX;IACJ;IACA,OAAO;AACX;AACA,MAAM,wBAAwB,CAAC,EAAE,OAAO,EAAE,OAAO,EAAG;IAChD,IAAI,IAAI;IACR,MAAM,WAAW,CAAA,GAAA,kOAAA,CAAA,qBAAkB,AAAD;IAClC,IAAI,CAAC,UACD;IACJ,MAAM,gBAAgB,gBAAgB,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAK,OAAO,SAAS;IACrF,MAAM,yBAAyB,gBAAgB,CAAC,KAAK,CAAC,KAAK,SAAS,YAAY,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAK,KAAK,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,EAAE,EAAE,QAAQ,QAAQ,EAAE,QAAQ,QAAQ;IAC1N,IAAI,CAAC,iBAAiB,CAAC,wBACnB;IACJ,qMAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,sBAAsB;AAC7C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/user/user.js"],"sourcesContent":["'use client'\nimport { useRef } from 'react';\nimport { logger } from '../../../shared/logger.js';\nimport { hasPendingRequirements } from '../../../shared/utils/functions/hasPendingRequirements/hasPendingRequirements.js';\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\nimport { raiseUserProfileEvent } from './raiseUserProfileEvent/raiseUserProfileEvent.js';\n\nconst { getUser, setUser: setUserRaw, useUser: useUserRaw, } = createStoreState('user');\nconst setUser = (user) => {\n    if (user) {\n        logger.metaData.set('user', user);\n    }\n    else {\n        logger.metaData.set('user', undefined);\n    }\n    const oldUser = getUser();\n    setUserRaw(user);\n    if (user && oldUser)\n        raiseUserProfileEvent({ newUser: user, oldUser });\n};\nconst useUser = () => {\n    // after user has fully logged in (user is defined), it should never go back to\n    // not being fully logged in (userWithMissingInfo defined instead of user),\n    // unless it's logged out (no user or userWithMissingInfo defined)\n    const hasFullyLoggedIn = useRef(false);\n    const userFromStore = useUserRaw();\n    if (!userFromStore) {\n        hasFullyLoggedIn.current = false;\n        return {};\n    }\n    // adding userWithMissingInfo to avoid breaking changes for customer who consider that when we have a user,\n    // it means that they are already fully authenticated.\n    // since we won't have onboarding jwt anymore, the idea is to just store the user in LS and either use the user state\n    // or userWithMissingInfo, depending on the value of missing fields or mfa required.\n    // this is just following our existing logic of how we handle authToken vs onboardingOnlyToken.\n    if (!hasFullyLoggedIn.current && hasPendingRequirements(userFromStore)) {\n        return { userWithMissingInfo: userFromStore };\n    }\n    hasFullyLoggedIn.current = true;\n    return { user: userFromStore };\n};\nconst useUserCoalesced = () => {\n    var _a;\n    const user = useUser();\n    return (_a = user.user) !== null && _a !== void 0 ? _a : user.userWithMissingInfo;\n};\n\nexport { getUser, setUser, useUser, useUserCoalesced };\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,EAAE,OAAO,EAAE,SAAS,UAAU,EAAE,SAAS,UAAU,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AAChF,MAAM,UAAU,CAAC;IACb,IAAI,MAAM;QACN,8LAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ;IAChC,OACK;QACD,8LAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ;IAChC;IACA,MAAM,UAAU;IAChB,WAAW;IACX,IAAI,QAAQ,SACR,CAAA,GAAA,sPAAA,CAAA,wBAAqB,AAAD,EAAE;QAAE,SAAS;QAAM;IAAQ;AACvD;AACA,MAAM,UAAU;IACZ,+EAA+E;IAC/E,2EAA2E;IAC3E,kEAAkE;IAClE,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAChC,MAAM,gBAAgB;IACtB,IAAI,CAAC,eAAe;QAChB,iBAAiB,OAAO,GAAG;QAC3B,OAAO,CAAC;IACZ;IACA,2GAA2G;IAC3G,sDAAsD;IACtD,qHAAqH;IACrH,oFAAoF;IACpF,+FAA+F;IAC/F,IAAI,CAAC,iBAAiB,OAAO,IAAI,CAAA,GAAA,8PAAA,CAAA,yBAAsB,AAAD,EAAE,gBAAgB;QACpE,OAAO;YAAE,qBAAqB;QAAc;IAChD;IACA,iBAAiB,OAAO,GAAG;IAC3B,OAAO;QAAE,MAAM;IAAc;AACjC;AACA,MAAM,mBAAmB;IACrB,IAAI;IACJ,MAAM,OAAO;IACb,OAAO,CAAC,KAAK,KAAK,IAAI,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,KAAK,mBAAmB;AACrF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/connectedWalletsInfo/connectedWalletsInfo.js"],"sourcesContent":["'use client'\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getConnectedWalletsInfo, resetConnectedWalletsInfo, setConnectedWalletsInfo, useConnectedWalletsInfo, } = createStoreState('connectedWalletsInfo');\n\nexport { getConnectedWalletsInfo, resetConnectedWalletsInfo, setConnectedWalletsInfo, useConnectedWalletsInfo };\n"],"names":[],"mappings":";;;;;;AACA;AADA;;AAGA,MAAM,EAAE,uBAAuB,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,uBAAuB,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/user/storeAuthTokenAndUser/storeAuthTokenAndUser.js"],"sourcesContent":["'use client'\nimport { createUserProfileFromSdkUser } from '../../../../utils/functions/createUserProfile/createUserProfile.js';\nimport { getUser, setUser } from '../user.js';\nimport { storeAuthToken } from '../../../../utils/functions/storeAuthToken/storeAuthToken.js';\nimport { getProjectSettings } from '../../projectSettings/projectSettings.js';\n\nconst storeAuthTokenAndUser = (params) => {\n    storeAuthToken(params);\n    const userProfile = createUserProfileFromSdkUser(params.user);\n    if (params.preserveFieldsWithVerification) {\n        const oldUser = getUser();\n        const settings = getProjectSettings();\n        if (settings === null || settings === void 0 ? void 0 : settings.kyc) {\n            for (const field of settings.kyc) {\n                if (!field.verify)\n                    continue;\n                const property = field.name;\n                // @ts-expect-error TS doesn't know that the property exists\n                userProfile[property] = oldUser === null || oldUser === void 0 ? void 0 : oldUser[property];\n            }\n        }\n    }\n    setUser(userProfile);\n    return userProfile;\n};\n\nexport { storeAuthTokenAndUser };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AAJA;;;;;AAMA,MAAM,wBAAwB,CAAC;IAC3B,CAAA,GAAA,oOAAA,CAAA,iBAAc,AAAD,EAAE;IACf,MAAM,cAAc,CAAA,GAAA,0OAAA,CAAA,+BAA4B,AAAD,EAAE,OAAO,IAAI;IAC5D,IAAI,OAAO,8BAA8B,EAAE;QACvC,MAAM,UAAU,CAAA,GAAA,4MAAA,CAAA,UAAO,AAAD;QACtB,MAAM,WAAW,CAAA,GAAA,kOAAA,CAAA,qBAAkB,AAAD;QAClC,IAAI,aAAa,QAAQ,aAAa,KAAK,IAAI,KAAK,IAAI,SAAS,GAAG,EAAE;YAClE,KAAK,MAAM,SAAS,SAAS,GAAG,CAAE;gBAC9B,IAAI,CAAC,MAAM,MAAM,EACb;gBACJ,MAAM,WAAW,MAAM,IAAI;gBAC3B,4DAA4D;gBAC5D,WAAW,CAAC,SAAS,GAAG,YAAY,QAAQ,YAAY,KAAK,IAAI,KAAK,IAAI,OAAO,CAAC,SAAS;YAC/F;QACJ;IACJ;IACA,CAAA,GAAA,4MAAA,CAAA,UAAO,AAAD,EAAE;IACR,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/loadingAndLifecycle.js"],"sourcesContent":["'use client'\nimport { createStoreState } from '../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getLoadingAndLifecycle, setLoadingAndLifecycle, useLoadingAndLifecycle, } = createStoreState('loadingAndLifecycle');\n\nexport { getLoadingAndLifecycle, setLoadingAndLifecycle, useLoadingAndLifecycle };\n"],"names":[],"mappings":";;;;;AACA;AADA;;AAGA,MAAM,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/walletOptions/walletOptions.js"],"sourcesContent":["'use client'\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst walletOptionsState = createStoreState('walletOptions');\nconst { getWalletOptions, useWalletOptions } = walletOptionsState;\nconst getWalletConnectorOptions = () => getWalletOptions().walletConnectorOptions;\nconst useWalletConnectorOptions = () => useWalletOptions().walletConnectorOptions;\nconst setWalletConnectorOptions = (walletConnectorOptions) => {\n    const options = getWalletOptions();\n    walletOptionsState.setWalletOptions(Object.assign(Object.assign({}, options), { walletConnectorOptions }));\n};\nconst getWalletGroups = () => getWalletOptions().groups;\nconst useWalletGroups = () => useWalletOptions().groups;\nconst setWalletGroups = (groups) => {\n    const options = getWalletOptions();\n    walletOptionsState.setWalletOptions(Object.assign(Object.assign({}, options), { groups }));\n};\n/**\n * Merges the current wallet groups with the new groups.\n * @param groups - The new wallet groups to merge.\n */\nconst mergeWalletGroups = (groups) => {\n    const currentGroups = getWalletGroups();\n    const mergedGroups = Object.assign(Object.assign({}, currentGroups), groups);\n    setWalletGroups(mergedGroups);\n};\n/**\n * Merges the current wallet connector options with the new options.\n * @param options - The new wallet connector options to merge.\n */\nconst mergeWalletConnectorOptions = (options) => {\n    const currentWalletOptions = getWalletConnectorOptions();\n    // Create a unique key for each wallet option based on its key and connected chain\n    const getKey = (walletOption) => `${walletOption.key}-${walletOption.walletConnector.connectedChain}`;\n    const currentWalletOptionsMap = new Map(currentWalletOptions.map((walletOption) => [\n        getKey(walletOption),\n        walletOption,\n    ]));\n    options.forEach((walletOption) => {\n        currentWalletOptionsMap.set(getKey(walletOption), walletOption);\n    });\n    const updatedWalletOptions = Array.from(currentWalletOptionsMap.values());\n    setWalletConnectorOptions(updatedWalletOptions);\n};\n\nexport { getWalletConnectorOptions, getWalletGroups, getWalletOptions, mergeWalletConnectorOptions, mergeWalletGroups, setWalletConnectorOptions, setWalletGroups, useWalletConnectorOptions, useWalletGroups, useWalletOptions };\n"],"names":[],"mappings":";;;;;;;;;;;;AACA;AADA;;AAGA,MAAM,qBAAqB,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AAC5C,MAAM,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,GAAG;AAC/C,MAAM,4BAA4B,IAAM,mBAAmB,sBAAsB;AACjF,MAAM,4BAA4B,IAAM,mBAAmB,sBAAsB;AACjF,MAAM,4BAA4B,CAAC;IAC/B,MAAM,UAAU;IAChB,mBAAmB,gBAAgB,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,UAAU;QAAE;IAAuB;AAC3G;AACA,MAAM,kBAAkB,IAAM,mBAAmB,MAAM;AACvD,MAAM,kBAAkB,IAAM,mBAAmB,MAAM;AACvD,MAAM,kBAAkB,CAAC;IACrB,MAAM,UAAU;IAChB,mBAAmB,gBAAgB,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,UAAU;QAAE;IAAO;AAC3F;AACA;;;CAGC,GACD,MAAM,oBAAoB,CAAC;IACvB,MAAM,gBAAgB;IACtB,MAAM,eAAe,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,gBAAgB;IACrE,gBAAgB;AACpB;AACA;;;CAGC,GACD,MAAM,8BAA8B,CAAC;IACjC,MAAM,uBAAuB;IAC7B,kFAAkF;IAClF,MAAM,SAAS,CAAC,eAAiB,GAAG,aAAa,GAAG,CAAC,CAAC,EAAE,aAAa,eAAe,CAAC,cAAc,EAAE;IACrG,MAAM,0BAA0B,IAAI,IAAI,qBAAqB,GAAG,CAAC,CAAC,eAAiB;YAC/E,OAAO;YACP;SACH;IACD,QAAQ,OAAO,CAAC,CAAC;QACb,wBAAwB,GAAG,CAAC,OAAO,eAAe;IACtD;IACA,MAAM,uBAAuB,MAAM,IAAI,CAAC,wBAAwB,MAAM;IACtE,0BAA0B;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/internalImplementation/utils/createPartialStoreSetter/createPartialStoreSetter.js"],"sourcesContent":["'use client'\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createPartialStoreSetter = ({ get, set }) => (key, value) => set(Object.assign(Object.assign({}, get()), { [key]: value }));\n\nexport { createPartialStoreSetter };\n"],"names":[],"mappings":";;;AAAA;AACA,8DAA8D;AAC9D,MAAM,2BAA2B,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAK,CAAC,KAAK,QAAU,IAAI,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,QAAQ;YAAE,CAAC,IAAI,EAAE;QAAM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/sendBalances.js"],"sourcesContent":["'use client'\nimport { createPartialStoreSetter } from '../internalImplementation/utils/createPartialStoreSetter/createPartialStoreSetter.js';\nimport { createStoreState } from '../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getSendBalanceState, setSendBalanceState, useSendBalanceState, resetSendBalanceState, } = createStoreState('sendBalanceState');\nconst setSendBalanceVariable = createPartialStoreSetter({\n    get: getSendBalanceState,\n    set: setSendBalanceState,\n});\n\nexport { getSendBalanceState, resetSendBalanceState, setSendBalanceState, setSendBalanceVariable, useSendBalanceState };\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAFA;;;AAIA,MAAM,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,qBAAqB,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AACnH,MAAM,yBAAyB,CAAA,GAAA,8QAAA,CAAA,2BAAwB,AAAD,EAAE;IACpD,KAAK;IACL,KAAK;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/connectorsInitializing/connectorsInitializing.js"],"sourcesContent":["'use client'\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getConnectorsInitializing: getConnectorsInitializingState, resetConnectorsInitializing, setConnectorsInitializing, useConnectorsInitializing, } = createStoreState('connectorsInitializing');\nconst setConnectorInitializing = (connectorKey, initializing) => {\n    const currentState = getConnectorsInitializingState();\n    const updatedState = Object.assign(Object.assign({}, currentState), { [connectorKey]: initializing });\n    setConnectorsInitializing(updatedState);\n};\n\nexport { resetConnectorsInitializing, setConnectorInitializing, useConnectorsInitializing };\n"],"names":[],"mappings":";;;;;AACA;AADA;;AAGA,MAAM,EAAE,2BAA2B,8BAA8B,EAAE,2BAA2B,EAAE,yBAAyB,EAAE,yBAAyB,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AAC3K,MAAM,2BAA2B,CAAC,cAAc;IAC5C,MAAM,eAAe;IACrB,MAAM,eAAe,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,eAAe;QAAE,CAAC,aAAa,EAAE;IAAa;IACnG,0BAA0B;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/tokenBalances.js"],"sourcesContent":["'use client'\nimport { createPartialStoreSetter } from '../internalImplementation/utils/createPartialStoreSetter/createPartialStoreSetter.js';\nimport { createStoreState } from '../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getTokenBalancesState, setTokenBalancesState, useTokenBalancesState } = createStoreState('tokenBalancesState');\nconst setTokenBalanceVariable = createPartialStoreSetter({\n    get: getTokenBalancesState,\n    set: setTokenBalancesState,\n});\n\nexport { getTokenBalancesState, setTokenBalanceVariable, useTokenBalancesState };\n"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;AAIA,MAAM,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AACjG,MAAM,0BAA0B,CAAA,GAAA,8QAAA,CAAA,2BAAwB,AAAD,EAAE;IACrD,KAAK;IACL,KAAK;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 715, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/projectSettings/projectSettings.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { DynamicError } from '@dynamic-labs/utils';\nimport '@dynamic-labs/sdk-api-core';\nimport '../../../config/ApiEndpoint.js';\nimport '../../../utils/constants/values.js';\nimport '@dynamic-labs/multi-wallet';\nimport '../../../shared/logger.js';\nimport '../../../utils/constants/colors.js';\nimport 'react-international-phone';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport '../../../shared/consts/index.js';\nimport '../nonce/nonce.js';\nimport { useEnvironmentId } from '../dynamicContextProps/dynamicContextProps.js';\nimport '../primaryWalletId/primaryWalletId.js';\nimport { getUser } from '../user/user.js';\nimport { fetchProjectSettings } from '../../../data/api/settings/settings.js';\nimport '../../../locale/locale.js';\nimport { useDynamicEvents } from '../../../utils/hooks/events/useDynamicEvents/useDynamicEvents.js';\nimport '../../../context/DynamicContext/DynamicContext.js';\nimport '../../../context/CaptchaContext/CaptchaContext.js';\nimport '../../../context/ErrorContext/ErrorContext.js';\nimport '../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../context/UserWalletsContext/UserWalletsContext.js';\nimport '../../../events/dynamicEvents.js';\nimport { getConnectedWalletsInfo } from '../connectedWalletsInfo/connectedWalletsInfo.js';\nimport '../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport '../../../utils/functions/compareChains/compareChains.js';\nimport '../../../context/ThemeContext/ThemeContext.js';\nimport '../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport 'bs58';\nimport { usePromise } from '../../../utils/hooks/usePromise/usePromise.js';\nimport '@dynamic-labs/types';\nimport '../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../context/LoadingContext/LoadingContext.js';\nimport '../../../context/WalletContext/WalletContext.js';\nimport '../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';\nimport 'yup';\nimport '../../../context/MockContext/MockContext.js';\nimport '../../../views/CollectUserDataView/useFields.js';\nimport '../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../loadingAndLifecycle.js';\nimport '../walletOptions/walletOptions.js';\nimport 'react-i18next';\nimport '../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../components/Alert/Alert.js';\nimport '../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../components/IconButton/IconButton.js';\nimport '../../../components/InlineWidget/InlineWidget.js';\nimport '../../../components/Input/Input.js';\nimport '../../../components/IsBrowser/IsBrowser.js';\nimport '../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../components/OverlayCard/OverlayCard.js';\nimport '../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../components/Popper/Popper/Popper.js';\nimport '../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.js';\nimport '../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';\nimport '../../../context/ConnectWithOtpContext/constants.js';\nimport '../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../context/FooterAnimationContext/index.js';\nimport '../../../context/ErrorContext/hooks/useErrorText/useErrorText.js';\nimport '../../../context/PasskeyContext/PasskeyContext.js';\nimport '../sendBalances.js';\nimport '../connectorsInitializing/connectorsInitializing.js';\nimport '../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../context/OnrampContext/OnrampContext.js';\nimport '../../../widgets/DynamicWidget/views/ReceiveWalletFunds/ReceiveWalletFunds.js';\nimport '../../../../index.js';\nimport '../tokenBalances.js';\nimport '../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getProjectSettings: getProjectSettingsRaw, setProjectSettings, useProjectSettings: useProjectSettingsRaw, resetProjectSettings, } = createStoreState('projectSettings');\nconst getProjectSettings = () => getProjectSettingsRaw().settings;\nconst getProjectSettingsExpireAt = () => getProjectSettingsRaw().expiresAt;\nconst useProjectSettings = () => useProjectSettingsRaw().settings;\nconst useFetchProjectSettings = ({ retries = 2, } = {}) => {\n    const originalProjectSettings = getProjectSettings();\n    const expiresAt = getProjectSettingsExpireAt();\n    const isProjectSettingsPresent = Boolean(originalProjectSettings);\n    const didProjectSettingsExpire = expiresAt ? expiresAt < Date.now() : false;\n    const hasUser = getUser() !== undefined;\n    const hasConnectedWallet = getConnectedWalletsInfo().length > 0;\n    const enableProjectSettingsFetch = !isProjectSettingsPresent ||\n        didProjectSettingsExpire ||\n        (hasUser === false && hasConnectedWallet === false);\n    const environmentId = useEnvironmentId();\n    const { retrigger } = usePromise(() => __awaiter(void 0, void 0, void 0, function* () {\n        const settings = yield fetchProjectSettings(environmentId);\n        if (!settings)\n            throw new DynamicError('Settings are not defined');\n        return settings;\n    }), {\n        deps: [environmentId],\n        enabled: enableProjectSettingsFetch,\n        onResolve: (projectSettings) => {\n            const expiry = new Date().getTime() + 60000 * 5;\n            setProjectSettings({\n                expiresAt: expiry,\n                settings: projectSettings,\n            });\n        },\n        retries,\n    });\n    useDynamicEvents('logout', retrigger);\n    return { refetchProjectSettings: retrigger };\n};\n\nexport { getProjectSettings, getProjectSettingsExpireAt, resetProjectSettings, setProjectSettings, useFetchProjectSettings, useProjectSettings };\n"],"names":[],"mappings":";;;;;;;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA,MAAM,EAAE,oBAAoB,qBAAqB,EAAE,kBAAkB,EAAE,oBAAoB,qBAAqB,EAAE,oBAAoB,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AAC7J,MAAM,qBAAqB,IAAM,wBAAwB,QAAQ;AACjE,MAAM,6BAA6B,IAAM,wBAAwB,SAAS;AAC1E,MAAM,qBAAqB,IAAM,wBAAwB,QAAQ;AACjE,MAAM,0BAA0B,CAAC,EAAE,UAAU,CAAC,EAAG,GAAG,CAAC,CAAC;IAClD,MAAM,0BAA0B;IAChC,MAAM,YAAY;IAClB,MAAM,2BAA2B,QAAQ;IACzC,MAAM,2BAA2B,YAAY,YAAY,KAAK,GAAG,KAAK;IACtE,MAAM,UAAU,CAAA,GAAA,4MAAA,CAAA,UAAO,AAAD,QAAQ;IAC9B,MAAM,qBAAqB,CAAA,GAAA,4OAAA,CAAA,0BAAuB,AAAD,IAAI,MAAM,GAAG;IAC9D,MAAM,6BAA6B,CAAC,4BAChC,4BACC,YAAY,SAAS,uBAAuB;IACjD,MAAM,gBAAgB,CAAA,GAAA,0OAAA,CAAA,mBAAgB,AAAD;IACrC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,wNAAA,CAAA,aAAU,AAAD;8CAAE,IAAM,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK;sDAAG;oBACrE,MAAM,WAAW,MAAM,CAAA,GAAA,iNAAA,CAAA,uBAAoB,AAAD,EAAE;oBAC5C,IAAI,CAAC,UACD,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC;oBAC3B,OAAO;gBACX;;6CAAI;QACA,MAAM;YAAC;SAAc;QACrB,SAAS;QACT,SAAS;kDAAE,CAAC;gBACR,MAAM,SAAS,IAAI,OAAO,OAAO,KAAK,QAAQ;gBAC9C,mBAAmB;oBACf,WAAW;oBACX,UAAU;gBACd;YACJ;;QACA;IACJ;IACA,CAAA,GAAA,8OAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU;IAC3B,OAAO;QAAE,wBAAwB;IAAU;AAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":["file:///Users/marshabl/Dropbox/CS/typescript_practice/dynamic-paymaster-starter/node_modules/%40dynamic-labs/sdk-react-core/src/lib/store/state/nonce/nonce.js"],"sourcesContent":["'use client'\nimport { __awaiter } from '../../../../../_virtual/_tslib.js';\nimport { DynamicError } from '@dynamic-labs/utils';\nimport '@dynamic-labs/sdk-api-core';\nimport '../../../config/ApiEndpoint.js';\nimport '../../../utils/constants/values.js';\nimport '@dynamic-labs/multi-wallet';\nimport '../../../shared/logger.js';\nimport '../../../utils/constants/colors.js';\nimport 'react-international-phone';\nimport '@dynamic-labs/iconic';\nimport '@dynamic-labs/wallet-connector-core';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '../../../context/ViewContext/ViewContext.js';\nimport '@dynamic-labs/wallet-book';\nimport '../../../shared/consts/index.js';\nimport '../projectSettings/projectSettings.js';\nimport { useEnvironmentId, getEnvironmentId } from '../dynamicContextProps/dynamicContextProps.js';\nimport '../primaryWalletId/primaryWalletId.js';\nimport '../user/user.js';\nimport { getNonce as getNonce$1 } from '../../../data/api/utils.js';\nimport '../../../locale/locale.js';\nimport { useDynamicEvents } from '../../../utils/hooks/events/useDynamicEvents/useDynamicEvents.js';\nimport '../../../context/DynamicContext/DynamicContext.js';\nimport '../../../context/CaptchaContext/CaptchaContext.js';\nimport '../../../context/ErrorContext/ErrorContext.js';\nimport '../../../context/AccessDeniedContext/AccessDeniedContext.js';\nimport '../../../context/AccountExistsContext/AccountExistsContext.js';\nimport '../../../context/UserWalletsContext/UserWalletsContext.js';\nimport '../../../events/dynamicEvents.js';\nimport '../connectedWalletsInfo/connectedWalletsInfo.js';\nimport '../../../context/VerificationContext/VerificationContext.js';\nimport 'react-dom';\nimport '../../../utils/functions/compareChains/compareChains.js';\nimport '../../../context/ThemeContext/ThemeContext.js';\nimport '../../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';\nimport 'bs58';\nimport { usePromise } from '../../../utils/hooks/usePromise/usePromise.js';\nimport '@dynamic-labs/types';\nimport '../../../context/SocialRedirectContext/SocialRedirectContext.js';\nimport '../../../context/LoadingContext/LoadingContext.js';\nimport '../../../context/WalletContext/WalletContext.js';\nimport '../../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';\nimport 'yup';\nimport '../../../context/MockContext/MockContext.js';\nimport '../../../views/CollectUserDataView/useFields.js';\nimport '../../../context/FieldsStateContext/FieldsStateContext.js';\nimport '../../../context/UserFieldEditorContext/UserFieldEditorContext.js';\nimport '@dynamic-labs/rpc-providers';\nimport '../loadingAndLifecycle.js';\nimport '../walletOptions/walletOptions.js';\nimport 'react-i18next';\nimport '../../../components/Accordion/components/AccordionItem/AccordionItem.js';\nimport '../../../components/Alert/Alert.js';\nimport '../../../components/ShadowDOM/ShadowDOM.js';\nimport '../../../components/IconButton/IconButton.js';\nimport '../../../components/InlineWidget/InlineWidget.js';\nimport '../../../components/Input/Input.js';\nimport '../../../components/IsBrowser/IsBrowser.js';\nimport '../../../components/MenuList/Dropdown/Dropdown.js';\nimport '../../../components/OverlayCard/OverlayCard.js';\nimport '../../../components/Transition/ZoomTransition/ZoomTransition.js';\nimport '../../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';\nimport '../../../components/Transition/OpacityTransition/OpacityTransition.js';\nimport '../../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';\nimport '../../../components/Popper/Popper/Popper.js';\nimport '../../../components/Popper/PopperContext/PopperContext.js';\nimport 'react-focus-lock';\nimport 'qrcode';\nimport 'formik';\nimport '../../../utils/hooks/useSubdomainCheck/useSubdomainCheck.js';\nimport '../../../context/WalletGroupContext/WalletGroupContext.js';\nimport '../../../context/IpConfigurationContext/IpConfigurationContext.js';\nimport '../../../context/ConnectWithOtpContext/ConnectWithOtpContext.js';\nimport '../../../context/ConnectWithOtpContext/constants.js';\nimport '../../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';\nimport '@hcaptcha/react-hcaptcha';\nimport '../../../widgets/DynamicWidget/context/DynamicWidgetContext.js';\nimport '../../../context/FooterAnimationContext/index.js';\nimport '../../../context/ErrorContext/hooks/useErrorText/useErrorText.js';\nimport '../../../context/PasskeyContext/PasskeyContext.js';\nimport '../sendBalances.js';\nimport '../connectorsInitializing/connectorsInitializing.js';\nimport '../../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';\nimport '../../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';\nimport '../../../views/TransactionConfirmationView/TransactionConfirmationView.js';\nimport '../../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';\nimport '../../../context/OnrampContext/OnrampContext.js';\nimport '../../../widgets/DynamicWidget/views/ReceiveWalletFunds/ReceiveWalletFunds.js';\nimport '../../../../index.js';\nimport '../tokenBalances.js';\nimport '../../../shared/utils/functions/getInitialUrl/getInitialUrl.js';\nimport { createStoreState } from '../../internalImplementation/utils/createStoreState/createStoreState.js';\n\nconst { getNonce: getNonceRaw, setNonce, useNonce: useNonceRaw, } = createStoreState('nonce');\nconst getNonce = () => getNonceRaw().nonce;\nconst useNonce = () => useNonceRaw().nonce;\nconst storeNewNonce = (newNonce) => {\n    const expiry = new Date().getTime() + 60000 * 60 * 24;\n    setNonce({\n        expiresAt: expiry,\n        nonce: newNonce,\n    });\n};\nconst useFetchNonce = ({ shouldFetch = true, retries = 2, } = {}) => {\n    const nonce = useNonce();\n    const environmentId = useEnvironmentId();\n    const { retrigger } = usePromise(() => __awaiter(void 0, void 0, void 0, function* () { return getNonce$1(environmentId); }), {\n        deps: [environmentId],\n        enabled: shouldFetch && !nonce,\n        onResolve: (newNonce) => {\n            storeNewNonce(newNonce);\n        },\n        retries,\n    });\n    useDynamicEvents('logout', retrigger);\n    return nonce;\n};\nconst consumeNonce = () => {\n    const nonce = getNonce();\n    if (!nonce) {\n        throw new DynamicError('Nonce is not defined');\n    }\n    setNonce({\n        expiresAt: undefined,\n        nonce: undefined,\n    });\n    return nonce;\n};\nconst fetchAndStoreNonce = () => __awaiter(void 0, void 0, void 0, function* () {\n    const existingNonce = getNonce();\n    if (existingNonce) {\n        return;\n    }\n    const environmentId = getEnvironmentId();\n    const nonce = yield getNonce$1(environmentId);\n    storeNewNonce(nonce);\n});\n\nexport { consumeNonce, fetchAndStoreNonce, getNonce, setNonce, useFetchNonce, useNonce };\n"],"names":[],"mappings":";;;;;;;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA,MAAM,EAAE,UAAU,WAAW,EAAE,QAAQ,EAAE,UAAU,WAAW,EAAG,GAAG,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE;AACrF,MAAM,WAAW,IAAM,cAAc,KAAK;AAC1C,MAAM,WAAW,IAAM,cAAc,KAAK;AAC1C,MAAM,gBAAgB,CAAC;IACnB,MAAM,SAAS,IAAI,OAAO,OAAO,KAAK,QAAQ,KAAK;IACnD,SAAS;QACL,WAAW;QACX,OAAO;IACX;AACJ;AACA,MAAM,gBAAgB,CAAC,EAAE,cAAc,IAAI,EAAE,UAAU,CAAC,EAAG,GAAG,CAAC,CAAC;IAC5D,MAAM,QAAQ;IACd,MAAM,gBAAgB,CAAA,GAAA,0OAAA,CAAA,mBAAgB,AAAD;IACrC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,wNAAA,CAAA,aAAU,AAAD;oCAAE,IAAM,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK;4CAAG;oBAAe,OAAO,CAAA,GAAA,kMAAA,CAAA,WAAU,AAAD,EAAE;gBAAgB;;mCAAI;QAC1H,MAAM;YAAC;SAAc;QACrB,SAAS,eAAe,CAAC;QACzB,SAAS;wCAAE,CAAC;gBACR,cAAc;YAClB;;QACA;IACJ;IACA,CAAA,GAAA,8OAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU;IAC3B,OAAO;AACX;AACA,MAAM,eAAe;IACjB,MAAM,QAAQ;IACd,IAAI,CAAC,OAAO;QACR,MAAM,IAAI,8KAAA,CAAA,eAAY,CAAC;IAC3B;IACA,SAAS;QACL,WAAW;QACX,OAAO;IACX;IACA,OAAO;AACX;AACA,MAAM,qBAAqB,IAAM,CAAA,GAAA,kLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;QAC/D,MAAM,gBAAgB;QACtB,IAAI,eAAe;YACf;QACJ;QACA,MAAM,gBAAgB,CAAA,GAAA,0OAAA,CAAA,mBAAgB,AAAD;QACrC,MAAM,QAAQ,MAAM,CAAA,GAAA,kMAAA,CAAA,WAAU,AAAD,EAAE;QAC/B,cAAc;IAClB","ignoreList":[0],"debugId":null}}]
}